<?php
session_start();
require_once("classconexion.php");
include_once('funciones_basicas.php');

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

/* Clase principal de PHPMailer */
require("PHPMailer/PHPMailer.php");

/* Clase SMTP, necesaria si quieres usar SMTP */
require("PHPMailer/SMTP.php");

/* Clase Exception */
require("PHPMailer/Exception.php");

// Motrar todos los errores de PHP
error_reporting(E_ALL);//muestro errores
//error_reporting(0);//desactivo errores
ini_set('display_errors', '1');

//evita el error Fatal error: Allowed memory size of X bytes exhausted (tried to allocate Y bytes)...
ini_set('memory_limit', '-1'); 
// es lo mismo que set_time_limit(300) ;
ini_set('max_execution_time', 3800); 

################################## CLASE LOGIN ###################################
class Login extends Db
{

public function __construct()
{
	parent::__construct();
} 	

########################### CLASE LOGUEO ###############################

###################### FUNCION PARA EXPIRAR SESSION ####################
public function ExpiraSession()
{
   if(!isset($_SESSION['usuario'])){// Esta logeado?.
		header("Location: logout.php"); 
	}
	//Verifico el tiempo si esta seteado, caso contrario lo seteo.
	if(isset($_SESSION['time'])){
		$tiempo = limpiar($_SESSION['time']);
	} else {
		$tiempo = strtotime(date("Y-m-d H:i:s"));
	}

   //Verifico el tiempo si esta seteado, caso contrario lo seteo.
   $inactividad = 7200; //(1 hora de cierre sesion )600 equivale a 10 minutos
   $actual      = time();
   $tiempo = (isset($_SESSION['time']) ? $_SESSION['time'] : strtotime(date("Y-m-d H:i:s")));

   if ($actual-$tiempo >= $inactividad) { ?>
      <script type='text/javascript'>
         alert("SU SESSION A EXPIRADO \nPOR FAVOR LOGUEESE DE NUEVO PARA ACCEDER AL SISTEMA");
         document.location.href = "logout";
      </script>
<?php 
   } else {
      $_SESSION['time'] = $actual;
   }
}
###################### FUNCION PARA EXPIRAR SESSION ####################

#################### FUNCION PARA ACCEDER AL SISTEMA ####################
public function Logueo()
{
	self::SetNames();
	if(empty($_POST["usuario"]) or empty($_POST["password"]) or empty($_POST["tipo"]))
	{
		echo "1";
		exit;
	}

	$date = new DateTime();
    $timestamp = $date->getTimestamp();// Devuelve el timestamp, por ejemplo: 1446811771

	if (decrypt($_POST['tipo']) == 1) {// SI TIPO INGRESO ES ADMINISTRADORES, SECRETARIAS, CAJEROS

	//$sucursal = empty($_POST["codsucursal"]) ? implode("",decrypt($_POST['codsucursal'])) : "0";

	$sql = "SELECT
	usuarios.idusuario,
	usuarios.codigo, 
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres,
	usuarios.sexo,
	usuarios.telefono,
	usuarios.celular,
	usuarios.idprovincia,
	usuarios.idcanton,
	usuarios.idparroquia,
	usuarios.direccion,
	usuarios.email,
	usuarios.mps,
	usuarios.codespecialidad,
	usuarios.fnacimiento,
	usuarios.usuario,
	usuarios.password,
	usuarios.nivel,
	usuarios.status,
	especialidades.nomespecialidad,
	documentos.documento,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM usuarios 
	LEFT JOIN documentos ON usuarios.documusuario = documentos.coddocumento
	LEFT JOIN especialidades ON usuarios.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON usuarios.idprovincia = tbl_provincia.idprovincia  
	LEFT JOIN tbl_canton ON usuarios.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON usuarios.idparroquia = tbl_parroquia.idparroquia
	WHERE usuarios.usuario = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(limpiar($_POST["usuario"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		echo "2";
		exit;

	} else {
			
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$p[]=$row;
		}

		if (limpiar($row['status'])==0)
		{  
			echo "3";
			exit;
		} 
		elseif (password_verify($_POST["password"], $row['password'])) {

		######### DATOS DEL USUARIO ###########
		$_SESSION["codigo"] = $p[0]["codigo"];
		$_SESSION["documusuario"] = $p[0]["documento"];
		$_SESSION["dni"] = $p[0]["dni"];
		$_SESSION["nombres"] = $p[0]["nombres"];
		$_SESSION["sexo"] = $p[0]["sexo"];
		$_SESSION["direccion"] = $p[0]["direccion"];
		$_SESSION["telefono"] = $p[0]["telefono"];
		$_SESSION["celular"] = $p[0]["celular"];
		$_SESSION["idprovincia"] = $p[0]["idprovincia"];
		$_SESSION["provincia"] = $p[0]["provincia"];
		$_SESSION["idcanton"] = $p[0]["idcanton"];
		$_SESSION["canton"] = $p[0]["canton"];
		$_SESSION["idparroquia"] = $p[0]["idparroquia"];
		$_SESSION["parroquia"] = $p[0]["parroquia"];
		$_SESSION["direccion"] = $p[0]["direccion"];
		$_SESSION["email"] = $p[0]["email"];
		$_SESSION["mps"] = $p[0]["mps"];
		$_SESSION["codespecialidad"] = $p[0]["codespecialidad"];
		$_SESSION["nomespecialidad"] = $p[0]["nomespecialidad"];
		$_SESSION["fnacimiento"] = $p[0]["fnacimiento"];
		$_SESSION["usuario"] = $p[0]["usuario"];
		$_SESSION["password"] = $p[0]["password"];
		$_SESSION["nivel"] = $p[0]["nivel"];
		$_SESSION["status"] = $p[0]["status"];
		$_SESSION["tipo"] = $_POST['tipo'];
		$_SESSION["ingreso"] = limpiar(date("Y-m-d H:i:s"));
		################## DATOS DE ACCESO ##################

		############### REGISTRO LOGS DE ACCESO ###############
		$query = "INSERT INTO log VALUES (null, ?, ?, ?, ?, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1,$a);
		$stmt->bindParam(2,$b);
		$stmt->bindParam(3,$c);
		$stmt->bindParam(4,$d);
		$stmt->bindParam(5,$e);
		$stmt->bindParam(6,$f);

		$a = limpiar($_SERVER['REMOTE_ADDR']);
		$b = limpiar(date("Y-m-d H:i:s"));
		$c = limpiar($_SERVER['HTTP_USER_AGENT']);
		$d = limpiar($_SERVER['PHP_SELF']);
		$e = limpiar($p[0]["codigo"]);
		$f = limpiar($_POST["usuario"]);
		$stmt->execute();
		############### REGISTRO LOGS DE ACCESO ###############

		switch($_SESSION["nivel"])
		{
			case 'ADMINISTRADOR(A)':
			$_SESSION["acceso"]="administrador";
			?>

			<script type="text/javascript">
				window.location="panel";
			</script>

			<?php
			break;
			case 'SECRETARIA':
			$_SESSION["acceso"]="secretaria";
			?>

			<script type="text/javascript">
				window.location="panel";
			</script>

			<?php
			break;
			case 'ENFERMERO(A)':
			$_SESSION["acceso"]="enfermera";
			?>

			<script type="text/javascript">
				window.location="panel";
			</script>
			
			<?php
			break;
		}//end switch	

	} else {

  	echo "4";
  	exit;
  
	  }
   } //USUARIO   

    } elseif (decrypt($_POST['tipo']) == 2) {// SI TIPO INGRESO ES MEDICO

    $sql = "SELECT
	medicos.idmedico,
	medicos.codmedico,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	medicos.clavemedico,
	medicos.codsucursal,
	medicos.modulos,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	sucursales.idprovincia AS idprovincia2,
	sucursales.idcanton AS idcanton2,
	sucursales.direcsucursal,
	sucursales.correosucursal,
	sucursales.tlfsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.tlfencargado,
	especialidades.nomespecialidad,
	documentos.documento,
	documentos2.documento AS documento2, 
    documentos3.documento AS documento3,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
    tbl_provincia2.provincia AS provincia2,
    tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM medicos LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia  
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento
	LEFT JOIN documentos AS documentos3 ON sucursales.documencargado = documentos3.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON sucursales.idprovincia = tbl_provincia2.idprovincia 
	LEFT JOIN tbl_canton AS tbl_canton2 ON sucursales.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON sucursales.idparroquia = tbl_parroquia2.idparroquia
	WHERE medicos.cedmedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(limpiar($_POST["usuario"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		echo "2";
		exit;

	} else {
			
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$p[]=$row;
		}

		if (password_verify($_POST["password"], $row['clavemedico'])) {		
			
			################## DATOS DE ACCESO ##################
			$_SESSION["codigo"] = $p[0]["codmedico"];
			$_SESSION["codmedico"] = $p[0]["codmedico"];
		    $_SESSION["docummedico"] = $p[0]["documento"];
			$_SESSION["cedmedico"] = $p[0]["cedmedico"];
			$_SESSION["dni"] = $p[0]["cedmedico"];
			$_SESSION["nommedico"] = $p[0]["nommedico"];
			$_SESSION["nombres"] = $p[0]["nommedico"];
			$_SESSION["sexomedico"] = $p[0]["sexomedico"];
			$_SESSION["tlfmedico"] = $p[0]["tlfmedico"];
			$_SESSION["celmedico"] = $p[0]["celmedico"];
			$_SESSION["correomedico"] = $p[0]["correomedico"];
			$_SESSION["email"] = $p[0]["correomedico"];
		    $_SESSION["idprovincia"] = $p[0]["idprovincia"];
		    $_SESSION["provincia"] = $p[0]["provincia"];
		    $_SESSION["idcanton"] = $p[0]["idcanton"];
		    $_SESSION["canton"] = $p[0]["canton"];
		    $_SESSION["idparroquia"] = $p[0]["idparroquia"];
		    $_SESSION["parroquia"] = $p[0]["parroquia"];
		    $_SESSION["direcmedico"] = $p[0]["direcmedico"];
		    $_SESSION["mps"] = $p[0]["mps"];
		    $_SESSION["codespecialidad"] = $p[0]["codespecialidad"];
		    $_SESSION["nomespecialidad"] = $p[0]["nomespecialidad"];
		    $_SESSION["fnacmedico"] = $p[0]["fnacmedico"];
		    $_SESSION["modulos"] = $p[0]["modulos"];
			$_SESSION["usuario"] = $p[0]["cedmedico"];
			$_SESSION["password"] = $p[0]["clavemedico"];
			$_SESSION["tipo"] = $_POST['tipo'];
			$_SESSION["nivel"] = "MEDICO";
			$_SESSION["ingreso"] = limpiar(date("Y-m-d H:i:s"));
			################## DATOS DE ACCESO ##################

			################## DATOS DE LA SUCURSAL ##################
			$_SESSION["codsucursal"] = $p[0]["codsucursal"];
			$_SESSION["documsucursal"] = $p[0]["documsucursal"];
			$_SESSION["cuitsucursal"] = $p[0]["cuitsucursal"];
			$_SESSION["nomsucursal"] = $p[0]["nomsucursal"];
			$_SESSION["tlfsucursal"] = $p[0]["tlfsucursal"];
			/*$_SESSION["idprovincia2"] = $p[0]["idprovincia2"];
			$_SESSION["provincia2"] = $p[0]["provincia2"];
			$_SESSION["idcanton2"] = $p[0]["idcanton2"];
			$_SESSION["canton2"] = $p[0]["canton2"];*/
			$_SESSION["direcsucursal"] = $p[0]["direcsucursal"];
			$_SESSION["correosucursal"] = $p[0]["correosucursal"];
			$_SESSION["nomencargado"] = $p[0]["nomencargado"];
			$_SESSION["documento2"] = $p[0]["documento2"];
			$_SESSION["documento3"] = $p[0]["documento3"];
			################## DATOS DE LA SUCURSAL ##################

			############### REGISTRO LOGS DE ACCESO ###############
			$query = "INSERT INTO log VALUES (null, ?, ?, ?, ?, ?, ?);";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1,$a);
			$stmt->bindParam(2,$b);
			$stmt->bindParam(3,$c);
			$stmt->bindParam(4,$d);
			$stmt->bindParam(5,$e);
			$stmt->bindParam(6,$f);

			$a = limpiar($_SERVER['REMOTE_ADDR']);
			$b = limpiar(date("Y-m-d H:i:s"));
			$c = limpiar($_SERVER['HTTP_USER_AGENT']);
			$d = limpiar($_SERVER['PHP_SELF']);
			$e = limpiar($p[0]["codmedico"]);
			$f = limpiar($_POST["usuario"]);
			$stmt->execute();
			############### REGISTRO LOGS DE ACCESO ###############
				
			switch($_SESSION["nivel"])
			{
				case 'MEDICO':
				$_SESSION["acceso"]="medico";
				?>

				<script type="text/javascript">
				window.location="panel";
			    </script>

				<?php
				break;
		    }//end switch

	    } else {

  	    echo "4";
  	    exit;

	   }

   } //CERRAR MEDICO 

   } elseif (decrypt($_POST['tipo']) == 3) {// SI TIPO INGRESO ES PACIENTE

    $sql = "SELECT
	pacientes.idpaciente,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.emailpaciente,
	pacientes.gruposapaciente,
	pacientes.estadopaciente,
	pacientes.ocupacionpaciente,
	pacientes.sexopaciente,
	pacientes.enfoquepaciente,
	pacientes.idprovincia,
	pacientes.idcanton,
	pacientes.direcpaciente,
	pacientes.clavepaciente,
	documentos.documento,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM pacientes LEFT JOIN documentos ON pacientes.documpaciente = documentos.coddocumento
	LEFT JOIN tbl_provincia ON pacientes.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON pacientes.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON pacientes.idparroquia = tbl_parroquia.idparroquia
	WHERE pacientes.cedpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(limpiar($_POST["usuario"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		echo "2";
		exit;

	} else {
			
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$p[]=$row;
		}

		if (password_verify($_POST["password"], $row['clavepaciente'])) {	
			
			################## DATOS DE ACCESO ##################
			$_SESSION["codigo"] = $p[0]["codpaciente"];
			$_SESSION["dni"] = $p[0]["cedpaciente"];
			$_SESSION["nombres"] = $p[0]["pnompaciente"]." ".$p[0]["snompaciente"]." ".$p[0]["papepaciente"]." ".$p[0]["sapepaciente"];
			$_SESSION["telefono"] = $p[0]["tlfpaciente"];
			$_SESSION["email"] = $p[0]["emailpaciente"];
			$_SESSION["usuario"] = $p[0]["cedpaciente"];
			$_SESSION["password"] = $p[0]["clavepaciente"];
			$_SESSION["tipo"] = $_POST['tipo'];
			$_SESSION["nivel"] = "PACIENTE";
			$_SESSION["ingreso"] = limpiar(date("Y-m-d H:i:s"));
			################## DATOS DE ACCESO ##################

			################## DATOS DE PACIENTE ##################
			$_SESSION["idpaciente"] = $p[0]["idpaciente"];
			$_SESSION["codpaciente"] = $p[0]["codpaciente"];
			$_SESSION["documpaciente"] = $p[0]["documpaciente"];
			$_SESSION["documento"] = $p[0]["documento"];
			$_SESSION["cedpaciente"] = $p[0]["cedpaciente"];
			$_SESSION["pnompaciente"] = $p[0]["pnompaciente"];
			$_SESSION["snompaciente"] = $p[0]["snompaciente"];
			$_SESSION["papepaciente"] = $p[0]["papepaciente"];
			$_SESSION["sapepaciente"] = $p[0]["sapepaciente"];
			$_SESSION["fnacpaciente"] = $p[0]["fnacpaciente"];
			$_SESSION["tlfpaciente"] = $p[0]["tlfpaciente"];
			$_SESSION["emailpaciente"] = $p[0]["emailpaciente"];
			$_SESSION["gruposapaciente"] = $p[0]["gruposapaciente"];
			$_SESSION["estadopaciente"] = $p[0]["estadopaciente"];
			$_SESSION["ocupacionpaciente"] = $p[0]["ocupacionpaciente"];
			$_SESSION["sexopaciente"] = $p[0]["sexopaciente"];
			$_SESSION["enfoquepaciente"] = $p[0]["enfoquepaciente"];
			$_SESSION["idprovincia"] = $p[0]["idprovincia"];
		    $_SESSION["provincia"] = $p[0]["provincia"];
		    $_SESSION["idcanton"] = $p[0]["idcanton"];
		    $_SESSION["canton"] = $p[0]["canton"];
		    $_SESSION["idparroquia"] = $p[0]["idparroquia"];
		    $_SESSION["parroquia"] = $p[0]["parroquia"];
			$_SESSION["direcpaciente"] = $p[0]["direcpaciente"];
			$_SESSION["clavepaciente"] = $p[0]["clavepaciente"];
			################## DATOS DE PACIENTE ##################

			############### REGISTRO LOGS DE ACCESO ###############
			$query = "INSERT INTO log VALUES (null, ?, ?, ?, ?, ?, ?, ?);";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1,$a);
			$stmt->bindParam(2,$b);
			$stmt->bindParam(3,$c);
			$stmt->bindParam(4,$d);
			$stmt->bindParam(5,$e);
			$stmt->bindParam(6,$f);
			$stmt->bindParam(7,$g);

			$a = limpiar($_SERVER['REMOTE_ADDR']);
			$b = limpiar(date("Y-m-d H:i:s"));
			$c = limpiar($_SERVER['HTTP_USER_AGENT']);
			$d = limpiar($_SERVER['PHP_SELF']);
			$e = limpiar($p[0]["codpaciente"]);
			$f = limpiar($_POST["usuario"]);
		    $g = limpiar("0");
			$stmt->execute();
			############### REGISTRO LOGS DE ACCESO ###############
				
			switch($_SESSION["nivel"])
			{
				case 'PACIENTE':
				$_SESSION["acceso"]="paciente";
				?>

				<script type="text/javascript">
				window.location="panel";
			    </script>

				<?php
				break;
		    }//end switch

	    } else {

  	    echo "4";
  	    exit;

	   }

   } //CERRAR PACIENTE

    } else {

    	echo "5";
    	exit;

    }
}
#################### FUNCION PARA ACCEDER AL SISTEMA ####################

########################### FIN DE CLASE LOGUEO ###############################

















######################## FUNCION RECUPERAR Y ACTUALIZAR PASSWORD #######################

########################### FUNCION PARA RECUPERAR CLAVE #############################
public function RecuperarPassword()
{
	self::SetNames();
	if(empty($_POST["email"]) or empty($_POST["tipo"]))
	{
		echo "1";
		exit;
	}

	################## DATOS DE CONFIGURACION #####################
	$sql = "SELECT * FROM configuracion";
	foreach ($this->dbh->query($sql) as $row)
	{
			$this->p[] = $row;
	}
    $cuitsucursal = $row['cuitsucursal'];
    $nomsucursal = $row['nomsucursal'];
    $correosucursal = $row['correosucursal'];
    ################## DATOS DE CONFIGURACION #####################

	if (decrypt($_POST['tipo']) == 4) {
	
		################# OBTENGO DATOS DE USUARIO #################
		$sql = "SELECT * FROM usuarios WHERE email = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(limpiar($_POST["email"])));
		$num = $stmt->rowCount();
		if($num==0)
		{
			echo "2";
			exit;
		}
		else
		{
			if($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$pa[] = $row;
			}
			$id = $pa[0]["codigo"];
			$nombres = $pa[0]["nombres"];
			$email = $pa[0]["email"];
			$pass = strtoupper(generar_clave(10));
		}
		################# OBTENGO DATOS DE USUARIO #################

	} elseif (decrypt($_POST['tipo']) == 5) {

		################# OBTENGO DATOS DE MEDICO #################
		$sql = "SELECT * FROM medicos WHERE correomedico = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(limpiar($_POST["email"])));
		$num = $stmt->rowCount();
		if($num==0)
		{
			echo "2";
			exit;
		}
		else
		{
			if($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$pa[] = $row;
			}
			$id = $pa[0]["codmedico"];
			$nombres = $pa[0]["nommedico"];
			$email = $pa[0]["correomedico"];
			$pass = strtoupper(generar_clave(10));
		}
		################# OBTENGO DATOS DE MEDICO #################	

	} elseif (decrypt($_POST['tipo']) == 6) {

		################# OBTENGO DATOS DE PACIENTE #################
		$sql = "SELECT * FROM pacientes WHERE emailpaciente = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(limpiar($_POST["email"])));
		$num = $stmt->rowCount();
		if($num==0)
		{
			echo "2";
			exit;
		}
		else
		{
			if($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$pa[] = $row;
			}
			$id = $pa[0]["codpaciente"];
			$nombres = $pa[0]["pnompaciente"]." ".$pa[0]["snompaciente"]." ".$pa[0]["papepaciente"]." ".$pa[0]["sapepaciente"];
			$email = $pa[0]["emailpaciente"];
			$pass = strtoupper(generar_clave(10));
		}
		################# OBTENGO DATOS DE PACIENTE #################
	}

	#################### VALIDACION DE ENVIO DE CORREO CON PHPMAILER ####################
    //Create a new PHPMailer instance
    $mail = new PHPMailer(TRUE);

    $mail->isSMTP();// Set mailer to use SMTP
	$mail->CharSet = 'UTF-8';
	$mail->SMTPAuth = true;// Enable SMTP authentication
	$mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;// Enable TLS encryption, `ssl` also accepted

	$mail->Host = 'smtp.gmail.com';// Specify main and backup SMTP servers
	$mail->Port = 587;// TCP port to connect to
	$mail->SMTPDebug = 0;
	$mail->SMTPOptions = array(
	    'ssl' => array(
	        'verify_peer' => false,
	        'verify_peer_name' => false,
	        'allow_self_signed' => true
	    )
	);
	$mail->isHTML(true);// Set email format to HTML

	$mail->Username = 'correo@gmail.com';// SMTP username
	$mail->Password = 'clavecorreo';// SMTP password

	$mail->setFrom($correosucursal, $nomsucursal);//Your application NAME and EMAIL
	$mail->AddReplyTo('no-reply@mycomp.com','no-reply');
	$mail->Subject = 'Nueva Clave de Acceso';//Message subject

	# establecemos un limite de caracteres de anchura
	$mail->WordWrap   = 50; // set word wrap

	# NOTA: Los correos es conveniente enviarlos en formato HTML y Texto para que
	# cualquier programa de correo pueda leerlo.

	# Definimos el contenido HTML del correo
	$contenidoHTML="<head>";
	$contenidoHTML.="<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">";
	$contenidoHTML.="</head><body>";
	$contenidoHTML.="<b>Recuperación de Contraseña</b>";
	$contenidoHTML.="<p>$nombres</p>";
	$contenidoHTML.="<p>Su Nueva Contraseña de Acceso es: <b>$pass</b></p>";
	$contenidoHTML.="</body>\n";

	# Definimos el contenido en formato Texto del correo
	$contenidoTexto= " Recuperación de Contraseña";
	$contenidoTexto.="\n\n";
	
	# Indicamos el contenido
	$mail->AltBody=$contenidoTexto; //Text Body
	$mail->MsgHTML($contenidoHTML); //Text body HTML

	$mail->addAddress($email,str_replace(" ", "_",$nombres));// Target email
    $mail->AddAttachment("fotos/logo_principal.png", "img.png");
	#################### VALIDACION DE ENVIO DE CORREO CON PHPMAILER ####################

	if(!$mail->send()) {

	    //Mensaje no pudo ser enviado
	    echo "3";
		exit;

	} else {

		if (decrypt($_POST['tipo']) == 4) {

			################# ACTUALIZO CLAVE DE USUARIO #################
			$sql = " UPDATE usuarios set "
			  ." password = ? "
			  ." WHERE "
			  ." codigo = ?;
			   ";
		    $stmt = $this->dbh->prepare($sql);
		    $stmt->bindParam(1, $password);
		    $stmt->bindParam(2, $codigo);
			
		    $codigo = $id;
			$password = password_hash($pass, PASSWORD_DEFAULT);
		    $stmt->execute();
		    ################# ACTUALIZO CLAVE DE USUARIO #################

		} elseif (decrypt($_POST['tipo']) == 5) {

			################# ACTUALIZO CLAVE DE MEDICO #################
			$sql = " UPDATE medicos set "
			." clavemedico = ? "
			." where "
			." codmedico = ?;
			";
			$stmt = $this->dbh->prepare($sql);
			$stmt->bindParam(1, $password);
			$stmt->bindParam(2, $codigo);

			$codigo = $id;
			$password = password_hash($pass, PASSWORD_DEFAULT);
			$stmt->execute();
			################# ACTUALIZO CLAVE DE MEDICO #################

	   } elseif (decrypt($_POST['tipo']) == 6) {

			################# ACTUALIZO CLAVE DE PACIENTE #################
			$sql = " UPDATE pacientes set "
			." clavepaciente = ? "
			." where "
			." codpaciente = ?;
			";
			$stmt = $this->dbh->prepare($sql);
			$stmt->bindParam(1, $password);
			$stmt->bindParam(2, $codigo);

			$codigo = $id;
			$password = password_hash($pass, PASSWORD_DEFAULT);
			$stmt->execute();
			################# ACTUALIZO CLAVE DE PACIENTE #################
		}

	    echo "<span class='fa fa-check-square-o'></span> SU NUEVA CLAVE DE ACCESO LE FUE ENVIADA A SU CORREO ELECTRONICO EXITOSAMENTE";
	    exit;
	}
}		
############################# FUNCION PARA RECUPERAR CLAVE ############################

########################## FUNCION PARA ACTUALIZAR PASSWORD ############################
public function ActualizarPassword()
{
	self::SetNames();
	if(empty($_POST["codigo"]) or empty($_POST["password"]) or empty($_POST["clave"]))
	{
		echo "1";
		exit;
	}

	if(password_hash($_POST["password"], PASSWORD_DEFAULT) == limpiar($_POST["clave"])){
		
		echo "2";
		exit;

	} else if($_SESSION["acceso"] == "medico") {

		$sql = " UPDATE medicos set "
		." clavemedico = ? "
		." where "
		." codmedico = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $password);
		$stmt->bindParam(2, $codigo);	

		$password = password_hash($_POST["password"], PASSWORD_DEFAULT);
		$codigo = limpiar(decrypt($_POST["codigo"]));
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> SU CLAVE DE ACCESO FUE ACTUALIZADA EXITOSAMENTE, SER&Aacute; EXPULSADO DE SU SESI&Oacute;N Y DEBER&Aacute; DE ACCEDER NUEVAMENTE CON SU NUEVA CLAVE";
		?>
		<script>
			function redireccionar(){location.href="logout";}
			setTimeout ("redireccionar()", 3000);
		</script>
		<?php
		exit;

	} else if($_SESSION["acceso"] == "paciente") {

		$sql = " UPDATE pacientes set "
		." clavepaciente = ? "
		." where "
		." codpaciente = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $password);
		$stmt->bindParam(2, $codigo);	

		$password = password_hash($_POST["password"], PASSWORD_DEFAULT);
		$codigo = limpiar(decrypt($_POST["codigo"]));
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> SU CLAVE DE ACCESO FUE ACTUALIZADA EXITOSAMENTE, SER&Aacute; EXPULSADO DE SU SESI&Oacute;N Y DEBER&Aacute; DE ACCEDER NUEVAMENTE CON SU NUEVA CLAVE";
		?>
		<script>
			function redireccionar(){location.href="logout";}
			setTimeout ("redireccionar()", 3000);
		</script>
		<?php
		exit;

	} else {

		$sql = " UPDATE usuarios set "
		." usuario = ?, "
		." password = ? "
		." where "
		." codigo = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $usuario);
		$stmt->bindParam(2, $password);
		$stmt->bindParam(3, $codigo);	

		$usuario = limpiar($_POST["usuario"]);
		$password = password_hash($_POST["password"], PASSWORD_DEFAULT);
		$codigo = limpiar(decrypt($_POST["codigo"]));
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> SU CLAVE DE ACCESO FUE ACTUALIZADA EXITOSAMENTE, SER&Aacute; EXPULSADO DE SU SESI&Oacute;N Y DEBER&Aacute; DE ACCEDER NUEVAMENTE CON SU NUEVA CLAVE";
		?>
		<script>
			function redireccionar(){location.href="logout";}
			setTimeout ("redireccionar()", 3000);
		</script>
		<?php
		exit;
	}		
}
########################## FUNCION PARA ACTUALIZAR PASSWORD  ############################

####################### FUNCION RECUPERAR Y ACTUALIZAR PASSWORD ########################























###################### FUNCION CONFIGURACION GENERAL DEL SISTEMA #######################

######################## FUNCION ID CONFIGURACION DEL SISTEMA #########################
public function ConfiguracionPorId()
{
	self::SetNames();
	$sql = "SELECT 
	configuracion.id,
	configuracion.documsucursal,
	configuracion.cuitsucursal,
	configuracion.nomsucursal,
	configuracion.tlfsucursal,
	configuracion.correosucursal,
	configuracion.idprovincia,
	configuracion.idcanton,
	configuracion.idparroquia,
	configuracion.direcsucursal,
	configuracion.documencargado,
	configuracion.dniencargado,
	configuracion.nomencargado,
	configuracion.tlfencargado,
	documentos.documento,
	documentos2.documento AS documento2,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM configuracion 
	LEFT JOIN documentos ON configuracion.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON configuracion.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON configuracion.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON configuracion.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON configuracion.idparroquia = tbl_parroquia.idparroquia
	WHERE configuracion.id = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array('1'));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################## FUNCION ID CONFIGURACION DEL SISTEMA #########################

######################## FUNCION  ACTUALIZAR CONFIGURACION ##########################
public function ActualizarConfiguracion()
{

	self::SetNames();
	if(empty($_POST["cuitsucursal"]) or empty($_POST["nomsucursal"]) or empty($_POST["tlfsucursal"]) or empty($_POST["correosucursal"]) or empty($_POST["direcsucursal"]) or empty($_POST["dniencargado"]) or empty($_POST["nomencargado"]) or empty($_POST["tlfencargado"]))
	{
		echo "1";
		exit;
	}

	$sql = " UPDATE configuracion set "
	." documsucursal = ?, "
	." cuitsucursal = ?, "
	." nomsucursal = ?, "
	." tlfsucursal = ?, "
	." correosucursal = ?, "
	." idprovincia = ?, "
	." idcanton = ?, "
	." idparroquia = ?, "
	." direcsucursal = ?, "
	." documencargado = ?, "
	." dniencargado = ?, "
	." nomencargado = ?, "
	." tlfencargado = ? "
	." WHERE "
	." id = ?;
	";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $documsucursal);
	$stmt->bindParam(2, $cuitsucursal);
	$stmt->bindParam(3, $nomsucursal);
	$stmt->bindParam(4, $tlfsucursal);
	$stmt->bindParam(5, $correosucursal);
	$stmt->bindParam(6, $idprovincia);
	$stmt->bindParam(7, $idcanton);
	$stmt->bindParam(8, $idparroquia);
	$stmt->bindParam(9, $direcsucursal);
	$stmt->bindParam(10, $documencargado);
	$stmt->bindParam(11, $dniencargado);
	$stmt->bindParam(12, $nomencargado);
	$stmt->bindParam(13, $tlfencargado);
	$stmt->bindParam(14, $id);

	$documsucursal = limpiar($_POST['documsucursal'] == '' ? "0" : $_POST['documsucursal']);
	$cuitsucursal = limpiar($_POST["cuitsucursal"]);
	$nomsucursal = limpiar($_POST["nomsucursal"]);
	$tlfsucursal = limpiar($_POST["tlfsucursal"]);
	$correosucursal = limpiar($_POST["correosucursal"]);
	$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
	$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
	$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
	$direcsucursal = limpiar($_POST["direcsucursal"]);
	$documencargado = limpiar($_POST['documencargado'] == '' ? "0" : $_POST['documencargado']);
	$dniencargado = limpiar($_POST["dniencargado"]);
	$nomencargado = limpiar($_POST["nomencargado"]);
	$tlfencargado = limpiar($_POST["tlfencargado"]);
	$id = limpiar($_POST["id"]);
	$stmt->execute();

	################## SUBIR LOGO PRINCIPAL #1 ######################################
         //datos del arhivo  
if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo =''; }
if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo =''; }
if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo =''; }  
         //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/png')!==false)&&$tamano_archivo<8000000)//1MB 
	{  
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/logo_principal.png"))
		{ 
		 ## se puede dar un aviso
		} 
		## se puede dar otro aviso 
	}
	################## FINALIZA SUBIR LOGO PRINCIPAL #1 ##################

    ################## SUBIR LOGO PDF #1 ######################################
         //datos del arhivo  
if (isset($_FILES['imagen2']['name'])) { $nombre_archivo = $_FILES['imagen2']['name']; } else { $nombre_archivo =''; }
if (isset($_FILES['imagen2']['type'])) { $tipo_archivo = $_FILES['imagen2']['type']; } else { $tipo_archivo =''; }
if (isset($_FILES['imagen2']['size'])) { $tamano_archivo = $_FILES['imagen2']['size']; } else { $tamano_archivo =''; }  
         //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/png')!==false)&&$tamano_archivo<8000000)//1MB 
	{  
		if (move_uploaded_file($_FILES['imagen2']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/logo_pdf.png"))
			{ 
		 ## se puede dar un aviso
			} 
		 ## se puede dar otro aviso 
	}
	################## FINALIZA SUBIR LOGO PDF #1 ######################################

	echo "<span class='fa fa-check-square-o'></span> LOS DATOS DE CONFIGURACI&Oacute;N FUERON ACTUALIZADOS EXITOSAMENTE";
	exit;
}
######################## FUNCION  ACTUALIZAR CONFIGURACION #######################

#################### FIN DE FUNCION CONFIGURACION GENERAL DEL SISTEMA ##################





















################################## CLASE USUARIOS #####################################

############################## FUNCION REGISTRAR USUARIOS ##############################
public function RegistrarUsuarios()
{
	self::SetNames();
	if(empty($_POST["nombres"]) or empty($_POST["usuario"]) or empty($_POST["password"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT dni FROM usuarios WHERE dni = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["dni"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{
		
		echo "2";
		exit;
	}
	else
	{
	$sql = "SELECT email FROM usuarios WHERE email = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["email"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{

		echo "3";
		exit;
	}
	else
	{
	$sql = "SELECT usuario FROM usuarios WHERE usuario = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["usuario"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		######################### CODIGO DE USUARIO #########################
		$sql = "SELECT codigo FROM usuarios ORDER BY idusuario DESC LIMIT 1";
		foreach ($this->dbh->query($sql) as $row){

			$id=$row["codigo"];
		}
		if(empty($id))
		{
			$codigo = "U1";

		} else {

			$resto = substr($id, 0, 1);
			$coun = strlen($resto);
			$num     = substr($id, $coun);
			$var     = $num + 1;
			$codigo = "U".$var;
		}
	    ######################### CODIGO DE USUARIO #########################

	    $query = "INSERT INTO usuarios values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codigo);
		$stmt->bindParam(2, $documusuario);
		$stmt->bindParam(3, $dni);
		$stmt->bindParam(4, $nombres);
		$stmt->bindParam(5, $sexo);
		$stmt->bindParam(6, $telefono);
		$stmt->bindParam(7, $celular);
		$stmt->bindParam(8, $idprovincia);
		$stmt->bindParam(9, $idcanton);
		$stmt->bindParam(10, $idparroquia);
		$stmt->bindParam(11, $direccion);
		$stmt->bindParam(12, $email);
		$stmt->bindParam(13, $mps);
		$stmt->bindParam(14, $codespecialidad);
		$stmt->bindParam(15, $fnacimiento);
		$stmt->bindParam(16, $usuario);
		$stmt->bindParam(17, $password);
		$stmt->bindParam(18, $nivel);
		$stmt->bindParam(19, $status);

		$documusuario = limpiar($_POST["documusuario"]);
		$dni = limpiar($_POST["dni"]);
		$nombres = limpiar($_POST["nombres"]);
		$sexo = limpiar($_POST["sexo"]);
		$telefono = limpiar($_POST["telefono"]);
		$celular = limpiar($_POST["celular"]);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
	    $idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$direccion = limpiar($_POST["direccion"]);
		$email = limpiar($_POST["email"]);
		$mps = limpiar($_POST["mps"]);
		$codespecialidad = limpiar(decrypt($_POST["codespecialidad"]));
		$fnacimiento = limpiar($_POST['fnacimiento'] == '' ? "0000-00-00" : date("Y-m-d",strtotime($_POST['fnacimiento'])));
		$usuario = limpiar($_POST["usuario"]);
		$password = password_hash($_POST["password"], PASSWORD_DEFAULT);
		//$clavemedico = password_hash($_POST["cedmedico"], PASSWORD_DEFAULT);
		$nivel = limpiar($_POST["nivel"]);
		$status = limpiar($_POST["status"]);
		$stmt->execute();

		########################## SUBIR FOTO DE USUARIOS ##########################
        //datos del arhivo  
		$nombre_archivo = limpiar(isset($_FILES['imagen']['name']) ? $_FILES['imagen']['name'] : "");
	    $tipo_archivo = limpiar(isset($_FILES['imagen']['type']) ? $_FILES['imagen']['type'] : "");
	    $tamano_archivo = limpiar(isset($_FILES['imagen']['size']) ? $_FILES['imagen']['size'] : "");  
         //compruebo si las características del archivo son las que deseo  
		if ((strpos($tipo_archivo,'image/jpeg')!==false)&&$tamano_archivo<8000000)//1MB 
		{  
			if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/".$codigo.".jpg"))
			{ 
		 ## se puede dar un aviso
			} 
		 ## se puede dar otro aviso 
		}
		########################## SUBIR FOTO DE USUARIOS ##########################

				echo "<span class='fa fa-check-square-o'></span> EL USUARIO HA SIDO REGISTRADO EXITOSAMENTE";
				exit;
			}
			else
			{
				echo "4";
				exit;
			}
		}
	}
}
############################# FUNCION REGISTRAR USUARIOS ###############################

############################# FUNCION LISTAR USUARIOS ################################
public function ListarUsuarios()
{
	self::SetNames();
	$sql = "SELECT 
	usuarios.idusuario,
	usuarios.codigo, 
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres,
	usuarios.sexo,
	usuarios.telefono,
	usuarios.celular,
	usuarios.idprovincia,
	usuarios.idcanton,
	usuarios.idparroquia,
	usuarios.direccion,
	usuarios.email,
	usuarios.mps,
	usuarios.codespecialidad,
	usuarios.fnacimiento,
	usuarios.usuario,
	usuarios.password,
	usuarios.nivel,
	usuarios.status,
	documentos.documento,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM usuarios 
	LEFT JOIN documentos ON usuarios.documusuario = documentos.coddocumento
	LEFT JOIN especialidades ON usuarios.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON usuarios.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON usuarios.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON usuarios.idparroquia = tbl_parroquia.idparroquia
	GROUP BY usuarios.codigo";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
############################## FUNCION LISTAR USUARIOS ################################

########################## FUNCION BUSQUEDA DE LOGS DE USUARIOS ###############################
public function BusquedaLogs()
	{
	self::SetNames();
	
	$buscar = limpiar($_POST['b']);

	if(empty($buscar)) {
            echo "";
            exit;
    }

    $sql = "SELECT * FROM log WHERE CONCAT(ip, ' ',tiempo, ' ',detalles, ' ',usuario) LIKE '%".$buscar."%' LIMIT 0,60";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {

	echo "<center><div class='alert alert-danger'>";
	echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	echo " NO SE ENCONTRARON REGISTROS PARA TU BUSQUEDA</div></center>";
	exit;
		
	} else {
			
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION BUSQUEDA DE LOGS DE USUARIOS ###############################

########################### FUNCION LISTAR LOGS DE USUARIOS ###########################
public function ListarLogs()
{
	self::SetNames();
	$sql = "SELECT * FROM log";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
########################### FUNCION LISTAR LOGS DE USUARIOS ###########################

############################ FUNCION ID USUARIOS #################################
public function UsuariosPorId()
{
	self::SetNames();
	$sql = "SELECT 
	usuarios.idusuario,
	usuarios.codigo, 
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres,
	usuarios.sexo,
	usuarios.telefono,
	usuarios.celular,
	usuarios.idprovincia,
	usuarios.idcanton,
	usuarios.idparroquia,
	usuarios.direccion,
	usuarios.email,
	usuarios.mps,
	usuarios.codespecialidad,
	usuarios.fnacimiento,
	usuarios.usuario,
	usuarios.password,
	usuarios.nivel,
	usuarios.status,
	documentos.documento,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM usuarios 
	LEFT JOIN documentos ON usuarios.documusuario = documentos.coddocumento
	LEFT JOIN especialidades ON usuarios.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON usuarios.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON usuarios.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON usuarios.idparroquia = tbl_parroquia.idparroquia
	WHERE usuarios.codigo = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codigo"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION ID USUARIOS #################################

############################ FUNCION ACTUALIZAR USUARIOS ############################
public function ActualizarUsuarios()
{
	self::SetNames();
	if(empty($_POST["dni"]) or empty($_POST["nombres"]) or empty($_POST["usuario"]) or empty($_POST["password"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT * FROM usuarios WHERE codigo != ? AND dni = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codigo"],$_POST["dni"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{
		echo "2";
		exit;
	}
	else
	{
	$sql = "SELECT email FROM usuarios WHERE codigo != ? AND email = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codigo"],$_POST["email"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{
		echo "3";
		exit;
	}
	else
	{
	$sql = "SELECT usuario FROM usuarios WHERE codigo != ? AND usuario = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codigo"],$_POST["usuario"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE usuarios set "
	    ." documusuario = ?, "
		." dni = ?, "
		." nombres = ?, "
		." sexo = ?, "
		." telefono = ?, "
		." celular = ?, "
		." idprovincia = ?, "
		." idcanton = ?, "
		." idparroquia = ?, "
		." direccion = ?, "
		." email = ?, "
		." mps = ?, "
		." codespecialidad = ?, "
		." fnacimiento = ?, "
		." usuario = ?, "
		." password = ?, "
		." nivel = ?, "
		." status = ? "
		." WHERE "
		." codigo = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $documusuario);
		$stmt->bindParam(2, $dni);
		$stmt->bindParam(3, $nombres);
		$stmt->bindParam(4, $sexo);
		$stmt->bindParam(5, $telefono);
		$stmt->bindParam(6, $celular);
		$stmt->bindParam(7, $idprovincia);
		$stmt->bindParam(8, $idcanton);
		$stmt->bindParam(9, $idparroquia);
		$stmt->bindParam(10, $direccion);
		$stmt->bindParam(11, $email);
		$stmt->bindParam(12, $mps);
		$stmt->bindParam(13, $codespecialidad);
		$stmt->bindParam(14, $fnacimiento);
		$stmt->bindParam(15, $usuario);
		$stmt->bindParam(16, $password);
		$stmt->bindParam(17, $nivel);
		$stmt->bindParam(18, $status);
		$stmt->bindParam(19, $codigo);

		$documusuario = limpiar($_POST["documusuario"]);
		$dni = limpiar($_POST["dni"]);
		$nombres = limpiar($_POST["nombres"]);
		$sexo = limpiar($_POST["sexo"]);
		$telefono = limpiar($_POST["telefono"]);
		$celular = limpiar($_POST["celular"]);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
	    $idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$direccion = limpiar($_POST["direccion"]);
		$email = limpiar($_POST["email"]);
		$mps = limpiar($_POST["mps"]);
		$codespecialidad = limpiar(decrypt($_POST["codespecialidad"]));
		$fnacimiento = limpiar($_POST['fnacimiento'] == '' ? "0000-00-00" : date("Y-m-d",strtotime($_POST['fnacimiento'])));
		$usuario = limpiar($_POST["usuario"]);
		$password = password_hash($_POST["password"], PASSWORD_DEFAULT);
		$nivel = limpiar($_POST["nivel"]);
		$status = limpiar($_POST["status"]);
		$codigo = limpiar($_POST["codigo"]);
		$stmt->execute();

		########################## SUBIR FOTO DE USUARIOS ##########################
        //datos del arhivo  
		$nombre_archivo = limpiar(isset($_FILES['imagen']['name']) ? $_FILES['imagen']['name'] : "");
	    $tipo_archivo = limpiar(isset($_FILES['imagen']['type']) ? $_FILES['imagen']['type'] : "");
	    $tamano_archivo = limpiar(isset($_FILES['imagen']['size']) ? $_FILES['imagen']['size'] : "");  
         //compruebo si las características del archivo son las que deseo  
		if ((strpos($tipo_archivo,'image/jpeg')!==false)&&$tamano_archivo<8000000)//1MB 
		{  
			if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/".$codigo.".jpg"))
			{ 
		 ## se puede dar un aviso
			} 
		 ## se puede dar otro aviso 
		}
		########################## SUBIR FOTO DE USUARIOS ##########################

				echo "<span class='fa fa-check-square-o'></span> EL USUARIO HA SIDO ACTUALIZADO EXITOSAMENTE";
				exit;

			}
			else
			{
				echo "4";
				exit;
			}
		}
	}
}
############################ FUNCION ACTUALIZAR USUARIOS ############################

############################# FUNCION ELIMINAR USUARIOS ################################
public function EliminarUsuarios()
{
	self::SetNames();
	if ($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT codigo FROM citasmedicas WHERE codigo = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codigo"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		$sql = "DELETE FROM usuarios WHERE codigo = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codigo);
		$codigo = decrypt($_GET["codigo"]);
		$stmt->execute();

		if (file_exists("fotos/".$codigo.".jpg")){
	    //funcion para eliminar una carpeta con contenido
		$archivos = "fotos/".$codigo.".jpg";		
		unlink($archivos);
		}

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
############################## FUNCION ELIMINAR USUARIOS ##############################

############################ FIN DE CLASE USUARIOS ################################






















################################ CLASE PROVINCIAS ##################################

########################## FUNCION REGISTRAR PROVINCIAS ###############################
public function RegistrarProvincias()
{
	self::SetNames();
	if(empty($_POST["provincia"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT provincia FROM tbl_provincia WHERE provincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["provincia"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = "INSERT INTO tbl_provincia values (null, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $provincia);

		$provincia = limpiar($_POST["provincia"]);
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> LA PROVINCIA HA SIDO REGISTRADA EXITOSAMENTE";
		exit;

		} else {

		echo "2";
		exit;
    }
}
############################ FUNCION REGISTRAR PROVINCIAS ############################

############################ FUNCION LISTAR PROVINCIAS ################################
public function ListarProvincias()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_provincia";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
 }
########################### FUNCION LISTAR PROVINCIAS ################################

########################### FUNCION ID PROVINCIAS #################################
public function ProvinciasPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_provincia WHERE idprovincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["idprovincia"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION ID PROVINCIAS #################################

############################ FUNCION ACTUALIZAR PROVINCIAS ############################
public function ActualizarProvincias()
{
	self::SetNames();
	if(empty($_POST["idprovincia"]) or empty($_POST["provincia"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT provincia FROM tbl_provincia WHERE idprovincia != ? AND provincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["idprovincia"],$_POST["provincia"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE tbl_provincia set "
		." provincia = ? "
		." WHERE "
		." idprovincia = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $provincia);
		$stmt->bindParam(2, $idprovincia);

		$provincia = limpiar($_POST["provincia"]);
        $idprovincia = limpiar($_POST['idprovincia']);
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> LA PROVINCIA HA SIDO ACTUALIZADA EXITOSAMENTE";
		exit;

		} else {

		echo "2";
		exit;
	}
}
############################ FUNCION ACTUALIZAR PROVINCIAS ############################

############################ FUNCION ELIMINAR PROVINCIAS ############################
public function EliminarProvincias()
{
	self::SetNames();
	if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT idprovincia FROM tbl_canton WHERE idprovincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["idprovincia"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		$sql = "DELETE FROM tbl_provincia WHERE idprovincia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$idprovincia);
		$idprovincia = decrypt($_GET["idprovincia"]);
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
############################ FUNCION ELIMINAR PROVINCIAS ##############################

############################## FIN DE CLASE PROVINCIAS ################################


























############################### CLASE CANTONES ################################

############################# FUNCION REGISTRAR CANTONES ###########################
public function RegistrarCantones()
{
	self::SetNames();
	if(empty($_POST["canton"]) or empty($_POST["idprovincia"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT canton FROM tbl_canton WHERE canton = ? AND idprovincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["canton"],$_POST["idprovincia"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = "INSERT INTO tbl_canton values (null, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $canton);
		$stmt->bindParam(2, $idprovincia);

		$canton = limpiar($_POST["canton"]);
		$idprovincia = limpiar($_POST['idprovincia']);
		$stmt->execute();

	    echo "<span class='fa fa-check-square-o'></span> EL CANTON HA SIDO REGISTRADO EXITOSAMENTE";
	    exit;

		} else {

		echo "2";
		exit;
    }
}
########################### FUNCION REGISTRAR CANTONES ########################

########################## FUNCION PARA LISTAR CANTONES ##########################
public function ListarCantones()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_canton 
	LEFT JOIN tbl_provincia ON tbl_canton.idprovincia = tbl_provincia.idprovincia";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
######################### FUNCION PARA LISTAR CANTONES ##########################

############################ FUNCION ID CANTONES #################################
public function CantonesPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_canton 
	LEFT JOIN tbl_provincia ON tbl_canton.idprovincia = tbl_provincia.idprovincia 
	WHERE tbl_canton.idprovincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["idprovincia"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION ID CANTONES #################################

######################## FUNCION ACTUALIZAR CANTONES ############################
public function ActualizarCantones()
{
	self::SetNames();
	if(empty($_POST["idcanton"]) or empty($_POST["canton"]) or empty($_POST["idprovincia"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT canton FROM tbl_canton WHERE idcanton != ? AND canton = ? AND idprovincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["idcanton"],$_POST["canton"],$_POST["idprovincia"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE tbl_canton set "
		." canton = ?, "
		." idprovincia = ? "
		." WHERE "
		." idcanton = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $canton);
		$stmt->bindParam(2, $idprovincia);
		$stmt->bindParam(3, $idcanton);

		$canton = limpiar($_POST["canton"]);
        $idprovincia = limpiar($_POST['idprovincia']);
        $idcanton = limpiar($_POST['idcanton']);
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> EL CANTON HA SIDO ACTUALIZADA EXITOSAMENTE";
		exit;

	} else {

		echo "2";
		exit;
	}
}
############################ FUNCION ACTUALIZAR CANTONES #######################

############################ FUNCION ELIMINAR CANTONES ###########################
public function EliminarCantones()
{
	self::SetNames();
	if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT idcanton FROM configuracion WHERE idcanton = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["idcanton"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		$sql = "DELETE FROM tbl_canton WHERE idcanton = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$idcanton);
		$idcanton = decrypt($_GET["idcanton"]);
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
########################### FUNCION ELIMINAR CANTONES ############################

###################### FUNCION LISTAR CANTONES POR PROVINCIA #####################
public function ListarCantonesxProvincia() 
    {
	self::SetNames();
	$sql = "SELECT * FROM tbl_canton WHERE idprovincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_GET["idprovincia"]));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<option value='' selected> -- SIN RESULTADOS -- </option>";
		exit;
	}
	else
	{
	while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
##################### FUNCION LISTAR CANTONES POR PROVINCIA ######################

################# FUNCION PARA SELECCIONAR CANTONES POR PROVINCIA #################
public function SeleccionaCantones()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_canton WHERE idprovincia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_GET["idprovincia"]));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<option value=''> -- SIN RESULTADOS -- </option>";
		exit;
	}
	else
	{
		while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################# FUNCION PARA SELECCIONAR CANTONES POR PROVINCIA ################

############################## FIN DE CLASE CANTONES ##############################


























############################### CLASE PARROQUIAS ################################

############################# FUNCION REGISTRAR PARROQUIAS ###########################
public function RegistrarParroquias()
{
	self::SetNames();
	if(empty($_POST["parroquia"]) or empty($_POST["idcanton"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT parroquia FROM tbl_parroquia WHERE parroquia = ? AND idcanton = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["parroquia"],$_POST["idcanton"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = "INSERT INTO tbl_parroquia values (null, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $parroquia);
		$stmt->bindParam(2, $idcanton);

		$parroquia = limpiar($_POST["parroquia"]);
		$idcanton = limpiar($_POST['idcanton']);
		$stmt->execute();

	    echo "<span class='fa fa-check-square-o'></span> LA PARROQUIA HA SIDO REGISTRADA EXITOSAMENTE";
	    exit;

		} else {

		echo "2";
		exit;
    }
}
########################### FUNCION REGISTRAR PARROQUIAS ########################

########################## FUNCION PARA LISTAR PARROQUIAS ##########################
public function ListarParroquias()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_parroquia 
	LEFT JOIN tbl_canton ON tbl_parroquia.idcanton = tbl_canton.idcanton";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
######################### FUNCION PARA LISTAR PARROQUIAS ##########################

############################ FUNCION ID PARROQUIAS #################################
public function ParroquiasPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_parroquia 
	LEFT JOIN tbl_canton ON tbl_parroquia.idcanton = tbl_canton.idcanton 
	WHERE tbl_parroquia.idparroquia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["idparroquia"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION ID PARROQUIAS #################################

######################## FUNCION ACTUALIZAR PARROQUIAS ############################
public function ActualizarParroquias()
{
	self::SetNames();
	if(empty($_POST["idparroquia"]) or empty($_POST["parroquia"]) or empty($_POST["idcanton"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT parroquia FROM tbl_parroquia WHERE idparroquia != ? AND parroquia = ? AND idcanton = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["idparroquia"],$_POST["parroquia"],$_POST["idcanton"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE tbl_parroquia set "
		." parroquia = ?, "
		." idcanton = ? "
		." WHERE "
		." idparroquia = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $parroquia);
		$stmt->bindParam(2, $idcanton);
		$stmt->bindParam(3, $idparroquia);

		$parroquia = limpiar($_POST["parroquia"]);
        $idcanton = limpiar($_POST['idcanton']);
        $idparroquia = limpiar($_POST['idparroquia']);
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> LA PARROQUIA HA SIDO ACTUALIZADA EXITOSAMENTE";
		exit;

	} else {

		echo "2";
		exit;
	}
}
############################ FUNCION ACTUALIZAR PARROQUIAS #######################

############################ FUNCION ELIMINAR PARROQUIAS ###########################
public function EliminarParroquias()
{
	self::SetNames();
	if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT idparroquia FROM configuracion WHERE idparroquia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["idparroquia"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		$sql = "DELETE FROM tbl_parroquia WHERE idparroquia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$idparroquia);
		$idparroquia = decrypt($_GET["idparroquia"]);
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
########################### FUNCION ELIMINAR PARROQUIAS ############################

###################### FUNCION LISTAR PARROQUIAS POR CANTON #####################
public function ListarParroquiasxCanton() 
    {
	self::SetNames();
	$sql = "SELECT * FROM tbl_parroquia WHERE idcanton = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_GET["idcanton"]));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<option value='' selected> -- SIN RESULTADOS -- </option>";
		exit;
	}
	else
	{
	while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
##################### FUNCION LISTAR PARROQUIAS POR CANTON ######################

################# FUNCION PARA SELECCIONAR PARROQUIAS POR CANTON #################
public function SeleccionaParroquias()
{
	self::SetNames();
	$sql = "SELECT * FROM tbl_parroquia WHERE idcanton = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_GET["idcanton"]));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<option value=''> -- SIN RESULTADOS -- </option>";
		exit;
	}
	else
	{
		while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################# FUNCION PARA SELECCIONAR PARROQUIAS POR CANTONES ################

############################## FIN DE CLASE PARROQUIAS ##############################


















################################ CLASE TIPOS DE DOCUMENTOS ##############################

########################### FUNCION REGISTRAR TIPO DE DOCUMENTOS ########################
public function RegistrarDocumentos()
{
	self::SetNames();
	if(empty($_POST["documento"]) or empty($_POST["descripcion"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT * FROM documentos WHERE documento = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["documento"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = "INSERT INTO documentos values (null, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $documento);
		$stmt->bindParam(2, $descripcion);

		$documento = limpiar($_POST["documento"]);
		$descripcion = limpiar($_POST["descripcion"]);
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> EL TIPO DE DOCUMENTO HA SIDO REGISTRADO EXITOSAMENTE";
		exit;

	} else {

		echo "2";
		exit;
	}
}
############################ FUNCION REGISTRAR TIPO DE DOCUMENTOS ########################

########################## FUNCION LISTAR TIPO DE DOCUMENTOS ################################
public function ListarDocumentos()
{
	self::SetNames();
	$sql = "SELECT * FROM documentos ORDER BY documento ASC";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
 }
######################### FUNCION LISTAR TIPO DE DOCUMENTOS ##########################

######################### FUNCION ID TIPO DE DOCUMENTOS ###############################
public function DocumentosPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM documentos WHERE coddocumento = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["coddocumento"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION ID TIPO DE DOCUMENTOS #########################

######################### FUNCION ACTUALIZAR TIPO DE DOCUMENTOS ########################
public function ActualizarDocumentos()
{

	self::SetNames();
	if(empty($_POST["coddocumento"]) or empty($_POST["documento"]) or empty($_POST["descripcion"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT documento FROM documentos WHERE coddocumento != ? AND documento = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["coddocumento"],$_POST["documento"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE documentos set "
		." documento = ?, "
		." descripcion = ? "
		." WHERE "
		." coddocumento = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $documento);
		$stmt->bindParam(2, $descripcion);
		$stmt->bindParam(3, $coddocumento);

		$documento = limpiar($_POST["documento"]);
		$descripcion = limpiar($_POST["descripcion"]);
		$coddocumento = limpiar($_POST["coddocumento"]);
		$stmt->execute();

	    echo "<span class='fa fa-check-square-o'></span> EL TIPO DE DOCUMENTO HA SIDO ACTUALIZADO EXITOSAMENTE";
	    exit;

	} else {

	    echo "2";
	    exit;
    }
}
####################### FUNCION ACTUALIZAR TIPO DE DOCUMENTOS #######################

######################### FUNCION ELIMINAR TIPO DE DOCUMENTOS #########################
public function EliminarDocumentos()
{
	self::SetNames();
	if ($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT documsucursal FROM configuracion WHERE documsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["coddocumento"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		$sql = "DELETE FROM documentos WHERE coddocumento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$coddocumento);
		$coddocumento = decrypt($_GET["coddocumento"]);
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
######################## FUNCION ELIMINAR TIPOS DE DOCUMENTOS ###########################

########################### FIN DE CLASE TIPOS DE DOCUMENTOS ###########################























################################ CLASE SEGUROS ##############################

########################### FUNCION REGISTRAR SEGUROS ########################
public function RegistrarSeguros()
{
	self::SetNames();
	if(empty($_POST["nomseguro"]) or empty($_POST["direcseguro"]) or empty($_POST["tlfseguro1"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT * FROM seguros WHERE nomseguro = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["nomseguro"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = "INSERT INTO seguros values (null, ?, ?, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $nomseguro);
		$stmt->bindParam(2, $direcseguro);
		$stmt->bindParam(3, $tlfseguro1);
		$stmt->bindParam(4, $tlfseguro2);

		$nomseguro = limpiar($_POST["nomseguro"]);
		$direcseguro = limpiar($_POST["direcseguro"]);
		$tlfseguro1 = limpiar($_POST["tlfseguro1"]);
		$tlfseguro2 = limpiar($_POST["tlfseguro2"]);
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> LA EMPRESA DE SEGURO HA SIDO REGISTRADA EXITOSAMENTE";
		exit;

	} else {

		echo "2";
		exit;
	}
}
############################ FUNCION REGISTRAR SEGUROS ########################

########################## FUNCION LISTAR SEGUROS ################################
public function ListarSeguros()
{
	self::SetNames();
	$sql = "SELECT * FROM seguros ORDER BY nomseguro ASC";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
 }
######################### FUNCION LISTAR SEGUROS ##########################

######################### FUNCION ID SEGUROS ###############################
public function SegurosPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM seguros WHERE codseguro = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codseguro"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION ID SEGUROS #########################

######################### FUNCION ACTUALIZAR SEGUROS ########################
public function ActualizarSeguros()
{
	self::SetNames();
	if(empty($_POST["codseguro"]) or empty($_POST["nomseguro"]) or empty($_POST["direcseguro"]) or empty($_POST["tlfseguro1"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT nomseguro FROM seguros WHERE codseguro != ? AND nomseguro = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codseguro"],$_POST["nomseguro"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE seguros set "
		." nomseguro = ?, "
		." direcseguro = ?, "
		." tlfseguro1 = ?, "
		." tlfseguro2 = ? "
		." WHERE "
		." codseguro = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $nomseguro);
		$stmt->bindParam(2, $direcseguro);
		$stmt->bindParam(3, $tlfseguro1);
		$stmt->bindParam(4, $tlfseguro2);
		$stmt->bindParam(5, $codseguro);

		$nomseguro = limpiar($_POST["nomseguro"]);
		$direcseguro = limpiar($_POST["direcseguro"]);
		$tlfseguro1 = limpiar($_POST["tlfseguro1"]);
		$tlfseguro2 = limpiar($_POST["tlfseguro2"]);
		$codseguro = limpiar($_POST["codseguro"]);
		$stmt->execute();

	    echo "<span class='fa fa-check-square-o'></span> LA EMPRESA DE SEGURO HA SIDO ACTUALIZADA EXITOSAMENTE";
	    exit;

	} else {

	    echo "2";
	    exit;
    }
}
####################### FUNCION ACTUALIZAR SEGUROS #######################

######################### FUNCION ELIMINAR SEGUROS #########################
public function EliminarSeguros()
{
	self::SetNames();
	if ($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT codseguro FROM pacientes WHERE codseguro = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codseguro"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		$sql = "DELETE FROM seguros WHERE codseguro = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codseguro);
		$codseguro = decrypt($_GET["codseguro"]);
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
######################## FUNCION ELIMINAR SEGUROS ###########################

########################### FIN DE CLASE SEGUROS ###########################





















################################ CLASE ESPECIALIDADES ##############################

########################### FUNCION REGISTRAR ESPECIALIDADES ########################
public function RegistrarEspecialidades()
{
	self::SetNames();
	if(empty($_POST["nomespecialidad"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT * FROM especialidades WHERE nomespecialidad = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["nomespecialidad"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = "INSERT INTO especialidades values (null, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $nomespecialidad);

		$nomespecialidad = limpiar($_POST["nomespecialidad"]);
		$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> LA ESPECIALIDAD HA SIDO REGISTRADO EXITOSAMENTE";
		exit;

	} else {

		echo "2";
		exit;
	}
}
############################ FUNCION REGISTRAR ESPECIALIDADES ########################

########################## FUNCION LISTAR ESPECIALIDADES ################################
public function ListarEspecialidades()
{
	self::SetNames();
	$sql = "SELECT * FROM especialidades ORDER BY nomespecialidad ASC";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
 }
######################### FUNCION LISTAR ESPECIALIDADES ##########################

######################### FUNCION ID ESPECIALIDADES ###############################
public function EspecialidadesPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM especialidades WHERE codespecialidad = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codespecialidad"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION ID ESPECIALIDADES #########################

######################### FUNCION ACTUALIZAR ESPECIALIDADES ########################
public function ActualizarEspecialidades()
{

	self::SetNames();
	if(empty($_POST["codespecialidad"]) or empty($_POST["nomespecialidad"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT nomespecialidad FROM especialidades WHERE codespecialidad != ? AND nomespecialidad = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codespecialidad"],$_POST["nomespecialidad"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE especialidades set "
		." nomespecialidad = ? "
		." WHERE "
		." codespecialidad = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $nomespecialidad);
		$stmt->bindParam(2, $codespecialidad);

		$nomespecialidad = limpiar($_POST["nomespecialidad"]);
		$codespecialidad = limpiar($_POST["codespecialidad"]);
		$stmt->execute();

	    echo "<span class='fa fa-check-square-o'></span> LA ESPECIALIDAD HA SIDO ACTUALIZADA EXITOSAMENTE";
	    exit;

	} else {

	    echo "2";
	    exit;
    }
}
####################### FUNCION ACTUALIZAR ESPECIALIDADES #######################

######################### FUNCION ELIMINAR ESPECIALIDADES #########################
public function EliminarEspecialidades()
{
	self::SetNames();
	if ($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT codespecialidad FROM medicos WHERE codespecialidad = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codespecialidad"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		$sql = "DELETE FROM especialidades WHERE codespecialidad = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codespecialidad);
		$codespecialidad = decrypt($_GET["codespecialidad"]);
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
######################## FUNCION ELIMINAR ESPECIALIDADES ###########################

########################### FIN DE CLASE ESPECIALIDADES ###########################



























########################### CLASE VALORES LABORATORIO ###########################

############################## FUNCION ID VALORES DE LABORATORIO ############################
public function ValoresPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM valoreslaboratorio WHERE codvalores = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array('1'));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################## FUNCION ID VALORES DE LABORATORIO ############################

############################## FUNCION ACTUALIZAR VALORES DE LABORATORIO ############################
public function ActualizarValores()
{
	if(empty($_POST["hematocritov"]))
	{
		echo "1";
	    exit;
	}
	
	self::SetNames();
	$sql = "UPDATE valoreslaboratorio SET"
  ." hematocritov = ?, "
  ." hemoglobinav = ?, "
  ." leucocitosv = ?, "
  ." neutrofilosv = ?, "
  ." linfocitosv = ?, "
  ." eosinofilosv = ?, "
  ." monositosv = ?, "
  ." basofilosv = ?, "
  ." cayadosv = ?, "
  ." plaquetasv = ?, "
  ." reticulositosv = ?, "
  ." vsgv = ?, "
  ." ptv = ?, "
  ." pttv = ?, "
  ." glucosav = ?, "
  ." colesteroltotalv = ?, "
  ." colesterolhdlv = ?, "
  ." colesterolldlv = ?, "
  ." trigliceridosv = ?, "
  ." acidouricov = ?, "
  ." nitrogenoureicov = ?, "
  ." creatininav = ?, "
  ." proteinastotalesv = ?, "
  ." albuminav = ?, "
  ." globulinav = ?, "
  ." bilirrubinatotalv = ?, "
  ." bilirrubinadirectav = ?, "
  ." bilirrubinaindirectav = ?, "
  ." fosfatasaalcalinav = ?, "
  ." tgov = ?, "
  ." tgpv = ?, "
  ." amilasav = ? "
  ." WHERE "
  ." codvalores = ?;
   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $hematocrito);
	$stmt->bindParam(2, $hemoglobina);
	$stmt->bindParam(3, $leucocitos);
	$stmt->bindParam(4, $neutrofilos);
	$stmt->bindParam(5, $linfocitos);
	$stmt->bindParam(6, $eosinofilos);
	$stmt->bindParam(7, $monositos);
	$stmt->bindParam(8, $basofilos);
	$stmt->bindParam(9, $cayados);
	$stmt->bindParam(10, $plaquetas);
	$stmt->bindParam(11, $reticulositos);
	$stmt->bindParam(12, $vsg);
	$stmt->bindParam(13, $pt);
	$stmt->bindParam(14, $ptt);
	$stmt->bindParam(15, $glucosa);
	$stmt->bindParam(16, $colesteroltotal);
	$stmt->bindParam(17, $colesterolhdl);
	$stmt->bindParam(18, $colesterolldl);
	$stmt->bindParam(19, $trigliceridos);
	$stmt->bindParam(20, $acidourico);
	$stmt->bindParam(21, $nitrogenoureico);
	$stmt->bindParam(22, $creatinina);
	$stmt->bindParam(23, $proteinastotales);
	$stmt->bindParam(24, $albumina);
	$stmt->bindParam(25, $globulina);
	$stmt->bindParam(26, $bilirrubinatotal);
	$stmt->bindParam(27, $bilirrubinadirecta);
	$stmt->bindParam(28, $bilirrubinaindirecta);
	$stmt->bindParam(29, $fosfatasaalcalina);
	$stmt->bindParam(30, $tgo);
	$stmt->bindParam(31, $tgp);
	$stmt->bindParam(32, $amilasa);
	$stmt->bindParam(33, $codvalores);
		
	$hematocrito = limpiar($_POST['hematocritov']);
	$hemoglobina = limpiar($_POST['hemoglobinav']); 
	$leucocitos = limpiar($_POST['leucocitosv']); 
	$neutrofilos = limpiar($_POST['neutrofilosv']); 
	$linfocitos = limpiar($_POST['linfocitosv']); 
	$eosinofilos = limpiar($_POST['eosinofilosv']); 
	$monositos = limpiar($_POST['monositosv']); 
	$basofilos = limpiar($_POST['basofilosv']); 
	$cayados = limpiar($_POST['cayadosv']); 
	$plaquetas = limpiar($_POST['plaquetasv']); 
	$reticulositos = limpiar($_POST['reticulositosv']); 
	$vsg = limpiar($_POST['vsgv']); 
	$pt = limpiar($_POST['ptv']); 
	$ptt = limpiar($_POST['pttv']); 
	$glucosa = limpiar($_POST['glucosav']);
	$colesteroltotal = limpiar($_POST['colesteroltotalv']); 
	$colesterolhdl = limpiar($_POST['colesterolhdlv']); 
	$colesterolldl = limpiar($_POST['colesterolldlv']); 
	$trigliceridos = limpiar($_POST['trigliceridosv']); 
	$acidourico = limpiar($_POST['acidouricov']); 
	$nitrogenoureico = limpiar($_POST['nitrogenoureicov']); 
	$creatinina = limpiar($_POST['creatininav']); 
	$proteinastotales = limpiar($_POST['proteinastotalesv']); 
	$albumina = limpiar($_POST['albuminav']); 
	$globulina = limpiar($_POST['globulinav']);
	$bilirrubinatotal = limpiar($_POST['bilirrubinatotalv']); 
	$bilirrubinadirecta = limpiar($_POST['bilirrubinadirectav']); 
    $bilirrubinaindirecta = limpiar($_POST['bilirrubinaindirectav']); 
	$fosfatasaalcalina = limpiar($_POST['fosfatasaalcalinav']); 
	$tgo = limpiar($_POST['tgov']); 
	$tgp = limpiar($_POST['tgpv']); 
	$amilasa = limpiar($_POST['amilasav']); 
    $codvalores = limpiar($_POST['codvalores']);
	$stmt->execute();
		
	echo "<span class='fa fa-check-square-o'></span> LOS VALORES NORMALES DE EXAMEN DE LABORATORIO HAN SIDO ACTUALIZADOS EXITOSAMENTE";
	exit;
}
############################## FUNCION ACTUALIZAR VALORES DE LABORATORIO ############################

########################### FIN DE CLASE VALORES LABORATORIO ###########################

























############################# CLASE SUCURSALES ##################################

############################ FUNCION REGISTRAR SUCURSALES ##########################
public function RegistrarSucursales()
{
	self::SetNames();
	if(empty($_POST["cuitsucursal"]) or empty($_POST["nomsucursal"]) or empty($_POST["idprovincia"]) or empty($_POST["idcanton"]) or empty($_POST["idparroquia"]) or empty($_POST["direcsucursal"]) or empty($_POST["correosucursal"]) or empty($_POST["dniencargado"]) or empty($_POST["nomencargado"]))
	{
		echo "1";
		exit;
	}

	$sql = " SELECT correosucursal FROM sucursales WHERE correosucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["correosucursal"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{

		echo "2";
		exit;
	}
	else
	{
	$sql = " SELECT cuitsucursal FROM sucursales WHERE cuitsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["cuitsucursal"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
	$query = " INSERT INTO sucursales values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $documsucursal);
	$stmt->bindParam(2, $cuitsucursal);
	$stmt->bindParam(3, $nomsucursal);
	$stmt->bindParam(4, $idprovincia);
	$stmt->bindParam(5, $idcanton);
	$stmt->bindParam(6, $idparroquia);
	$stmt->bindParam(7, $direcsucursal);
	$stmt->bindParam(8, $correosucursal);
	$stmt->bindParam(9, $tlfsucursal);
	$stmt->bindParam(10, $documencargado);
	$stmt->bindParam(11, $dniencargado);
	$stmt->bindParam(12, $nomencargado);
	$stmt->bindParam(13, $tlfencargado);
	$stmt->bindParam(14, $codmoneda);

	$documsucursal = limpiar($_POST['documsucursal']);
	$cuitsucursal = limpiar($_POST["cuitsucursal"]);
	$nomsucursal = limpiar($_POST["nomsucursal"]);
	$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
	$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
	$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
	$direcsucursal = limpiar($_POST["direcsucursal"]);
	$correosucursal = limpiar($_POST["correosucursal"]);
	$tlfsucursal = limpiar($_POST["tlfsucursal"]);
	$documencargado = limpiar($_POST['documencargado']);
	$dniencargado = limpiar($_POST["dniencargado"]);
	$nomencargado = limpiar($_POST["nomencargado"]);
	$tlfencargado = limpiar($_POST["tlfencargado"]);
	$codmoneda = limpiar("0");
	$stmt->execute();

    ##################  SUBIR LOGO DE SUCURSAL ######################################
    //datos del arhivo  
    if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo = ''; }
	if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo = ''; }
    if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo = ''; }  
    //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/png')!==false)&&$tamano_archivo<8000000)//1MB 
	{  
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/sucursales/".$nombre_archivo) && rename("fotos/sucursales/".$nombre_archivo,"fotos/sucursales/".$_POST["cuitsucursal"].".png"))
		{ 
    ## se puede dar un aviso
		} 
    ## se puede dar otro aviso 
	}
    ##################  FINALIZA SUBIR LOGO DE SUCURSAL ##################

			echo "<span class='fa fa-check-square-o'></span> LA SUCURSAL HA SIDO REGISTRADA EXITOSAMENTE";
			exit;
		}
		else
		{
			echo "3";
			exit;
	    }
	}
}
######################### FUNCION REGISTRAR SUCURSALES ###############################

######################## FUNCION LISTAR SUCURSALES ###############################
public function ListarSucursales()
{
	self::SetNames();
	$sql = "SELECT 
	sucursales.codsucursal,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.correosucursal,
	sucursales.tlfsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.tlfencargado,
	sucursales.codmoneda,
	documentos.documento,
	documentos2.documento AS documento2,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM sucursales 
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;	
 }
########################## FUNCION LISTAR SUCURSALES ##########################

############################ FUNCION ID SUCURSALES #################################
public function SucursalesPorId()
{
	self::SetNames();
	$sql = "SELECT 
	sucursales.codsucursal,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.correosucursal,
	sucursales.tlfsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.tlfencargado,
	sucursales.codmoneda,
	documentos.documento,
	documentos2.documento AS documento2,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM sucursales 
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia 
	WHERE sucursales.codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION ID SUCURSALES #################################

############################ FUNCION ACTUALIZAR SUCURSALES ############################
public function ActualizarSucursales()
{
	self::SetNames();
	if(empty($_POST["codsucursal"]) or empty($_POST["cuitsucursal"]) or empty($_POST["nomsucursal"]) or empty($_POST["idprovincia"]) or empty($_POST["idcanton"]) or empty($_POST["idparroquia"]) or empty($_POST["direcsucursal"]) or empty($_POST["correosucursal"]) or empty($_POST["dniencargado"]) or empty($_POST["nomencargado"]))
	{
		echo "1";
		exit;
	}

	$sql = " SELECT correosucursal FROM sucursales WHERE codsucursal != ? AND correosucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codsucursal"]),$_POST["correosucursal"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{
		echo "2";
		exit;
	}
	else
	{
	$sql = " SELECT cuitsucursal FROM sucursales WHERE codsucursal != ? AND cuitsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codsucursal"]),$_POST["cuitsucursal"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE sucursales set "
		." documsucursal = ?, "
		." cuitsucursal = ?, "
		." nomsucursal = ?, "
		." idprovincia = ?, "
		." idcanton = ?, "
		." idparroquia = ?, "
		." direcsucursal = ?, "
		." correosucursal = ?, "
		." tlfsucursal = ?, "
		." documencargado = ?, "
		." dniencargado = ?, "
		." nomencargado = ?, "
		." tlfencargado = ? "
		." where "
		." codsucursal = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $documsucursal);
		$stmt->bindParam(2, $cuitsucursal);
		$stmt->bindParam(3, $nomsucursal);
		$stmt->bindParam(4, $idprovincia);
		$stmt->bindParam(5, $idcanton);
		$stmt->bindParam(6, $idparroquia);
		$stmt->bindParam(7, $direcsucursal);
		$stmt->bindParam(8, $correosucursal);
		$stmt->bindParam(9, $tlfsucursal);
		$stmt->bindParam(10, $documencargado);
		$stmt->bindParam(11, $dniencargado);
		$stmt->bindParam(12, $nomencargado);
		$stmt->bindParam(13, $tlfencargado);
		$stmt->bindParam(14, $codsucursal);

		$documsucursal = limpiar($_POST['documsucursal']);
		$cuitsucursal = limpiar($_POST["cuitsucursal"]);
		$nomsucursal = limpiar($_POST["nomsucursal"]);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
		$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$direcsucursal = limpiar($_POST["direcsucursal"]);
		$correosucursal = limpiar($_POST["correosucursal"]);
		$tlfsucursal = limpiar($_POST["tlfsucursal"]);
		$documencargado = limpiar($_POST['documencargado']);
		$dniencargado = limpiar($_POST["dniencargado"]);
		$nomencargado = limpiar($_POST["nomencargado"]);
		$tlfencargado = limpiar($_POST["tlfencargado"]);
		$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
		$stmt->execute();

    ##################  SUBIR LOGO DE SUCURSAL ######################################
    //datos del arhivo  
    if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo = ''; }
	if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo = ''; }
    if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo = ''; }  
    //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/png')!==false)&&$tamano_archivo<8000000)//1MB 
	{  
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/sucursales/".$nombre_archivo) && rename("fotos/sucursales/".$nombre_archivo,"fotos/sucursales/".$_POST["cuitsucursal"].".png"))
	    { 
    ## se puede dar un aviso
		} 
    ## se puede dar otro aviso 
	}
    ##################  FINALIZA SUBIR LOGO DE SUCURSAL ##################

			echo "<span class='fa fa-check-square-o'></span> LA SUCURSAL HA SIDO ACTUALIZADA EXITOSAMENTE";
			exit;

		}
		else
		{
			echo "3";
			exit;
		}
	}
}
############################ FUNCION ACTUALIZAR SUCURSALES ############################

########################## FUNCION ELIMINAR SUCURSALES ########################
public function EliminarSucursales()
{
	self::SetNames();
	if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT codsucursal FROM citasmedicas WHERE codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = "DELETE FROM sucursales WHERE codsucursal = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codsucursal);
		$codsucursal = limpiar(decrypt($_GET["codsucursal"]));
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
############################ FUNCION ELIMINAR SUCURSALES #######################

############################# FIN DE CLASE SUCURSALES ################################
























############################# CLASE PLANTILLAS ECOGRAFICAS ##################################

############################ FUNCION REGISTRAR PLANTILLAS ECOGRAFICAS ##########################
public function RegistrarPlantillasEcograficas()
{
	self::SetNames();
	if(empty($_POST["nombreplantillaecografia"]) or empty($_POST["procedimientoecografia"]) or empty($_POST["descripcionecografia"]))
	{
		echo "1";
		exit;
	}

	######################### CODIGO DE PLANTILLA #########################
    $sql = "SELECT codplantillaecografia FROM plantillasecograficas 
    ORDER BY idplantillaecografia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$id=$row["codplantillaecografia"];

	}
	if(empty($id))
	{
		$codplantilla = "E1";

	} else {

		$resto = substr($id, 0, 1);
		$coun = strlen($resto);
		$num     = substr($id, $coun);
		$codigo     = $num + 1;
		$codplantilla = "E".$codigo;
	}
	######################### CODIGO DE PLANTILLA #########################

	$sql = " SELECT nombreplantillaecografia FROM plantillasecograficas WHERE nombreplantillaecografia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["nombreplantillaecografia"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
	$query = " INSERT INTO plantillasecograficas values (null, ?, ?, ?, ?);";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $codplantilla);
	$stmt->bindParam(2, $nombreplantillaecografia);
	$stmt->bindParam(3, $procedimientoecografia);
	$stmt->bindParam(4, $descripcionecografia);

	$nombreplantillaecografia = limpiar($_POST['nombreplantillaecografia']);
	$procedimientoecografia = limpiar($_POST["procedimientoecografia"]);
	$descripcionecografia = limpiar($_POST["descripcionecografia"]);
	$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> LA PLANTILLA ECOGRAFICA HA SIDO REGISTRADA EXITOSAMENTE";
		exit;
	}
	else
	{
		echo "2";
		exit;
	}
}
######################### FUNCION REGISTRAR PLANTILLAS ECOGRAFICAS ###############################

########################## FUNCION BUSQUEDA PLANTILLAS ECOGRAFICAS ##########################
public function BusquedaPlantillasEcograficas()
	{
	self::SetNames();
	$sql = "SELECT * FROM plantillasecograficas 
	WHERE CONCAT(nombreplantillaecografia, '',procedimientoecografia, '',descripcionecografia) LIKE '%".limpiar($_GET['becografias'])."%'
	ORDER BY nombreplantillaecografia ASC LIMIT 0,60";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {

	echo "<center><div class='alert alert-danger'>";
	echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	echo " NO SE ENCONTRARON RESULTADOS EN TU BÚSQUEDA REALIZADA</div></center>";
	exit;
		
	} else {
			
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION BUSQUEDA PLANTILLAS ECOGRAFICAS ##########################

######################## FUNCION LISTAR PLANTILLAS ECOGRAFICAS ###############################
public function ListarPlantillasEcograficas()
{
	self::SetNames();
	$sql = "SELECT * FROM plantillasecograficas";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;	
 }
########################## FUNCION LISTAR PLANTILLAS ECOGRAFICAS ##########################

############################ FUNCION ID PLANTILLAS ECOGRAFICAS #################################
public function PlantillasEcograficasPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM plantillasecograficas 
	WHERE codplantillaecografia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codplantillaecografia"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION ID PLANTILLAS ECOGRAFICAS #################################

############################ FUNCION ACTUALIZAR PLANTILLAS ECOGRAFICAS ############################
public function ActualizarPlantillasEcograficas()
{
	self::SetNames();
	if(empty($_POST["codplantillaecografia"]) or empty($_POST["nombreplantillaecografia"]) or empty($_POST["procedimientoecografia"]) or empty($_POST["descripcionecografia"]))
	{
		echo "1";
		exit;
	}


	$sql = " SELECT nombreplantillaecografia FROM plantillasecograficas WHERE codplantillaecografia != ? AND nombreplantillaecografia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codplantillaecografia"]),$_POST["nombreplantillaecografia"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE plantillasecograficas set "
		." nombreplantillaecografia = ?, "
		." procedimientoecografia = ?, "
		." descripcionecografia = ? "
		." where "
		." codplantillaecografia = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $nombreplantillaecografia);
		$stmt->bindParam(2, $procedimientoecografia);
		$stmt->bindParam(3, $descripcionecografia);
		$stmt->bindParam(4, $codplantillaecografia);

		$nombreplantillaecografia = limpiar($_POST['nombreplantillaecografia']);
		$procedimientoecografia = limpiar($_POST["procedimientoecografia"]);
		$descripcionecografia = limpiar($_POST["descripcionecografia"]);
		$codplantillaecografia = limpiar(decrypt($_POST["codplantillaecografia"]));
		$stmt->execute();


		echo "<span class='fa fa-check-square-o'></span> LA PLANTILLA ECOGRAFICA HA SIDO ACTUALIZADA EXITOSAMENTE";
		exit;

	}
	else
	{
		echo "2";
		exit;

	}
}
############################ FUNCION ACTUALIZAR PLANTILLAS ECOGRAFICAS ############################

########################## FUNCION ELIMINAR PLANTILLAS ECOGRAFICAS ########################
public function EliminarPlantillasEcograficas()
{
	self::SetNames();
	if($_SESSION['acceso'] == "administrador") {

	    $sql = "DELETE FROM plantillasecograficas WHERE codplantillaecografia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codplantillaecografia);
		$codplantillaecografia = limpiar(decrypt($_POST["codplantillaecografia"]));
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 	
}
############################ FUNCION ELIMINAR PLANTILLAS ECOGRAFICAS #######################

############################# FIN DE CLASE PLANTILLAS ECOGRAFICAS ################################
























############################# CLASE PLANTILLAS LECTURAS RX ##################################

############################ FUNCION REGISTRAR PLANTILLAS LECTURAS RX ##########################
public function RegistrarPlantillasLecturaRx()
{
	self::SetNames();
	if(empty($_POST["nombreplantillalecturarx"]) or empty($_POST["procedimientolecturarx"]) or empty($_POST["descripcionlecturarx"]))
	{
		echo "1";
		exit;
	}

	######################### CODIGO DE PLANTILLA #########################
    $sql = "SELECT codplantillalecturarx FROM plantillaslecturarx 
    ORDER BY idplantillalecturarx DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$id=$row["codplantillalecturarx"];

	}
	if(empty($id))
	{
		$codplantilla = "L1";

	} else {

		$resto = substr($id, 0, 1);
		$coun = strlen($resto);
		$num     = substr($id, $coun);
		$codigo     = $num + 1;
		$codplantilla = "L".$codigo;
	}
	######################### CODIGO DE PLANTILLA #########################

	$sql = " SELECT nombreplantillalecturarx FROM plantillaslecturarx WHERE nombreplantillalecturarx = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["nombreplantillalecturarx"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
	$query = " INSERT INTO plantillaslecturarx values (null, ?, ?, ?, ?);";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $codplantilla);
	$stmt->bindParam(2, $nombreplantillalecturarx);
	$stmt->bindParam(3, $procedimientolecturarx);
	$stmt->bindParam(4, $descripcionlecturarx);

	$nombreplantillalecturarx = limpiar($_POST['nombreplantillalecturarx']);
	$procedimientolecturarx = limpiar($_POST["procedimientolecturarx"]);
	$descripcionlecturarx = limpiar($_POST["descripcionlecturarx"]);
	$stmt->execute();

		echo "<span class='fa fa-check-square-o'></span> LA PLANTILLA LECTURAS RX HA SIDO REGISTRADA EXITOSAMENTE";
		exit;
	}
	else
	{
		echo "2";
		exit;
	}
}
######################### FUNCION REGISTRAR PLANTILLAS LECTURAS RX ###############################

########################## FUNCION BUSQUEDA PLANTILLAS LECTURAS RX ##########################
public function BusquedaPlantillasLecturaRx()
	{
	self::SetNames();
	$sql = "SELECT * FROM plantillaslecturarx 
	WHERE CONCAT(nombreplantillalecturarx, '',procedimientolecturarx, '',descripcionlecturarx) LIKE '%".limpiar($_GET['blecturarx'])."%'
	ORDER BY nombreplantillalecturarx ASC LIMIT 0,60";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {

	echo "<center><div class='alert alert-danger'>";
	echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	echo " NO SE ENCONTRARON RESULTADOS EN TU BÚSQUEDA REALIZADA</div></center>";
	exit;
		
	} else {
			
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION BUSQUEDA PLANTILLAS LECTURAS RX ##########################

######################## FUNCION LISTAR PLANTILLAS LECTURAS RX ###############################
public function ListarPlantillasLecturaRx()
{
	self::SetNames();
	$sql = "SELECT * FROM plantillaslecturarx";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;	
 }
########################## FUNCION LISTAR PLANTILLAS LECTURAS RX ##########################

############################ FUNCION ID PLANTILLAS LECTURAS RX #################################
public function PlantillasLecturaRxPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM plantillaslecturarx 
	WHERE codplantillalecturarx = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codplantillalecturarx"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION ID PLANTILLAS LECTURAS RX #################################

############################ FUNCION ACTUALIZAR PLANTILLAS LECTURAS RX ############################
public function ActualizarPlantillasLecturaRx()
{
	self::SetNames();
	if(empty($_POST["codplantillalecturarx"]) or empty($_POST["nombreplantillalecturarx"]) or empty($_POST["procedimientolecturarx"]) or empty($_POST["descripcionlecturarx"]))
	{
		echo "1";
		exit;
	}


	$sql = " SELECT nombreplantillalecturarx FROM plantillaslecturarx WHERE codplantillalecturarx != ? AND nombreplantillalecturarx = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codplantillalecturarx"]),$_POST["nombreplantillalecturarx"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE plantillaslecturarx set "
		." nombreplantillalecturarx = ?, "
		." procedimientolecturarx = ?, "
		." descripcionlecturarx = ? "
		." where "
		." codplantillalecturarx = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $nombreplantillalecturarx);
		$stmt->bindParam(2, $procedimientolecturarx);
		$stmt->bindParam(3, $descripcionlecturarx);
		$stmt->bindParam(4, $codplantillalecturarx);

		$nombreplantillalecturarx = limpiar($_POST['nombreplantillalecturarx']);
		$procedimientolecturarx = limpiar($_POST["procedimientolecturarx"]);
		$descripcionlecturarx = limpiar($_POST["descripcionlecturarx"]);
		$codplantillalecturarx = limpiar(decrypt($_POST["codplantillalecturarx"]));
		$stmt->execute();


		echo "<span class='fa fa-check-square-o'></span> LA PLANTILLA LECTURAS RX HA SIDO ACTUALIZADA EXITOSAMENTE";
		exit;

	}
	else
	{
		echo "2";
		exit;

	}
}
############################ FUNCION ACTUALIZAR PLANTILLAS LECTURAS RX ############################

########################## FUNCION ELIMINAR PLANTILLAS LECTURAS RX ########################
public function EliminarPlantillasLecturaRx()
{
	self::SetNames();
	if($_SESSION['acceso'] == "administrador") {

	    $sql = "DELETE FROM plantillaslecturarx WHERE codplantillalecturarx = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codplantillalecturarx);
		$codplantillalecturarx = limpiar(decrypt($_POST["codplantillalecturarx"]));
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 	
}
############################ FUNCION ELIMINAR PLANTILLAS LECTURAS RX #######################

############################# FIN DE CLASE PLANTILLAS LECTURAS RX ################################




















############################# CLASE MEDICOS ##################################

############################ FUNCION REGISTRAR MEDICOS ##########################
public function RegistrarMedicos()
{
	self::SetNames();
	if(empty($_POST["docummedico"]) or empty($_POST["cedmedico"]) or empty($_POST["nommedico"]) or empty($_POST["sexomedico"]) or empty($_POST["tlfmedico"]) or empty($_POST["celmedico"]) or empty($_POST["direcmedico"]) or empty($_POST["correomedico"]) or empty($_POST["mps"]) or empty($_POST["codespecialidad"]) or empty($_POST["codsucursal"]))
	{
		echo "1";
		exit;
	}

	######################### CODIGO DE MEDICO #########################
    $sql = "SELECT codmedico FROM medicos ORDER BY idmedico DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$id=$row["codmedico"];

	}
	if(empty($id))
	{
		$codmedico = "M1";

	} else {

		$resto = substr($id, 0, 1);
		$coun = strlen($resto);
		$num     = substr($id, $coun);
		$codigo     = $num + 1;
		$codmedico = "M".$codigo;
	}
	######################### CODIGO DE MEDICO #########################

	$sql = " SELECT correomedico FROM medicos WHERE correomedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["correomedico"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{
		echo "2";
		exit;
	}
	else
	{
	$sql = " SELECT cedmedico FROM medicos WHERE cedmedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["cedmedico"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
	    $query = " INSERT INTO medicos values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codmedico);
		$stmt->bindParam(2, $docummedico);
		$stmt->bindParam(3, $cedmedico);
		$stmt->bindParam(4, $nommedico);
		$stmt->bindParam(5, $sexomedico);
		$stmt->bindParam(6, $tlfmedico);
		$stmt->bindParam(7, $celmedico);
		$stmt->bindParam(8, $idprovincia);
		$stmt->bindParam(9, $idcanton);
		$stmt->bindParam(10, $idparroquia);
		$stmt->bindParam(11, $direcmedico);
		$stmt->bindParam(12, $correomedico);
		$stmt->bindParam(13, $mps);
		$stmt->bindParam(14, $codespecialidad);
		$stmt->bindParam(15, $fnacmedico);
		$stmt->bindParam(16, $clavemedico);
		$stmt->bindParam(17, $codsucursal);
		$stmt->bindParam(18, $modulos);

		$docummedico = limpiar($_POST["docummedico"]);
		$cedmedico = limpiar($_POST['cedmedico']);
		$nommedico = limpiar($_POST["nommedico"]);
		$sexomedico = limpiar($_POST["sexomedico"]);
		$tlfmedico = limpiar($_POST["tlfmedico"]);
		$celmedico = limpiar($_POST["celmedico"]);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
		$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$direcmedico = limpiar($_POST["direcmedico"]);
		$correomedico = limpiar($_POST["correomedico"]);
		$mps = limpiar($_POST["mps"]);
		$codespecialidad = limpiar(decrypt($_POST["codespecialidad"]));
		$fnacmedico = limpiar($_POST['fnacmedico'] == '' ? "0000-00-00" : date("Y-m-d",strtotime($_POST['fnacmedico'])));
		$clavemedico = password_hash($_POST["cedmedico"], PASSWORD_DEFAULT);
		$codsucursal = implode("",$_POST["codsucursal"]);
		$modulos = empty($_POST["moduloacceso"]) ? "0" : implode(",",$_POST['moduloacceso']);
		$stmt->execute();

    ######################################  SUBIR FOTO DE MEDICO ######################################
    //datos del arhivo  
    if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo = ''; }
	if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo = ''; }
    if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo = ''; }  
    //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/jpeg')!==false)&&$tamano_archivo<8000000)//1MB 
	{
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/".$codmedico.".jpg"))
		{ 
    ## se puede dar un aviso
		} 
    ## se puede dar otro aviso 
	}
    ######################################  FINALIZA SUBIR FOTO DE MEDICO ######################################

			echo "<span class='fa fa-check-square-o'></span> EL MEDICO HA SIDO REGISTRADO EXITOSAMENTE";
			exit;
		}
		else
		{
			echo "3";
			exit;
	    }
	}
}
######################### FUNCION REGISTRAR MEDICOS ###############################

######################## FUNCION LISTAR MEDICOS ###############################
public function ListarMedicos()
{
	self::SetNames();
	$sql = "SELECT
	medicos.idmedico,
	medicos.codmedico,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	medicos.clavemedico,
	medicos.codsucursal,
	medicos.modulos,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM medicos 
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento 
	GROUP BY medicos.codmedico";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
########################## FUNCION LISTAR MEDICOS ##########################

############################ FUNCION ID MEDICOS #################################
public function MedicosPorId()
{
	self::SetNames();
	
	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT
	medicos.idmedico,
	medicos.codmedico,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	medicos.clavemedico,
	medicos.codsucursal,
	medicos.modulos,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM medicos 
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento
	WHERE medicos.codmedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(limpiar($_SESSION["codmedico"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}

	} else {

	$sql = "SELECT
	medicos.idmedico,
	medicos.codmedico,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	medicos.clavemedico,
	medicos.codsucursal,
	medicos.modulos,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM medicos 
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento
	WHERE medicos.codmedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codmedico"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
	}
}		
############################ FUNCION ID MEDICOS #################################

############################ FUNCION ACTUALIZAR MEDICOS ############################
public function ActualizarMedicos()
{
	self::SetNames();
	if(empty($_POST["codmedico"]) or empty($_POST["docummedico"]) or empty($_POST["cedmedico"]) or empty($_POST["nommedico"]) or empty($_POST["sexomedico"]) or empty($_POST["tlfmedico"]) or empty($_POST["celmedico"]) or empty($_POST["direcmedico"]) or empty($_POST["correomedico"]) or empty($_POST["mps"]) or empty($_POST["codespecialidad"]) or empty($_POST["codsucursal"]))
	{
		echo "1";
		exit;
	}

	$sql = " SELECT correomedico FROM medicos WHERE codmedico != ? AND correomedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codmedico"],$_POST["correomedico"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{
		echo "2";
		exit;
	}
	else
	{
	$sql = " SELECT cedmedico FROM medicos WHERE codmedico != ? AND cedmedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codmedico"],$_POST["cedmedico"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{

	$sql = " UPDATE medicos set "
		." docummedico = ?, "
		." cedmedico = ?, "
		." nommedico = ?, "
		." sexomedico = ?, "
		." tlfmedico = ?, "
		." celmedico = ?, "
		." idprovincia = ?, "
		." idcanton = ?, "
		." idparroquia = ?, "
		." direcmedico = ?, "
		." correomedico = ?, "
		." mps = ?, "
		." codespecialidad = ?, "
		." fnacmedico = ?, "
		." codsucursal = ?, "
		." modulos = ? "
		." where "
		." codmedico = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $docummedico);
		$stmt->bindParam(2, $cedmedico);
		$stmt->bindParam(3, $nommedico);
		$stmt->bindParam(4, $sexomedico);
		$stmt->bindParam(5, $tlfmedico);
		$stmt->bindParam(6, $celmedico);
		$stmt->bindParam(7, $idprovincia);
		$stmt->bindParam(8, $idcanton);
		$stmt->bindParam(9, $idparroquia);
		$stmt->bindParam(10, $direcmedico);
		$stmt->bindParam(11, $correomedico);
		$stmt->bindParam(12, $mps);
		$stmt->bindParam(13, $codespecialidad);
		$stmt->bindParam(14, $fnacmedico);
		$stmt->bindParam(15, $codsucursal);
		$stmt->bindParam(16, $modulos);
		$stmt->bindParam(17, $codmedico);

		$docummedico = limpiar($_POST["docummedico"]);
		$cedmedico = limpiar($_POST['cedmedico']);
		$nommedico = limpiar($_POST["nommedico"]);
		$sexomedico = limpiar($_POST["sexomedico"]);
		$tlfmedico = limpiar($_POST["tlfmedico"]);
		$celmedico = limpiar($_POST["celmedico"]);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
		$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$direcmedico = limpiar($_POST["direcmedico"]);
		$correomedico = limpiar($_POST["correomedico"]);
		$mps = limpiar($_POST["mps"]);
		$codespecialidad = limpiar(decrypt($_POST["codespecialidad"]));
		$fnacmedico = limpiar($_POST['fnacmedico'] == '' ? "0000-00-00" : date("Y-m-d",strtotime($_POST['fnacmedico'])));
		$codsucursal = implode("",$_POST["codsucursal"]);
	    $modulos = empty($_POST["moduloacceso"]) ? "0" : implode(",",$_POST['moduloacceso']);
		$codmedico = limpiar($_POST["codmedico"]);
		$stmt->execute();

    ######################################  SUBIR FOTO DE MEDICO ######################################
    //datos del arhivo  
    if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo = ''; }
	if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo = ''; }
    if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo = ''; }  
    //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/jpeg')!==false)&&$tamano_archivo<8000000)//1MB 
	{  
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/".$_POST["codmedico"].".jpg"))
		{ 
    ## se puede dar un aviso
		} 
    ## se puede dar otro aviso 
		}
    ######################################  FINALIZA SUBIR FOTO DE MEDICO ######################################

			echo "<span class='fa fa-check-square-o'></span> EL MEDICO HA SIDO ACTUALIZADO EXITOSAMENTE";
			exit;

		}
		else
		{
			echo "3";
			exit;
		}
	 }
}
############################ FUNCION ACTUALIZAR MEDICOS ############################

############################ FUNCION ACTUALIZAR DATOS MEDICOS ############################
public function ActualizarDatosMedicos()
{
	self::SetNames();
	if(empty($_POST["codmedico"]) or empty($_POST["docummedico"]) or empty($_POST["cedmedico"]) or empty($_POST["nommedico"]) or empty($_POST["sexomedico"]) or empty($_POST["tlfmedico"]) or empty($_POST["celmedico"]) or empty($_POST["direcmedico"]) or empty($_POST["correomedico"]) or empty($_POST["mps"]) or empty($_POST["codespecialidad"]))
	{
		echo "1";
		exit;
	}

	$sql = " SELECT correomedico FROM medicos WHERE codmedico != ? AND correomedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codmedico"],$_POST["correomedico"]));
	$num = $stmt->rowCount();
	if($num > 0)
	{
		echo "2";
		exit;
	}
	else
	{
	$sql = " SELECT cedmedico FROM medicos WHERE codmedico != ? AND cedmedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codmedico"],$_POST["cedmedico"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{

	$sql = " UPDATE medicos set "
		." docummedico = ?, "
		." cedmedico = ?, "
		." nommedico = ?, "
		." sexomedico = ?, "
		." tlfmedico = ?, "
		." celmedico = ?, "
		." idprovincia = ?, "
		." idcanton = ?, "
		." idparroquia = ?, "
		." direcmedico = ?, "
		." correomedico = ?, "
		." mps = ?, "
		." codespecialidad = ?, "
		." fnacmedico = ? "
		." where "
		." codmedico = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $docummedico);
		$stmt->bindParam(2, $cedmedico);
		$stmt->bindParam(3, $nommedico);
		$stmt->bindParam(4, $sexomedico);
		$stmt->bindParam(5, $tlfmedico);
		$stmt->bindParam(6, $celmedico);
		$stmt->bindParam(7, $idprovincia);
		$stmt->bindParam(8, $idcanton);
		$stmt->bindParam(9, $idparroquia);
		$stmt->bindParam(10, $direcmedico);
		$stmt->bindParam(11, $correomedico);
		$stmt->bindParam(12, $mps);
		$stmt->bindParam(13, $codespecialidad);
		$stmt->bindParam(14, $fnacmedico);
		$stmt->bindParam(15, $codmedico);

		$docummedico = limpiar($_POST["docummedico"]);
		$cedmedico = limpiar($_POST['cedmedico']);
		$nommedico = limpiar($_POST["nommedico"]);
		$sexomedico = limpiar($_POST["sexomedico"]);
		$tlfmedico = limpiar($_POST["tlfmedico"]);
		$celmedico = limpiar($_POST["celmedico"]);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
		$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$direcmedico = limpiar($_POST["direcmedico"]);
		$correomedico = limpiar($_POST["correomedico"]);
		$mps = limpiar($_POST["mps"]);
		$codespecialidad = limpiar(decrypt($_POST["codespecialidad"]));
		$fnacmedico = limpiar($_POST['fnacmedico'] == '' ? "0000-00-00" : date("Y-m-d",strtotime($_POST['fnacmedico'])));
		$codmedico = limpiar($_POST["codmedico"]);
		$stmt->execute();

    ######################################  SUBIR FOTO DE MEDICO ######################################
    //datos del arhivo  
    if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo = ''; }
	if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo = ''; }
    if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo = ''; }  
    //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/jpeg')!==false)&&$tamano_archivo<8000000)//1MB 
	{  
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/".$_POST["codmedico"].".jpg"))
		{ 
    ## se puede dar un aviso
		} 
    ## se puede dar otro aviso 
		}
    ######################################  FINALIZA SUBIR FOTO DE MEDICO ######################################

			echo "<span class='fa fa-check-square-o'></span> SUS DATOS PERSONALES HAN SIDO ACTUALIZADOS EXITOSAMENTE";
			exit;

		}
		else
		{
			echo "3";
			exit;
		}
	 }
}
############################ FUNCION ACTUALIZAR DATOS MEDICOS ############################

################################## FUNCION REINICIAR CLAVE MEDICOS ###################################
public function ReiniciarClaveMedicos()
{
	self::SetNames();
	$sql = "UPDATE medicos set "
	." clavemedico = ? "
	." where "
	." codmedico = ?;
	";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $clavemedico);
	$stmt->bindParam(2, $codmedico);
	
	$clavemedico = password_hash(decrypt($_GET["cedmedico"]), PASSWORD_DEFAULT);
	$codmedico= limpiar(decrypt($_GET['codmedico']));
	$stmt->execute();

	echo "1";
	exit;
}
################################## FUNCION REINICIAR CLAVE MEDICOS ###################################

########################## FUNCION ELIMINAR MEDICOS ########################
public function EliminarMedicos()
{
	self::SetNames();
    if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT codmedico FROM horarios WHERE codmedico = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codmedico"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = "DELETE FROM medicos WHERE codmedico = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codmedico);
		$codmedico = decrypt($_GET["codmedico"]);
		$stmt->execute();

		$cedmedico = decrypt($_GET["codmedico"]);
		if (file_exists("fotos/".$codmedico.".jpg")){
	    //funcion para eliminar una carpeta con contenido
		$archivos = "fotos/".$codmedico.".jpg";		
		unlink($archivos);
		}

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
############################ FUNCION ELIMINAR MEDICOS #######################

######################## FUNCION BUSCAR MEDICOS POR SUCURSAL ##########################
public function BuscarMedicosxSucursal() 
	{
	self::SetNames();
	$sql = "SELECT * FROM medicos 
    LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad 
    LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal 
	WHERE medicos.codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";		
	    exit;
	}
	else
	{
	while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR MEDICOS POR SUCURSAL ##########################

######################## FUNCION BUSCAR MEDICOS POR SUCURSAL Y ESPECIALIDAD ##########################
public function BuscarMedicosxSucursalEspecialidad() 
	{
	self::SetNames();
	$sql = "SELECT * FROM medicos 
    LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad  
    LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal 
	WHERE medicos.codsucursal = ?
	AND medicos.codespecialidad = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"]),decrypt($_GET["codespecialidad"])));
	$num = $stmt->rowCount();
	    if($num==0)
	{
		echo "<option value=''> -- SIN RESULTADOS -- </option>";
		exit;
	}
	else
	{
	while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR MEDICOS POR SUCURSAL Y ESPECIALIDAD ##########################

######################## FUNCION BUSCAR MEDICOS POR SUCURSAL ##########################
public function BusquedaMedicosxSucursal() 
	{
	self::SetNames();
	$sql = "SELECT
	medicos.idmedico,
	medicos.codmedico,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	medicos.clavemedico,
	medicos.codsucursal,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	sucursales.nomencargado,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM medicos 
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento
	WHERE medicos.codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
	while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR MEDICOS POR SUCURSAL ##########################

######################## FUNCION BUSCAR PROFESIONAL POR SUCURSAL ##########################
public function BuscarProfesionalxSucursal() 
	{
	self::SetNames();
	$sql = "SELECT * FROM medicos 
    LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad  
    LEFT JOIN sucursales ON medicos.codsucursal = sucursales.codsucursal 
	WHERE medicos.codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"])));
	$num = $stmt->rowCount();
	    if($num==0)
	{
		echo "<option value=''> -- SIN RESULTADOS -- </option>";
		exit;
	}
	else
	{
	while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR PROFESIONAL POR SUCURSAL ##########################

############################# FIN DE CLASE MEDICOS ################################

























############################# CLASE HORARIOS ##################################

############################ FUNCION REGISTRAR HORARIOS ##########################
public function RegistrarHorarios()
{
	self::SetNames();
	if(empty($_POST["codsucursal"]) or empty($_POST["codmedico"]) or empty($_POST["dias"]) or empty($_POST["hora_desde"]) or empty($_POST["hora_hasta"]))
	{
		echo "1";
		exit;
	}
	elseif (strtotime($_POST['hora_desde']) > strtotime($_POST['hora_hasta'])){

	    echo "2";
		exit;
	}

	############## VERIFICO LOS DIAS REGISTRADOS #################
	$sql = "SELECT
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales
	FROM horarios 
	WHERE codmedico = '".limpiar(decrypt($_POST['codmedico']))."'
    AND codsucursal = '".limpiar(decrypt($_POST["codsucursal"]))."'";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	$days_laborales = explode(",", $row['dias_laborales']);
	$days = $_POST["dias"];
	$current_date = date('Y-m-d H:i');
	############## VERIFICO LOS DIAS REGISTRADOS #################

	############## COMPARO LOS ARRAY DIAS #################
	foreach($days as $day => $num):
		$nums = array_values($days);

		if (in_array($num, $days_laborales) ) {

			echo "3";
		    exit;
		} 

	endforeach;
	############## COMPARO LOS ARRAY DIAS #################

	###################### REGISTRO LOS DIAS ######################
	for($i=0;$i<count($_POST['dias']);$i++){  //recorro el array
		if (!empty($_POST['dias'][$i])) {

			$query = " INSERT INTO horarios values (null, ?, ?, ?, ?, ?);";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codsucursal);
			$stmt->bindParam(2, $codmedico);
			$stmt->bindParam(3, $dias);
			$stmt->bindParam(4, $hora_desde);
			$stmt->bindParam(5, $hora_hasta);

			$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
			$codmedico = limpiar(decrypt($_POST['codmedico']));
			$dias = limpiar($_POST["dias"][$i]);
			//$dias = implode(",",$_POST["dias"]);
			$hora_desde = limpiar($_POST["hora_desde"]);
			$hora_hasta = limpiar($_POST["hora_hasta"]);
			$stmt->execute();
		} 
	}
	###################### REGISTRO LOS DIAS ######################

	echo "<span class='fa fa-check-square-o'></span> EL HORARIO DEL MEDICO HA SIDO REGISTRADO EXITOSAMENTE";
	exit;
}
######################### FUNCION REGISTRAR HORARIOS ###############################

######################## FUNCION LISTAR HORARIOS ###############################
public function ListarHorarios()
{
	self::SetNames();
	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT
	horarios.codhorario,
	horarios.codsucursal,
	horarios.codmedico,
	horarios.dias,
	horarios.hora_desde,
	horarios.hora_hasta,
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM horarios 
	LEFT JOIN medicos ON horarios.codmedico = medicos.codmedico
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON horarios.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento
	WHERE horarios.codmedico = '".limpiar($_SESSION["codmedico"])."' 
	AND horarios.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
	GROUP BY horarios.hora_desde, horarios.hora_hasta
	ORDER BY horarios.codmedico, horarios.dias ASC";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;

	} else {

	$sql = "SELECT
	horarios.codhorario,
	horarios.codsucursal,
	horarios.codmedico,
	horarios.dias,
	horarios.hora_desde,
	horarios.hora_hasta,
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM horarios 
	LEFT JOIN medicos ON horarios.codmedico = medicos.codmedico
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON horarios.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento 
	GROUP BY horarios.hora_desde, horarios.hora_hasta
	ORDER BY horarios.codmedico, horarios.dias ASC";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
	}
}
########################## FUNCION LISTAR HORARIOS ##########################

############################ FUNCION ID HORARIOS #################################
public function HorariosPorId()
{
	self::SetNames();
	$sql = "SELECT
	horarios.codhorario,
	horarios.codsucursal,
	horarios.codmedico,
	horarios.dias,
	horarios.hora_desde,
	horarios.hora_hasta,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM horarios 
	LEFT JOIN medicos ON horarios.codmedico = medicos.codmedico
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON horarios.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento
	WHERE horarios.codhorario = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codhorario"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}		
############################ FUNCION ID HORARIOS #################################

############################ FUNCION ACTUALIZAR HORARIOS ############################
public function ActualizarHorarios()
{
	self::SetNames();
	if(empty($_POST["codhorario"]) or empty($_POST["codsucursal"]) or empty($_POST["codmedico"]) or empty($_POST["dias"]) or empty($_POST["hora_desde"]) or empty($_POST["hora_hasta"]) or empty($_POST["codsucursal"]))
	{
		echo "1";
		exit;
	}
	elseif (strtotime($_POST['hora_desde']) > strtotime($_POST['hora_hasta'])){

	    echo "2";
		exit;
	}

	############## VERIFICO LOS DIAS REGISTRADOS #################
	$sql = "SELECT
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales
	FROM horarios 
	WHERE codmedico = '".limpiar(decrypt($_POST['codmedico']))."'
    AND codsucursal = '".limpiar(decrypt($_POST["codsucursal"]))."'";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	$days_laborales = explode(",", $row['dias_laborales']);
	$days = $_POST["dias"];
	$current_date = date('Y-m-d H:i');
	############## VERIFICO LOS DIAS REGISTRADOS #################

	############## COMPARO LOS ARRAY DIAS #################
	/*foreach($days as $day => $num):
		$nums = array_values($days);

		if (in_array($num, $days_laborales) ) {

			echo "3";
		    exit;
		} 

	endforeach;*/
	############## COMPARO LOS ARRAY DIAS #################

	###################### ELIMINO LOS REGISTRO DE DIAS ######################
	for($i=0;$i<count($_POST['dias']);$i++){  //recorro el array
		if (!empty($_POST['dias'][$i])) {

			$sql = "DELETE FROM horarios WHERE codsucursal = ? AND codmedico = ? AND dias = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->bindParam(1,$codsucursal);
			$stmt->bindParam(2,$codmedico);
			$stmt->bindParam(3,$dias);

			$codsucursal = decrypt($_POST["codsucursal"]);
			$codmedico = decrypt($_POST["codmedico"]);
			$dias = limpiar($_POST["dias"][$i]);
			$stmt->execute();
		} 
	}
	###################### ELIMINO LOS REGISTRO DE DIAS ######################

	###################### ACTUALIZO LOS DIAS ######################
	for($i=0;$i<count($_POST['dias']);$i++){  //recorro el array
		if (!empty($_POST['dias'][$i])) {

		    $query = " INSERT INTO horarios values (null, ?, ?, ?, ?, ?);";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codsucursal);
			$stmt->bindParam(2, $codmedico);
			$stmt->bindParam(3, $dias);
			$stmt->bindParam(4, $hora_desde);
			$stmt->bindParam(5, $hora_hasta);

			$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
			$codmedico = limpiar(decrypt($_POST['codmedico']));
			$dias = limpiar($_POST["dias"][$i]);
			//$dias = implode(",",$_POST["dias"]);
			$hora_desde = limpiar($_POST["hora_desde"]);
			$hora_hasta = limpiar($_POST["hora_hasta"]);
			$stmt->execute();
		} 
	}
	###################### ACTUALIZO LOS DIAS ######################

	/*$sql = " UPDATE horarios set "
		." codsucursal = ?, "
		." codmedico = ?, "
		." dias = ?, "
		." hora_desde = ?, "
		." hora_hasta = ? "
		." where "
		." codhorario = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $codsucursal);
		$stmt->bindParam(2, $codmedico);
		$stmt->bindParam(3, $dias);
		$stmt->bindParam(4, $hora_desde);
		$stmt->bindParam(5, $hora_hasta);
		$stmt->bindParam(6, $codhorario);

		$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
	    $codmedico = limpiar(decrypt($_POST['codmedico']));
	    $dias = implode(",",$_POST["dias"]);
	    $hora_desde = limpiar($_POST["hora_desde"]);
	    $hora_hasta = limpiar($_POST["hora_hasta"]);
		$codhorario = limpiar(decrypt($_POST["codhorario"]));
		$stmt->execute();*/

	echo "<span class='fa fa-check-square-o'></span> EL HORARIO DEL MEDICO HA SIDO ACTUALIZADO EXITOSAMENTE";
	exit;
}
############################ FUNCION ACTUALIZAR HORARIOS ############################

########################## FUNCION ELIMINAR HORARIOS ########################
public function EliminarHorarios()
{
	self::SetNames();
    if($_SESSION['acceso'] == "administrador" || $_SESSION["acceso"]=="secretaria") {

		$sql = "DELETE FROM horarios WHERE codhorario = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codhorario);
		$codhorario = decrypt($_GET["codhorario"]);
		$stmt->execute();

		echo "1";
		exit;
	}	
}
############################ FUNCION ELIMINAR HORARIOS #######################

################################ FUNCION BUSQUEDA HORARIO POR MEDICO ################################
public function BuscarHorarioxMedico()
{
	self::SetNames();
	$sql = "SELECT
	horarios.codhorario,
	horarios.codsucursal,
	horarios.codmedico,
	horarios.dias,
	horarios.hora_desde,
	horarios.hora_hasta,
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales,
	medicos.docummedico,
	medicos.cedmedico,
	medicos.nommedico,
	medicos.sexomedico,
	medicos.tlfmedico,
	medicos.celmedico,
	medicos.idprovincia,
	medicos.idcanton,
	medicos.idparroquia,
	medicos.direcmedico,
	medicos.correomedico,
	medicos.correomedico,
	medicos.mps,
	medicos.codespecialidad,
	medicos.fnacmedico,
	sucursales.documsucursal,
	sucursales.cuitsucursal,
	sucursales.nomsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	especialidades.nomespecialidad,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia
	FROM horarios 
	LEFT JOIN medicos ON horarios.codmedico = medicos.codmedico
	LEFT JOIN documentos ON medicos.docummedico = documentos.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN tbl_provincia ON medicos.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON medicos.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON medicos.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN sucursales ON horarios.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos AS documentos2 ON sucursales.documsucursal = documentos2.coddocumento 
	WHERE horarios.codsucursal = ?
	AND horarios.codmedico = ?
	GROUP BY horarios.hora_desde, horarios.hora_hasta
	ORDER BY dias_laborales ASC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> NO TIENE HORARIO DISPONIBLE</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
    }
}
################################ FUNCION BUSQUEDA HORARIO POR MEDICO ################################

############################# FIN DE CLASE HORARIOS ################################
























############################# CLASE PACIENTES ##################################

############################### FUNCION CARGAR PACIENTES ##############################
public function CargaPacientes()
	{
	self::SetNames();
	if(empty($_FILES["sel_file"]))
	{
		echo "1";
		exit;
	}

    //Aquí es donde seleccionamos nuestro csv
     $fname = $_FILES['sel_file']['name'];
     //echo 'Cargando nombre del archivo: '.$fname.' ';
     $chk_ext = explode(".",$fname);
     
    if(strtolower(end($chk_ext)) == "csv")
    {
    //si es correcto, entonces damos permisos de lectura para subir
    $filename = $_FILES['sel_file']['tmp_name'];
    $handle = fopen($filename, "r");
    $this->dbh->beginTransaction();
    
    while (($data = fgetcsv($handle, 1000, ";")) !== FALSE) {

        //Insertamos los datos con los valores...
        $query = " INSERT INTO pacientes values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codpaciente);
		$stmt->bindParam(2, $numerohistoria);
		$stmt->bindParam(3, $documpaciente);
		$stmt->bindParam(4, $cedpaciente);
		$stmt->bindParam(5, $pnompaciente);
		$stmt->bindParam(6, $snompaciente);
		$stmt->bindParam(7, $papepaciente);
		$stmt->bindParam(8, $sapepaciente);
		$stmt->bindParam(9, $direcpaciente);
		$stmt->bindParam(10, $barriopaciente);
		$stmt->bindParam(11, $idparroquia);
		$stmt->bindParam(12, $idcanton);
		$stmt->bindParam(13, $idprovincia);
		$stmt->bindParam(14, $zonapaciente);
		$stmt->bindParam(15, $tlfpaciente);
		$stmt->bindParam(16, $fnacpaciente);
		$stmt->bindParam(17, $lnacpaciente);
		$stmt->bindParam(18, $nacpaciente);
		$stmt->bindParam(19, $enfoquepaciente);
		$stmt->bindParam(20, $sexopaciente);
		$stmt->bindParam(21, $estadopaciente);
		$stmt->bindParam(22, $instruccionpaciente);
		$stmt->bindParam(23, $ocupacionpaciente);
		$stmt->bindParam(24, $trabajapaciente);
		$stmt->bindParam(25, $codseguro);
		$stmt->bindParam(26, $referidopaciente);
		$stmt->bindParam(27, $gruposapaciente);
		$stmt->bindParam(28, $emailpaciente);
		$stmt->bindParam(29, $nomacompana);
		$stmt->bindParam(30, $direcacompana);
		$stmt->bindParam(31, $tlfacompana);
		$stmt->bindParam(32, $parentescoacompana);
		$stmt->bindParam(33, $nomresponsable);
		$stmt->bindParam(34, $direcresponsable);
		$stmt->bindParam(35, $tlfresponsable);
		$stmt->bindParam(36, $parentescoresponsable);
		$stmt->bindParam(37, $clavepaciente);
		$stmt->bindParam(38, $fecha_admision);

    	$codpaciente = limpiar($data[0]);
    	$numerohistoria = limpiar($data[1]);
		$documpaciente = limpiar($data[2]);
		$cedpaciente = limpiar($data[3]);
		$pnompaciente = limpiar($data[4]);
		$snompaciente = limpiar($data[5]);
		$papepaciente = limpiar($data[6]);
		$sapepaciente = limpiar($data[7]);
		$direcpaciente = limpiar($data[8]);
		$barriopaciente = limpiar($data[9]);
		$idparroquia = limpiar($data[10]);
		$idcanton = limpiar($data[11]);
		$idprovincia = limpiar($data[12]);
		$zonapaciente = limpiar($data[13]);
		$tlfpaciente = limpiar($data[14]);
		$fnacpaciente = limpiar($data[15]);
		$lnacpaciente = limpiar($data[16]);
		$nacpaciente = limpiar($data[17]);
		$enfoquepaciente = limpiar($data[18]);
		$sexopaciente = limpiar($data[19]);
		$estadopaciente = limpiar($data[20]);
		$instruccionpaciente = limpiar($data[21]);
		$ocupacionpaciente = limpiar($data[22]);
		$trabajapaciente = limpiar($data[23]);
		$codseguro = limpiar($data[24]);
		$referidopaciente = limpiar($data[25]);
		$gruposapaciente = limpiar($data[26]);
		$emailpaciente = limpiar($data[27]);
		$nomacompana = limpiar($data[28]);
		$direcacompana = limpiar($data[29]);
		$tlfacompana = limpiar($data[30]);
		$parentescoacompana = limpiar($data[31]);
		$nomresponsable = limpiar($data[32]);
		$direcresponsable = limpiar($data[33]);
		$tlfresponsable = limpiar($data[34]);
		$parentescoresponsable = limpiar($data[35]);
		$clavepaciente = password_hash($data[3], PASSWORD_DEFAULT);
		$fecha_admision = limpiar(date("Y-m-d"));
    	$stmt->execute();
	
    }
           
        $this->dbh->commit();
        //cerramos la lectura del archivo "abrir archivo" con un "cerrar archivo"
        fclose($handle);
	    
	    echo "<span class='fa fa-check-square-o'></span> LA CARGA MASIVA DE PACIENTES FUE REALIZADA EXITOSAMENTE";
	    exit;    
    }
    else
    {
        //si aparece esto es posible que el archivo no tenga el formato adecuado, inclusive cuando es cvs, revisarlo para ver si esta separado por " , "
        echo "2";
		exit;
    }  
}
############################## FUNCION CARGAR PACIENTES ##############################

############################ FUNCION BUSCAR DOCUMENTO DE PACIENTE ################################
public function DocumentoPaciente()
{
	self::SetNames();
	$sql = "SELECT cedpaciente FROM pacientes WHERE cedpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(limpiar($_GET["cedpaciente"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
}
######################### FUNCION BUSCAR DOCUMENTO DE PACIENTE #############################

############################ FUNCION REGISTRAR PACIENTES ##########################
public function RegistrarPacientes()
{
	self::SetNames();
	if(empty($_POST["cedpaciente"]) or empty($_POST["pnompaciente"]) or empty($_POST["papepaciente"]) or empty($_POST["sexopaciente"]))
	{
		echo "1";
		exit;
	}

	######################### CODIGO DE PACIENTE #########################
    $sql = "SELECT codpaciente FROM pacientes ORDER BY idpaciente DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$id=$row["codpaciente"];

	}
	if(empty($id))
	{
		$codpaciente = "P1";

	} else {

		$resto = substr($id, 0, 1);
		$coun = strlen($resto);
		$num     = substr($id, $coun);
		$codigo     = $num + 1;
		$codpaciente = "P".$codigo;
	}
	######################### CODIGO DE PACIENTE #########################

	################ CREO Nº DE HISTORIA ####################
	$sql = "SELECT numerohistoria FROM pacientes 
	ORDER BY idpaciente DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["numerohistoria"];

	}
	if(empty($documento))
	{
		$numerohistoria = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $numerohistoria = $numfinal;
	}
    ################ CREO Nº DE HISTORIA ###############

	$sql = " SELECT cedpaciente FROM pacientes WHERE cedpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["cedpaciente"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = " INSERT INTO pacientes values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codpaciente);
		$stmt->bindParam(2, $numerohistoria);
		$stmt->bindParam(3, $documpaciente);
		$stmt->bindParam(4, $cedpaciente);
		$stmt->bindParam(5, $pnompaciente);
		$stmt->bindParam(6, $snompaciente);
		$stmt->bindParam(7, $papepaciente);
		$stmt->bindParam(8, $sapepaciente);
		$stmt->bindParam(9, $direcpaciente);
		$stmt->bindParam(10, $barriopaciente);
		$stmt->bindParam(11, $idparroquia);
		$stmt->bindParam(12, $idcanton);
		$stmt->bindParam(13, $idprovincia);
		$stmt->bindParam(14, $zonapaciente);
		$stmt->bindParam(15, $tlfpaciente);
		$stmt->bindParam(16, $fnacpaciente);
		$stmt->bindParam(17, $lnacpaciente);
		$stmt->bindParam(18, $nacpaciente);
		$stmt->bindParam(19, $enfoquepaciente);
		$stmt->bindParam(20, $sexopaciente);
		$stmt->bindParam(21, $estadopaciente);
		$stmt->bindParam(22, $instruccionpaciente);
		$stmt->bindParam(23, $ocupacionpaciente);
		$stmt->bindParam(24, $trabajapaciente);
		$stmt->bindParam(25, $codseguro);
		$stmt->bindParam(26, $referidopaciente);
		$stmt->bindParam(27, $gruposapaciente);
		$stmt->bindParam(28, $emailpaciente);
		$stmt->bindParam(29, $nomacompana);
		$stmt->bindParam(30, $direcacompana);
		$stmt->bindParam(31, $tlfacompana);
		$stmt->bindParam(32, $parentescoacompana);
		$stmt->bindParam(33, $nomresponsable);
		$stmt->bindParam(34, $direcresponsable);
		$stmt->bindParam(35, $tlfresponsable);
		$stmt->bindParam(36, $parentescoresponsable);
		$stmt->bindParam(37, $clavepaciente);
		$stmt->bindParam(38, $fecha_admision);

		$documpaciente = limpiar($_POST["documpaciente"]);
		$cedpaciente = limpiar($_POST["cedpaciente"]);
		$pnompaciente = limpiar($_POST["pnompaciente"]);
		$snompaciente = limpiar($_POST["snompaciente"]);
		$papepaciente = limpiar($_POST["papepaciente"]);
		$sapepaciente = limpiar($_POST["sapepaciente"]);
		$direcpaciente = limpiar($_POST["direcpaciente"]);
		$barriopaciente = null;
		$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$zonapaciente = null;
		$tlfpaciente = limpiar($_POST["tlfpaciente"]);
		$fnacpaciente = limpiar($_POST['fnacpaciente'] == '' ? "0000-00-00" : date("Y-m-d",strtotime($_POST['fnacpaciente'])));
		$lnacpaciente = limpiar($_POST["lnacpaciente"]);
		$nacpaciente = limpiar($_POST["nacpaciente"]);
		$enfoquepaciente = null;
		$sexopaciente = limpiar($_POST["sexopaciente"]);
		$estadopaciente = limpiar($_POST["estadopaciente"]);
		$instruccionpaciente = limpiar($_POST["instruccionpaciente"]);
		$ocupacionpaciente = limpiar($_POST["ocupacionpaciente"]);
		$trabajapaciente = limpiar($_POST["trabajapaciente"]);
		//$codseguro = limpiar($_POST["codseguro"]);
		$codseguro = 1;
		$referidopaciente = limpiar($_POST["referidopaciente"]);
		$gruposapaciente = $_POST["gruposapaciente"];
		$emailpaciente = limpiar($_POST["emailpaciente"]);
		$nomacompana = limpiar($_POST["nomacompana"]);
		$direcacompana = limpiar($_POST["direcacompana"]);
		$tlfacompana = limpiar($_POST["tlfacompana"]);
		$parentescoacompana = limpiar($_POST["parentescoacompana"]);
		$nomresponsable = limpiar($_POST["nomresponsable"]);
		$direcresponsable = limpiar($_POST["direcresponsable"]);
		$tlfresponsable = limpiar($_POST["tlfresponsable"]);
		$parentescoresponsable = limpiar($_POST["parentescoresponsable"]);
		$clavepaciente = password_hash($_POST["cedpaciente"], PASSWORD_DEFAULT);
		$fecha_admision = limpiar(date("Y-m-d"));
		$stmt->execute();

    ######################################  SUBIR FOTO DE PACIENTE ######################################
    //datos del arhivo  
    if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo = ''; }
	if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo = ''; }
    if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo = ''; }  
    //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/png')!==false)&&$tamano_archivo<8000000)//1MB  
	{ 
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/".$_POST["codpaciente"].".png"))
		{ 
    ## se puede dar un aviso
		} 
    ## se puede dar otro aviso 
	}
    ######################################  FINALIZA SUBIR FOTO DE PACIENTE ######################################

		echo "<span class='fa fa-check-square-o'></span> EL PACIENTE HA SIDO REGISTRADO EXITOSAMENTE";
		exit;
	}
	else
	{
		echo "3";
		exit;
	}
}
######################### FUNCION REGISTRAR PACIENTES ###############################

########################## FUNCION BUSQUEDA DE PACIENTES ###############################
public function BusquedaPacientes()
	{
	self::SetNames();
	$sql = "SELECT
	pacientes.idpaciente,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia,
	pacientes.idcanton,
	pacientes.idprovincia,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	documentos.documento,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	seguros.nomseguro,
	seguros.direcseguro,
	seguros.tlfseguro1,
	seguros.tlfseguro2
	FROM pacientes 
	LEFT JOIN documentos ON pacientes.documpaciente = documentos.coddocumento
	LEFT JOIN tbl_provincia ON pacientes.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON pacientes.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON pacientes.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	WHERE CONCAT(pacientes.numerohistoria, '',pacientes.cedpaciente, '',pacientes.pnompaciente, '',pacientes.papepaciente, '',if(pacientes.nomacompana='','0',pacientes.nomacompana), if(pacientes.nomresponsable='','0',pacientes.nomresponsable)) LIKE '%".limpiar($_GET['bpacientes'])."%'
	ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {

	echo "<center><div class='alert alert-danger'>";
	echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	echo " NO SE ENCONTRARON RESULTADOS EN TU BÚSQUEDA REALIZADA</div></center>";
	exit;
		
	} else {
			
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION BUSQUEDA DE PACIENTES ###############################

######################## FUNCION LISTAR PACIENTES ###############################
public function ListarPacientes()
{
	self::SetNames();
	$sql = "SELECT
	pacientes.idpaciente,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia,
	pacientes.idcanton,
	pacientes.idprovincia,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	documentos.documento,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	seguros.nomseguro,
	seguros.direcseguro,
	seguros.tlfseguro1,
	seguros.tlfseguro2
	FROM pacientes 
	LEFT JOIN documentos ON pacientes.documpaciente = documentos.coddocumento
	LEFT JOIN tbl_provincia ON pacientes.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON pacientes.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON pacientes.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
 }
########################## FUNCION LISTAR PACIENTES ##########################

############################ FUNCION ID PACIENTES #################################
public function PacientesPorId()
{
	self::SetNames();
	
	if ($_SESSION['acceso'] == "paciente") {

	$sql = "SELECT
	pacientes.idpaciente,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia,
	pacientes.idcanton,
	pacientes.idprovincia,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	documentos.documento,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	seguros.nomseguro,
	seguros.direcseguro,
	seguros.tlfseguro1,
	seguros.tlfseguro2
	FROM pacientes 
	LEFT JOIN documentos ON pacientes.documpaciente = documentos.coddocumento
	LEFT JOIN tbl_provincia ON pacientes.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON pacientes.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON pacientes.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro 
	WHERE pacientes.codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(limpiar($_SESSION["codpaciente"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}

	} else {

	$sql = "SELECT
	pacientes.idpaciente,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia,
	pacientes.idcanton,
	pacientes.idprovincia,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	documentos.documento,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	seguros.nomseguro,
	seguros.direcseguro,
	seguros.tlfseguro1,
	seguros.tlfseguro2
	FROM pacientes 
	LEFT JOIN documentos ON pacientes.documpaciente = documentos.coddocumento
	LEFT JOIN tbl_provincia ON pacientes.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON pacientes.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON pacientes.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	WHERE pacientes.codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codpaciente"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
############################ FUNCION ID PACIENTES #################################

############################ FUNCION ACTUALIZAR PACIENTES ############################
public function ActualizarPacientes()
{
	self::SetNames();
	if(empty($_POST["codpaciente"]) or empty($_POST["cedpaciente"]) or empty($_POST["pnompaciente"]) or empty($_POST["papepaciente"]) or empty($_POST["sexopaciente"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT cedpaciente FROM pacientes WHERE codpaciente != ? AND cedpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array($_POST["codpaciente"],$_POST["cedpaciente"]));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE pacientes set "
		." documpaciente = ?, "
		." cedpaciente = ?, "
		." pnompaciente = ?, "
		." snompaciente = ?, "
		." papepaciente = ?, "
		." sapepaciente = ?, "
		." direcpaciente = ?, "
		." barriopaciente = ?, "
		." idparroquia = ?, "
		." idcanton = ?, "
		." idprovincia = ?, "
		." zonapaciente = ?, "
		." tlfpaciente = ?, "
		." fnacpaciente = ?, "
		." lnacpaciente = ?, "
		." nacpaciente = ?, "
		." enfoquepaciente = ?, "
		." sexopaciente = ?, "
		." estadopaciente = ?, "
		." instruccionpaciente = ?, "
		." ocupacionpaciente = ?, "
		." trabajapaciente = ?, "
		." codseguro = ?, "
		." referidopaciente = ?, "
		." gruposapaciente = ?, "
		." emailpaciente = ?, "
		." nomacompana = ?, "
		." direcacompana = ?, "
		." tlfacompana = ?, "
		." parentescoacompana = ?, "
		." nomresponsable = ?, "
		." direcresponsable = ?, "
		." tlfresponsable = ?, "
		." parentescoresponsable = ? "
		." where "
		." codpaciente = ?;
		";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $documpaciente);
		$stmt->bindParam(2, $cedpaciente);
		$stmt->bindParam(3, $pnompaciente);
		$stmt->bindParam(4, $snompaciente);
		$stmt->bindParam(5, $papepaciente);
		$stmt->bindParam(6, $sapepaciente);
		$stmt->bindParam(7, $direcpaciente);
		$stmt->bindParam(8, $barriopaciente);
		$stmt->bindParam(9, $idparroquia);
		$stmt->bindParam(10, $idcanton);
		$stmt->bindParam(11, $idprovincia);
		$stmt->bindParam(12, $zonapaciente);
		$stmt->bindParam(13, $tlfpaciente);
		$stmt->bindParam(14, $fnacpaciente);
		$stmt->bindParam(15, $lnacpaciente);
		$stmt->bindParam(16, $nacpaciente);
		$stmt->bindParam(17, $enfoquepaciente);
		$stmt->bindParam(18, $sexopaciente);
		$stmt->bindParam(19, $estadopaciente);
		$stmt->bindParam(20, $instruccionpaciente);
		$stmt->bindParam(21, $ocupacionpaciente);
		$stmt->bindParam(22, $trabajapaciente);
		$stmt->bindParam(23, $codseguro);
		$stmt->bindParam(24, $referidopaciente);
		$stmt->bindParam(25, $gruposapaciente);
		$stmt->bindParam(26, $emailpaciente);
		$stmt->bindParam(27, $nomacompana);
		$stmt->bindParam(28, $direcacompana);
		$stmt->bindParam(29, $tlfacompana);
		$stmt->bindParam(30, $parentescoacompana);
		$stmt->bindParam(31, $nomresponsable);
		$stmt->bindParam(32, $direcresponsable);
		$stmt->bindParam(33, $tlfresponsable);
		$stmt->bindParam(34, $parentescoresponsable);
		$stmt->bindParam(35, $codpaciente);

		$documpaciente = limpiar($_POST["documpaciente"]);
		$cedpaciente = limpiar($_POST["cedpaciente"]);
		$pnompaciente = limpiar($_POST["pnompaciente"]);
		$snompaciente = limpiar($_POST["snompaciente"]);
		$papepaciente = limpiar($_POST["papepaciente"]);
		$sapepaciente = limpiar($_POST["sapepaciente"]);
		$direcpaciente = limpiar($_POST["direcpaciente"]);
		$barriopaciente = null;
		$idparroquia = limpiar($_POST['idparroquia'] == '' ? "0" : $_POST['idparroquia']);
		$idcanton = limpiar($_POST['idcanton'] == '' ? "0" : $_POST['idcanton']);
		$idprovincia = limpiar($_POST['idprovincia'] == '' ? "0" : $_POST['idprovincia']);
		$zonapaciente = null;
		$tlfpaciente = limpiar($_POST["tlfpaciente"]);
		$fnacpaciente = limpiar($_POST['fnacpaciente'] == '' ? "0000-00-00" : date("Y-m-d",strtotime($_POST['fnacpaciente'])));
		$lnacpaciente = limpiar($_POST["lnacpaciente"]);
		$nacpaciente = limpiar($_POST["nacpaciente"]);
		$enfoquepaciente = null;
		$sexopaciente = limpiar($_POST["sexopaciente"]);
		$estadopaciente = limpiar($_POST["estadopaciente"]);
		$instruccionpaciente = limpiar($_POST["instruccionpaciente"]);
		$ocupacionpaciente = limpiar($_POST["ocupacionpaciente"]);
		$trabajapaciente = limpiar($_POST["trabajapaciente"]);
		//$codseguro = limpiar($_POST["codseguro"]);
		$codseguro = 1;
		$referidopaciente = limpiar($_POST["referidopaciente"]);
		$gruposapaciente = $_POST["gruposapaciente"];
		$emailpaciente = limpiar($_POST["emailpaciente"]);
		$nomacompana = limpiar($_POST["nomacompana"]);
		$direcacompana = limpiar($_POST["direcacompana"]);
		$tlfacompana = limpiar($_POST["tlfacompana"]);
		$parentescoacompana = limpiar($_POST["parentescoacompana"]);
		$nomresponsable = limpiar($_POST["nomresponsable"]);
		$direcresponsable = limpiar($_POST["direcresponsable"]);
		$tlfresponsable = limpiar($_POST["tlfresponsable"]);
		$parentescoresponsable = limpiar($_POST["parentescoresponsable"]);
		$codpaciente = limpiar($_POST["codpaciente"]);
		$stmt->execute();

    ######################################  SUBIR FOTO DE PACIENTE ######################################
    //datos del arhivo  
    if (isset($_FILES['imagen']['name'])) { $nombre_archivo = $_FILES['imagen']['name']; } else { $nombre_archivo = ''; }
	if (isset($_FILES['imagen']['type'])) { $tipo_archivo = $_FILES['imagen']['type']; } else { $tipo_archivo = ''; }
    if (isset($_FILES['imagen']['size'])) { $tamano_archivo = $_FILES['imagen']['size']; } else { $tamano_archivo = ''; }  
    //compruebo si las características del archivo son las que deseo  
	if ((strpos($tipo_archivo,'image/png')!==false)&&$tamano_archivo<8000000)//1MB  
	{  
		if (move_uploaded_file($_FILES['imagen']['tmp_name'], "fotos/".$nombre_archivo) && rename("fotos/".$nombre_archivo,"fotos/".$_POST["codpaciente"].".png"))
		{ 
    ## se puede dar un aviso
		} 
    ## se puede dar otro aviso 
	}
    ######################################  FINALIZA SUBIR FOTO DE PACIENTE ######################################

		if ($_SESSION['acceso'] == "paciente") {

		echo "<span class='fa fa-check-square-o'></span> SUS DATOS HAN SIDO ACTUALIZADOS EXITOSAMENTE";
		exit;

		} else {

		echo "<span class='fa fa-check-square-o'></span> EL PACIENTE HA SIDO ACTUALIZADO EXITOSAMENTE";
		exit;

		}
	}
	else
	{
		echo "3";
		exit;
	}
}
############################ FUNCION ACTUALIZAR PACIENTES ############################

############################ FUNCION CARGAR DOCUMENTOS A PACIENTES ############################
public function CargarDocumentosxPaciente()
{
	self::SetNames();
	if(empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	######################### CARGAR DOCUMENTOS DE PACIENTE #########################
	if (!empty($_FILES["file"]))
	{
		$autoinc = 1;
		foreach($_FILES['file']['tmp_name'] as $key => $tmp_name) {

			$file_name = $_FILES['file']['name'][$key];
			$file_size =$_FILES['file']['size'][$key];
			$file_tmp =$_FILES['file']['tmp_name'][$key];
			$file_type=$_FILES['file']['type'][$key];
			//$permitidos = array('jpg','jpeg','gif','png','csv','xls','xlsx','pdf','doc','docx');
			$permitidos = array('jpg','jpeg','png','pdf');
			$limite_kb = 0;
			//$extension = pathinfo($nombre_archivo, PATHINFO_EXTENSION);
	      $file = new SplFileInfo($file_name);
	      $extension  = $file->getExtension();

			if ($file_type == ''){

				echo "1";
				exit; 

            //valido que los archivos cargados sean imagenes con extension jpeg,jpg,png,gif
			//} elseif (!in_array($_FILES['file']['type'][$key], $permitidos)){
			} elseif (!in_array($extension, $permitidos)){

				echo "2";
				exit;
			}

			if (is_dir('fotos/documentos/'.decrypt($_POST["codpaciente"]))) {

				//guardo las imagenes cargadas en la carpeta que se creo
				move_uploaded_file($file_tmp, "fotos/documentos/".decrypt($_POST["codpaciente"])."/".$file_name) && 
				rename("fotos/documentos/".decrypt($_POST["codpaciente"])."/".$file_name,"fotos/documentos/".decrypt($_POST["codpaciente"])."/".$file_name.'.'.$extension);

			} else {

				//creo la carpeta donde guardare las imagenes cargadas
	        	$dirmake = mkdir('fotos/documentos/'.decrypt($_POST["codpaciente"]), 0777);

	        	$pathInfo = pathinfo($file_name);
	        	$sum=1;
	         //guardo las imagenes cargadas en la carpeta que se creo
	        	move_uploaded_file($file_tmp, "fotos/documentos/".decrypt($_POST["codpaciente"])."/".$file_name) && 
	        	rename("fotos/documentos/".decrypt($_POST["codpaciente"])."/".$file_name,"fotos/documentos/".decrypt($_POST["codpaciente"])."/".$file_name.'.'.$extension);
			}
		}
	}
	######################### CARGAR DOCUMENTOS DE PACIENTE #########################

	echo "<span class='fa fa-check-square-o'></span> LOS ARCHIVOS HAN SIDO CARGADOS AL PACIENTE EXITOSAMENTE";
	exit;
}
############################ FUNCION CARGAR DOCUMENTOS A PACIENTES ############################

########################## FUNCION ELIMINAR PACIENTES ########################
public function EliminarPacientes()
{
	self::SetNames();
    if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT codpaciente FROM citasmedicas WHERE codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codpaciente"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = "DELETE FROM pacientes WHERE codpaciente = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codpaciente);
		$codpaciente = decrypt($_GET["codpaciente"]);
		$stmt->execute();

		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}
############################ FUNCION ELIMINAR PACIENTES #######################

############################ FUNCION BUSQUEDA PACIENTES #################################
public function BusquedaPacientesPorCodigo()
{
	self::SetNames();
	$sql = "SELECT
	pacientes.idpaciente,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia,
	pacientes.idcanton,
	pacientes.idprovincia,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	documentos.documento,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	seguros.nomseguro,
	seguros.direcseguro,
	seguros.tlfseguro1,
	seguros.tlfseguro2
	FROM pacientes 
	LEFT JOIN documentos ON pacientes.documpaciente = documentos.coddocumento
	LEFT JOIN tbl_provincia ON pacientes.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON pacientes.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON pacientes.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	WHERE pacientes.codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(limpiar($_GET["codpaciente"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
############################ FUNCION BUSQUEDA PACIENTES #################################

############################# FIN DE CLASE PACIENTES ################################






























###################################### CLASE CITAS MEDICAS #####################################

############################ FUNCION BUSCAR CITAS MEDICAS EN CALENDARIO ################################
public function BuscarCitasMedicas()
	{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal, 
	citasmedicas.codmedico, 
	citasmedicas.codpaciente,
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita) as fechacita,
	citasmedicas.horacita,
	citasmedicas.color,
	citasmedicas.statuscita,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	pacientes.numerohistoria,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.papepaciente) as nompaciente,
	CONCAT(pacientes.cedpaciente, ': ',pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente), ' ',pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as pacientes,
	sucursales.cuitsucursal,
	sucursales.nomsucursal
	FROM citasmedicas 
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	WHERE citasmedicas.codmedico = '".decrypt($_GET["codmedico"])."'";

	} elseif ($_SESSION['acceso'] == "paciente") {

	$sql = "SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal, 
	citasmedicas.codmedico, 
	citasmedicas.codpaciente,
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita) as fechacita,
	citasmedicas.horacita,
	citasmedicas.color,
	citasmedicas.statuscita,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	pacientes.numerohistoria,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.papepaciente) as nompaciente,
	CONCAT(pacientes.cedpaciente, ': ',pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente), ' ',pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as pacientes,
	sucursales.cuitsucursal,
	sucursales.nomsucursal
	FROM citasmedicas 
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	WHERE citasmedicas.codpaciente = '".limpiar($_SESSION["codpaciente"])."'";

	} else {

	$sql = "SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal, 
	citasmedicas.codmedico, 
	citasmedicas.codpaciente,
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita) as fechacita,
	citasmedicas.horacita,
	citasmedicas.color,
	citasmedicas.statuscita,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	pacientes.numerohistoria,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.papepaciente) as nompaciente,
	CONCAT(pacientes.cedpaciente, ': ',pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente), ' ',pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as pacientes,
	sucursales.cuitsucursal,
	sucursales.nomsucursal
	FROM citasmedicas 
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	WHERE citasmedicas.codmedico = '".limpiar(decrypt($_GET["codmedico"]))."'
	AND citasmedicas.codsucursal = '".limpiar(decrypt($_GET["codsucursal"]))."'";

    }

	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {
		
	      echo "";

	} else {

		while($row = $stmt->fetch())
			{
				$this->p[]=$row;
			}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR CITAS MEDICAS EN CALENDARIO #############################

############################ FUNCION BUSCAR CITAS MEDICAS POR MEDICO AGRUPADA ################################
public function BuscarCitasMedicasxMedicoAgrupadas()
	{
	self::SetNames();
	$sql = "SELECT
	codsucursal, 
	codmedico,  
	fechacita,
	GROUP_CONCAT(horacita SEPARATOR ',') AS horas_citas
	FROM citasmedicas 
	WHERE codmedico = '".limpiar(decrypt($_GET["codmedico"]))."'
	AND codsucursal = '".limpiar(decrypt($_GET["codsucursal"]))."'
	AND fechacita = '".limpiar(date("Y-m-d",strtotime($_GET['fechacita'])))."'
	GROUP BY codmedico, codsucursal, fechacita";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {
		
	      echo "";

	} else {

		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		//while($row = $stmt->fetch())
			{
				$this->p[]=$row;
			}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR CITAS MEDICAS POR MEDICO AGRUPADA #############################

############################ FUNCION BUSQUEDA HORAS DESDE Y HASTA #################################
public function BusquedaHoraDesdeHasta()
{
	self::SetNames();
	$dia_cita = (date("w",strtotime($_GET['fechacita'])) == "0" ? "7" : date("w",strtotime($_GET['fechacita'])));
	$sql = "SELECT
	horarios.codhorario,
	horarios.codsucursal,
	horarios.codmedico,
	horarios.dias,
	horarios.hora_desde,
	horarios.hora_hasta
	FROM horarios 
	WHERE horarios.codmedico = ?
	AND codsucursal = ?
	AND dias = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codmedico"]),decrypt($_GET["codsucursal"]),$dia_cita));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
		echo "<center><span class='fa fa-info-circle alert-link'></span> NO TIENE HORARIO ASIGNADO EN LA FECHA ".limpiar($_GET['fechacita'])."</center>";
		echo "</div>";
		exit;
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}		
############################ FUNCION BUSQUEDA HORAS DESDE Y HASTA #################################

####################### FUNCION REGISTRAR CITAS MEDICAS ################################
public function RegistrarCitas()
	{
	self::SetNames();
	if(empty($_POST["sucursal"]) or empty($_POST["medico"]) or empty($_POST["codpaciente"]) or empty($_POST["descripcion"]) or empty($_POST["color"]) or empty($_POST["fechacita"]) or empty($_POST["horacita"]))
	{
		echo "1";
		exit;
	}

	$dia_cita = (date("w",strtotime($_POST['fechacita'])) == "0" ? "7" : date("w",strtotime($_POST['fechacita']))); //dia de cita
	$fecha_cita = date("Y-m-d",strtotime($_POST['fechacita'])); //fecha de cita
	$fecha_actual = date("Y-m-d"); //fecha actual
	$hora_cita = strtotime($_POST['horacita']); //hora de cita
	$hora_actual = strtotime(date("H:i")); //hora actual

	############## VERIFICO LOS DIAS ASIGNADOS AL MEDICO #################
	$sql = "SELECT
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales
	FROM horarios
	WHERE codsucursal = '".limpiar(decrypt($_POST['sucursal']))."'
    AND codmedico = '".limpiar(decrypt($_POST["medico"]))."'";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	$days_laborales = explode(",", $row['dias_laborales']);
	############## VERIFICO LOS DIAS ASIGNADOS AL MEDICO #################

	############## COMPARO EL DIA DE CITA CON LOS ARRAY DIAS #################
	if (!in_array($dia_cita, $days_laborales)) {

	    echo "2";
		exit;
	} 
	############## COMPARO EL DIA DE CITA LOS ARRAY DIAS #################

	if (strtotime($fecha_cita) < strtotime($fecha_actual)) {
	  
	    echo "3";
		exit;
	  
	} else if ((strtotime($fecha_cita) == strtotime($fecha_actual)) && ($hora_cita < $hora_actual)){
	  
	    echo "4";
		exit;
	}
		
	############################# CODIGO DE CITA #############################
    $sql = "SELECT codcita FROM citasmedicas ORDER BY idcita DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$id=$row["codcita"];
	}
	if(empty($id))
	{
		$codcita = '01';

	} else {

		$resto = substr($id, 0, 1);
		$coun = strlen($resto);
		$num     = substr($id, $coun);
		$codigo     = $num + 1;
		$codcita = "0".$codigo;
	}
	############################# CODIGO DE CITA #############################

	$sql = "SELECT * FROM citasmedicas WHERE codsucursal = ? AND codmedico = ? AND fechacita = ? AND horacita = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST['sucursal']),decrypt($_POST["medico"]),date("Y-m-d",strtotime($_POST['fechacita'])),date("H:i",strtotime($_POST['horacita']))));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$query = "INSERT INTO citasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codcita);
		$stmt->bindParam(2, $codsucursal);
		$stmt->bindParam(3, $codmedico);
		$stmt->bindParam(4, $codpaciente);
		$stmt->bindParam(5, $descripcion);
		$stmt->bindParam(6, $fechacita);
		$stmt->bindParam(7, $horacita);
		$stmt->bindParam(8, $color);
		$stmt->bindParam(9, $statuscita);
		$stmt->bindParam(10, $codigo);
		$stmt->bindParam(11, $ingresocita);
		
		$codsucursal = limpiar(decrypt($_POST['sucursal']));
		$codmedico = limpiar(decrypt($_POST['medico']));
		$codpaciente = limpiar($_POST["codpaciente"]);
		$descripcion = limpiar($_POST["descripcion"]);
		$fechacita = limpiar(date("Y-m-d",strtotime($_POST['fechacita'])));
		$horacita = limpiar(date("H:i",strtotime($_POST['horacita'])));
		$color = limpiar($_POST["color"]);
		$statuscita = limpiar('2');
		$codigo = limpiar($_SESSION["codigo"]);
		$ingresocita = limpiar(date('Y-m-d'));
		$stmt->execute();
		
		echo "<span class='fa fa-check-circle'></span> LA CITA MEDICA HA SIDO REGISTRADA EXITOSAMENTE";
		exit;
	}
	else
	{
		echo "5";
		exit;
	} 
}
############################ FUNCION REGISTRAR CITAS MEDICAS ###########################

########################## FUNCION BUSQUEDA DE CITAS MEDICAS ###############################
public function BusquedaCitas()
	{
	self::SetNames();
    $sql = "SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.codigo,
	citasmedicas.ingresocita,
	citasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente), ' ',pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as pacientes,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal 
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia 
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento 
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	WHERE CONCAT(
	pacientes.cedpaciente
	, '',pacientes.pnompaciente
	, '',if(pacientes.snompaciente='','0',pacientes.snompaciente)
	, '',pacientes.papepaciente
	, if(pacientes.sapepaciente='','0',pacientes.sapepaciente)
	, '',citasmedicas.descripcion
	, '',citasmedicas.fechacita
	, '',citasmedicas.horacita
	, '',medicos.cedmedico
	, '',medicos.nommedico) LIKE '%".limpiar($_GET['bcitas'])."%'
	ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {

	echo "<center><div class='alert alert-danger'>";
	echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	echo " NO SE ENCONTRARON RESULTADOS PARA TU BUSQUEDA</div></center>";
	exit;
   
	} else {
			
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################## FUNCION BUSQUEDA DE CITAS MEDICAS ###############################

############################ FUNCION LISTAR CITAS MEDICAS ################################
public function ListarCitas()
	{
	self::SetNames();

	if($_SESSION["acceso"] == "medico") {

	$sql = "SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	citasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente), ' ',pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as pacientes,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad
	WHERE citasmedicas.codmedico = '".limpiar($_SESSION["codmedico"])."' 
	AND citasmedicas.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
	ORDER BY citasmedicas.fechacita DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {

		echo "";

	} else {

		while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {

	$sql = "SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	citasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente), ' ',pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as pacientes,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad
	ORDER BY citasmedicas.fechacita DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0) {

		echo "";

	} else {

		while($row = $stmt->fetch())
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
######################### FUNCION LISTAR CITAS MEDICAS #############################

########################### FUNCION ID CITAS MEDICAS ################################
public function CitasPorId()
{
	self::SetNames();
	$sql ="SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	citasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.tlfmedico, 
	medicos.sexomedico, 
	medicos.correomedico, 
	medicos.mps,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	pacientes.fnacpaciente,
	pacientes.gruposapaciente,
	pacientes.estadopaciente,
	pacientes.ocupacionpaciente,
	pacientes.sexopaciente,
	pacientes.enfoquepaciente,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad
	WHERE citasmedicas.codcita = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codcita"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION ID CITAS MEDICAS ################################

################################ FUNCION PARA ACTUALIZAR CITAS MEDICAS #################################
public function ActualizarCitas()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal"]) or empty($_POST["medico"]) or empty($_POST["codpaciente"]) or empty($_POST["descripcion"]) or empty($_POST["color"]) or empty($_POST["fechacita"]) or empty($_POST["horacita"]))
	{
		echo "1";
		exit;
	}

	$dia_cita = (date("w",strtotime($_POST['fechacita'])) == "0" ? "7" : date("w",strtotime($_POST['fechacita']))); //dia de cita
	$fecha_cita = date("Y-m-d",strtotime($_POST['fechacita'])); //fecha de cita
	$fecha_actual = date("Y-m-d"); //fecha actual
	$hora_cita = strtotime($_POST['horacita']); //hora de cita
	$hora_actual = strtotime(date("H:i")); //hora actual

	############## VERIFICO LOS DIAS ASIGNADOS AL MEDICO #################
	$sql = "SELECT
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales
	FROM horarios 
	WHERE codsucursal = '".limpiar(decrypt($_POST['sucursal']))."'
	AND codmedico = '".limpiar(decrypt($_POST["medico"]))."'
    ";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	$days_laborales = explode(",", $row['dias_laborales']);
	############## VERIFICO LOS DIAS ASIGNADOS AL MEDICO #################

	############## COMPARO EL DIA DE CITA CON LOS ARRAY DIAS #################
	if (!in_array($dia_cita, $days_laborales)) {

	    echo "2";
		exit;
	} 
	############## COMPARO EL DIA DE CITA LOS ARRAY DIAS #################

	if (strtotime($fecha_cita) < strtotime($fecha_actual)) {
	  
	    echo "3";
		exit;
	  
	} else if ((strtotime($fecha_cita) == strtotime($fecha_actual)) && ($hora_cita < $hora_actual)){
	  
	    echo "4";
		exit;
	}

    $sql = " SELECT statuscita FROM citasmedicas WHERE codcita = ? AND statuscita = 1";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codcita"])));
	$num = $stmt->rowCount();
	if($num > 0)
	{
	
	   echo "6";
	   exit;
	
	} else {

	$sql = "SELECT * FROM citasmedicas WHERE codcita != ? AND codsucursal = ? AND codmedico = ? AND fechacita = ? AND horacita = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codcita"]),decrypt($_POST['sucursal']),decrypt($_POST["medico"]),date("Y-m-d",strtotime($_POST['fechacita'])),date("H:i",strtotime($_POST['horacita']))));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		$sql = " UPDATE citasmedicas set "
			  ." codmedico = ?, "
			  ." codpaciente = ?, "
			  ." descripcion = ?, "
			  ." fechacita = ?, "
			  ." horacita = ?, "
			  ." color = ?, "
			  ." statuscita = ?, "
			  ." ingresocita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $codmedico);
		$stmt->bindParam(2, $codpaciente);
		$stmt->bindParam(3, $descripcion);
		$stmt->bindParam(4, $fechacita);
		$stmt->bindParam(5, $horacita);
		$stmt->bindParam(6, $color);
		$stmt->bindParam(7, $statuscita);
		$stmt->bindParam(8, $ingresocita);
		$stmt->bindParam(9, $codcita);
			
		$codmedico = limpiar(decrypt($_POST["medico"]));
		$codpaciente = limpiar($_POST["codpaciente"]);
		$descripcion = limpiar($_POST["descripcion"]);
		$fechacita = limpiar(date("Y-m-d",strtotime($_POST['fechacita'])));
		$horacita = limpiar(date("H:i",strtotime($_POST['horacita'])));
		$color = limpiar($_POST["color"]);
		$statuscita = limpiar("2");
		$ingresocita = limpiar(date('Y-m-d'));
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		
		echo "<span class='fa fa-check-circle'></span> LA CITA MÉDICA HA SIDO ACTUALIZADA EXITOSAMENTE";
		exit;

		} else {

		  echo "5";
		  exit;
	    }
	}
}
############################### FUNCION PARA ACTUALIZAR CITAS MEDICAS ##############################

################################## FUNCION ACTUALIZAR FECHA DE CITAS MEDICAS #################################
public function ActualizarFechaCitas()
{
	self::SetNames();
	if(empty($_POST['Event'][0]) or empty($_POST['Event'][1]) or empty($_POST['Event'][2]))
	{
		echo "1";
		exit;
	}

	$dia_cita = (date("w",strtotime($_POST['Event'][1])) == "0" ? "7" : date("w",strtotime($_POST['Event'][1]))); //dia de cita
	$fecha_cita = date("Y-m-d",strtotime($_POST['Event'][1])); //fecha de cita
	$fecha_actual = date("Y-m-d"); //fecha actual
	$hora_cita = strtotime($_POST['Event'][2]); //hora de cita
	$hora_actual = strtotime(date("H:i")); //hora actual

	############## VERIFICO LOS DIAS ASIGNADOS AL MEDICO #################
	$sql = "SELECT
	GROUP_CONCAT(dias SEPARATOR ',') AS dias_laborales
	FROM horarios 
	WHERE codsucursal = '".limpiar(decrypt($_POST['Event'][4]))."'
	AND codmedico = '".limpiar(decrypt($_POST['Event'][6]))."'
    ";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	$days_laborales = explode(",", $row['dias_laborales']);
	############## VERIFICO LOS DIAS ASIGNADOS AL MEDICO #################

	############## COMPARO EL DIA DE CITA CON LOS ARRAY DIAS #################
	if (!in_array($dia_cita, $days_laborales)) {

	    echo "2";
		exit;
	}
	############## COMPARO EL DIA DE CITA LOS ARRAY DIAS #################

	if (strtotime($fecha_cita) < strtotime($fecha_actual)) {
	  
	    echo "3";
		exit;
	  
	} else if ((strtotime($fecha_cita) == strtotime($fecha_actual)) && ($hora_cita < $hora_actual)){
	  
	    echo "4";
		exit;
	}

	$sql = "UPDATE citasmedicas set "
	." fechacita = ? "
	." where "
	." codcita = ?;
	";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $fechacita);
	$stmt->bindParam(2, $codcita);
	
	$fechacita = limpiar($_POST['Event'][1]);
	$codcita = limpiar(decrypt($_POST['Event'][0]));
	$stmt->execute();

	echo "5";
	exit;  	
} 
################################## FUNCION ACTUALIZAR FECHA DE CITAS MEDICAS #################################

############################### FUNCION PARA CANCELAR CITAS MEDICAS ##################################
public function CancelarCitas()
	{
		
	self::SetNames();
   
    if ($_SESSION['acceso'] == "administrador" || $_SESSION["acceso"]=="secretaria" || $_SESSION["acceso"]=="medico") {

		$sql = "SELECT statuscita FROM citasmedicas WHERE codcita = ? AND statuscita = 1";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(decrypt($_GET["codcita"])));
		$num = $stmt->rowCount();
		if($num == 0)
		{

		$sql = " UPDATE citasmedicas set "
			  ." color = ?, "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $color);
		$stmt->bindParam(2, $statuscita);
		$stmt->bindParam(3, $codcita);
			
		$color = limpiar('#FF0000');
		$statuscita = limpiar('3');
		$codcita = limpiar(decrypt($_GET["codcita"]));
		$stmt->execute();
		
	    echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
	}
			
	} else {
		
		echo "3";
		exit;
	}	
} 
############################### FUNCION PARA CANCELAR CITAS MEDICAS #################################

############################ FUNCION PARA ELIMINAR CITAS MEDICAS ################################
public function EliminarCitas()
{
	self::SetNames();
	
	if ($_SESSION["acceso"]=="administrador" || $_SESSION["acceso"]=="secretaria" || $_SESSION["acceso"]=="medico") {
		
	$sql = "SELECT statuscita FROM citasmedicas WHERE codcita = ? AND statuscita = 1";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codcita"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{
	
	$sql = "DELETE FROM citasmedicas WHERE codcita = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1,$codcita);
	$codcita = decrypt($_GET["codcita"]);
	$stmt->execute();
	
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
	}
			
	} else {
		
		echo "3";
		exit;
	}	
} 
########################## FUNCION PARA ELIMINAR CITAS MEDICAS #################################

#################################### FUNCION VERIFICA CITAS VENCIDAS ######################################
public function VerificaCitasVencidas()
	{
	self::SetNames();
	$sql = " UPDATE citasmedicas SET"
    ." statuscita = ? "
    ." WHERE "
    ." fechacita < '".date('Y-m-d')."' AND statuscita = 2;
    ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $statuscita);
	$statuscita = limpiar("4");
    $stmt->execute();			
}
#################################### FUNCION VERIFICA CITAS VENCIDAS ######################################

################################ FUNCION BUSQUEDA CITAS MEDICAS POR FECHAS ################################
public function BuscarCitasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.tlfmedico, 
	medicos.sexomedico, 
	medicos.correomedico, 
	medicos.mps,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.snompaciente, ' ',pacientes.papepaciente, ' ',pacientes.sapepaciente) as pacientes,
	pacientes.fnacpaciente,
	pacientes.gruposapaciente,
	pacientes.estadopaciente,
	pacientes.ocupacionpaciente,
	pacientes.sexopaciente,
	pacientes.enfoquepaciente,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad
	WHERE citasmedicas.codsucursal = ?
	AND citasmedicas.codmedico = ?
	AND DATE_FORMAT(citasmedicas.fechacita,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY citasmedicas.fechacita DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.tlfmedico, 
	medicos.sexomedico, 
	medicos.correomedico, 
	medicos.mps,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.snompaciente, ' ',pacientes.papepaciente, ' ',pacientes.sapepaciente) as pacientes,
	pacientes.fnacpaciente,
	pacientes.gruposapaciente,
	pacientes.estadopaciente,
	pacientes.ocupacionpaciente,
	pacientes.sexopaciente,
	pacientes.enfoquepaciente,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad 
	WHERE citasmedicas.codsucursal = ? 
	AND DATE_FORMAT(citasmedicas.fechacita,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY citasmedicas.fechacita DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA CITAS MEDICAS POR FECHAS ################################

################################ FUNCION BUSQUEDA CITAS MEDICAS POR MEDICOS ################################
public function BuscarCitasxMedico()
{
	self::SetNames();
	$sql ="SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.tlfmedico, 
	medicos.sexomedico, 
	medicos.correomedico, 
	medicos.mps,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.snompaciente, ' ',pacientes.papepaciente, ' ',pacientes.sapepaciente) as pacientes,
	pacientes.fnacpaciente,
	pacientes.gruposapaciente,
	pacientes.estadopaciente,
	pacientes.ocupacionpaciente,
	pacientes.sexopaciente,
	pacientes.enfoquepaciente,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad
	WHERE citasmedicas.codsucursal = ? 
	AND citasmedicas.codmedico = ? 
	AND DATE_FORMAT(citasmedicas.fechacita,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY citasmedicas.fechacita DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA CITAS MEDICAS POR MEDICOS ################################

################################ FUNCION BUSQUEDA CITAS MEDICAS POR PACIENTE ################################
public function BuscarCitasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.tlfmedico, 
	medicos.sexomedico, 
	medicos.correomedico, 
	medicos.mps,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.snompaciente, ' ',pacientes.papepaciente, ' ',pacientes.sapepaciente) as pacientes,
	pacientes.fnacpaciente,
	pacientes.gruposapaciente,
	pacientes.tlfpaciente,
	pacientes.estadopaciente,
	pacientes.ocupacionpaciente,
	pacientes.sexopaciente,
	pacientes.enfoquepaciente,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad 
	WHERE citasmedicas.codsucursal = ?
	AND citasmedicas.codmedico = ?
	AND citasmedicas.codpaciente = ? 
	ORDER BY citasmedicas.fechacita DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	citasmedicas.codcita,
	citasmedicas.codsucursal,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente, 
	citasmedicas.descripcion,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	citasmedicas.ingresocita,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.tlfmedico, 
	medicos.sexomedico, 
	medicos.correomedico, 
	medicos.mps,
	medicos.codespecialidad,
	especialidades.nomespecialidad,
	medicos2.cedmedico AS cedmedico2, 
	medicos2.nommedico AS nommedico2,
	medicos2.codespecialidad AS codespecialidad2,
	especialidades2.nomespecialidad AS nomespecialidad2,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',pacientes.snompaciente, ' ',pacientes.papepaciente, ' ',pacientes.sapepaciente) as pacientes,
	pacientes.fnacpaciente,
	pacientes.gruposapaciente,
	pacientes.tlfpaciente,
	pacientes.estadopaciente,
	pacientes.ocupacionpaciente,
	pacientes.sexopaciente,
	pacientes.enfoquepaciente,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	documentos5.documento AS documento5,
	documentos6.documento AS documento6,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	usuarios.documusuario,
	usuarios.dni,
	usuarios.nombres
	FROM citasmedicas 
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente 
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN usuarios ON citasmedicas.codigo = usuarios.codigo
	LEFT JOIN documentos AS documentos5 ON usuarios.documusuario = documentos5.coddocumento
	LEFT JOIN medicos AS medicos2 ON citasmedicas.codigo = medicos2.codmedico
	LEFT JOIN documentos AS documentos6 ON medicos2.docummedico = documentos6.coddocumento
	LEFT JOIN especialidades AS especialidades2 ON medicos2.codespecialidad = especialidades2.codespecialidad 
	WHERE citasmedicas.codsucursal = ?
	AND citasmedicas.codpaciente = ? 
	ORDER BY citasmedicas.fechacita DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim($_GET['codpaciente']));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA CITAS MEDICAS POR PACIENTE ################################

############################ FUNCION BUSCAR CITAS PENDIENTES POR FECHA ################################
public function BuscarCitasMedicasPendientes()
	{
	self::SetNames();
	$sql = "SELECT 
	citasmedicas.idcita,
	citasmedicas.codcita,
	citasmedicas.codmedico, 
	citasmedicas.codpaciente,
	citasmedicas.descripcion,
	citasmedicas.codsucursal,
	CONCAT(citasmedicas.fechacita, ' ',citasmedicas.horacita) as fechacita, 
	citasmedicas.color,
	citasmedicas.statuscita,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.cuitsucursal,
	sucursales.nomsucursal
	FROM citasmedicas 
	LEFT JOIN medicos ON citasmedicas.codmedico = medicos.codmedico 
	LEFT JOIN pacientes ON citasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN sucursales ON citasmedicas.codsucursal = sucursales.codsucursal
	WHERE citasmedicas.codsucursal = ? 
	AND citasmedicas.codmedico = ?
	AND DATE_FORMAT(citasmedicas.fechacita,'%Y-%m-%d') = ? 
	AND statuscita != 'ATENDIDO'
	ORDER BY citasmedicas.idcita ASC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['fecha']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR CITAS PENDIENTES POR FECHA #############################

################################ FUNCION LISTAR CITAS MEDICAS #######################################

















##################################### CLASE APERTURAS MEDICAS ########################################

######################## FUNCION BUSQUEDA APERTURAS ############################
public function BusquedaAperturas()
{
	self::SetNames();

	if($_GET['codverifica'] == '1'){

	$sql ="SELECT 
	codsucursal, 
	codpaciente 
	FROM aperturas 
	WHERE codsucursal = ? AND codpaciente = ? ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"]),decrypt($_GET["codpaciente"])));
	$num = $stmt->rowCount();
	if($num>0)
	{
		echo "<hr><div class='alert alert-danger alert-link'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> ESTE PACIENTE YA TIENE UNA APERTURA MEDICA REGISTRADA, DEBE DE REALIZAR EL PROCESO DE HOJA EVOLUTIVA</center>";
        echo "</div>";		
	    exit;
	}

	} else if($_GET['codverifica'] == '2'){

		$sql = "SELECT
		codsucursal, 
		codpaciente 
		FROM hojasevolutivas 
		WHERE codsucursal = ?
		AND codpaciente = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(decrypt($_GET['codsucursal']),decrypt($_GET['codpaciente'])));
		$num = $stmt->rowCount();
		if($num == 0)
		{
			echo "<center><div class='alert alert-danger alert-link'>";
			echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
			echo "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> ESTE PACIENTE NO TIENE UNA APERTURA MEDICA REGISTRADA, DEBE DE REALIZAR UNA PARA EL CONTROL DE HISTORIAS MEDICAS</div></center>";
			exit;
		}
	}
}
######################## FUNCION BUSQUEDA APERTURAS ############################

############################# FUNCION REGISTRAR APERTURAS ##############################
public function RegistrarAperturas()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
	$presuntivo = $_POST['presuntivo'];
    $repeated = array_filter(array_count_values($presuntivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "2";
		exit;
    }
    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
		
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############
    $definitivo = $_POST['definitivo'];
    $repeated = array_filter(array_count_values($definitivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "4";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "5";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	################ CREO CODIGO DE APERTURA ####################
	$sql = "SELECT codapertura FROM aperturas 
	ORDER BY idapertura DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$apertura=$row["codapertura"];

	}
	if(empty($apertura))
	{
		$codapertura = "A1";

	} else {

		$resto = substr($apertura, 0, 1);
		$coun = strlen($resto);
		$num     = substr($apertura, $coun);
		$codigofinal     = $num + 1;
		$codapertura = "A".$codigofinal;
	}
    ################ CREO CODIGO DE APERTURA ###############

    ################ CREO DOCUMENTO DE APERTURA ####################
	$sql = "SELECT nrodocumento FROM aperturas 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idapertura DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE APERTURA ###############

    $fecha_hora = date("Y-m-d H:i:s");

    $sql = "SELECT * FROM aperturas WHERE codsucursal = ? AND codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["sucursal_busqueda"]),decrypt($_POST["codpaciente"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		############################# REGISTRO DE APERTURA MEDICA #############################
	    $query = "INSERT INTO aperturas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codapertura);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $enfermedadpaciente);
		$stmt->bindParam(8, $antecedentepaciente);
		$stmt->bindParam(9, $antecedentefamiliares);
		$stmt->bindParam(10, $antecedentealergico);
		$stmt->bindParam(11, $antecedentepatologico);
		$stmt->bindParam(12, $antecedentequirurgico);
		$stmt->bindParam(13, $antecedentefarmacologico);
		$stmt->bindParam(14, $antecedenteginecologico);
		$stmt->bindParam(15, $historialgestacional);
		$stmt->bindParam(16, $planificacionfamiliar);
		$stmt->bindParam(17, $fechaapertura);
		$stmt->bindParam(18, $codigo);			
		$stmt->bindParam(19, $modulo);	
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$enfermedadpaciente = limpiar($_POST["enfermedadpaciente"]);
		$antecedentepaciente = limpiar($_POST["antecedentepaciente"]);
		$antecedentefamiliares = limpiar($_POST["antecedentefamiliares"]);
		$antecedentealergico = limpiar($_POST["antecedentealergico"]);
		$antecedentepatologico = limpiar($_POST["antecedentepatologico"]);
		$antecedentequirurgico = limpiar($_POST["antecedentequirurgico"]);
		$antecedentefarmacologico = limpiar($_POST["antecedentefarmacologico"]);
        $antecedenteginecologico = limpiar(isset($_POST['antecedenteginecologico']) ? $_POST["antecedenteginecologico"] : "");
        $historialgestacional = limpiar(isset($_POST['historialgestacional']) ? $_POST["historialgestacional"] : "");
        $planificacionfamiliar = limpiar(isset($_POST['planificacionfamiliar']) ? $_POST["planificacionfamiliar"] : "");
		$fechaapertura = $fecha_hora;
		$codigo = limpiar($_SESSION["codigo"]);
		$modulo = limpiar($_POST['modulo']);
		$stmt->execute();
		############################# REGISTRO DE APERTURA MEDICA #############################

	################ CREO CODIGO DE HOJA EVOLUTIVA ####################
	$sql = "SELECT codhoja FROM hojasevolutivas 
	ORDER BY idhoja DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$hoja=$row["codhoja"];

	}
	if(empty($hoja))
	{
		$codhoja = "H1";

	} else {

		$resto = substr($hoja, 0, 1);
		$coun = strlen($resto);
		$num     = substr($hoja, $coun);
		$codigofinal     = $num + 1;
		$codhoja = "H".$codigofinal;
	}
    ################ CREO CODIGO DE HOJA EVOLUTIVA ###############

    ################ CREO DOCUMENTO DE HOJA EVOLUTIVA ####################
	$sql = "SELECT nrodocumento FROM hojasevolutivas 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idhoja DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$dochoja=$row["nrodocumento"];

	}
	if(empty($dochoja))
	{
		$nrohoja = "01";

	} else {

		$num = substr($dochoja, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrohoja = $numfinal;
	}
    ################ CREO DOCUMENTO DE HOJA EVOLUTIVA ###############

		############################# REGISTRO DE HOJA EVOLUTIVA #############################
		$query = "INSERT INTO hojasevolutivas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codhoja);
		$stmt->bindParam(2, $nrohoja);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $codapertura);
		$stmt->bindParam(8, $procedimiento);
		$stmt->bindParam(9, $motivoconsulta);
		$stmt->bindParam(10, $examenfisico);
		$stmt->bindParam(11, $fechacitologia);
		$stmt->bindParam(12, $embarazada);
		$stmt->bindParam(13, $fechamestruacion);
		$stmt->bindParam(14, $semanas);
		$stmt->bindParam(15, $fechaparto);
		$stmt->bindParam(16, $atenproced);
		$stmt->bindParam(17, $ta);
		$stmt->bindParam(18, $temperatura);
		$stmt->bindParam(19, $fc);
		$stmt->bindParam(20, $fr);
		$stmt->bindParam(21, $peso);
		$stmt->bindParam(22, $dxpresuntivo);
		$stmt->bindParam(23, $dxdefinitivo);
		$stmt->bindParam(24, $origenenfermedad);
		$stmt->bindParam(25, $tratamiento);
		$stmt->bindParam(26, $fechahoja);
		$stmt->bindParam(27, $codigo);
		$stmt->bindParam(28, $modulo);
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$procedimiento = limpiar("APERTURA MEDICA");
		$motivoconsulta = limpiar($_POST['motivoconsulta']);
		$examenfisico = limpiar($_POST["examenfisico"]);
        $fechacitologia = limpiar(isset($_POST['fechacitologia']) && $_POST['fechacitologia'] != "" ? date("Y-m-d",strtotime($_POST['fechacitologia'])) : "'0000-00-00'");
        $embarazada = limpiar(isset($_POST['embarazada']) ? $_POST["embarazada"] : "");
        $fechamestruacion = limpiar(isset($_POST['fechamestruacion']) ? date("Y-m-d",strtotime($_POST['fechamestruacion'])) : "0000-00-00");
        $semanas = limpiar(isset($_POST['semanas']) ? $_POST['semanas'] : "");
        $fechaparto = limpiar(isset($_POST['fechaparto']) ? date("Y-m-d",strtotime($_POST['fechaparto'])) : "0000-00-00");
        $atenproced = limpiar(isset($_POST['atenproced']) ? $_POST['atenproced'] : "");
		$ta = limpiar($_POST["ta"]);
		$temperatura = limpiar($_POST["temperatura"]);
		$fc = limpiar($_POST["fc"]);
		$fr = limpiar($_POST["fr"]);
		$peso = limpiar($_POST["peso"]);
		
		################# DX PRESUNTIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciepresuntivo = $_POST["idciepresuntivo"];
	    $presuntivo = $_POST["presuntivo"];
	    $observacionpresuntivo = $_POST["observacionpresuntivo"];
	    for($cont; $cont<count($_POST["presuntivo"]); $cont++):
		$arrayBD[] = trim($idciepresuntivo[$cont]."/".$presuntivo[$cont]."/".$observacionpresuntivo[$cont]."\n");
	    endfor;
		$dxpresuntivo = implode(",,",$arrayBD);
		################# DX PRESUNTIVO #################
		
		################# DX DEFINITIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciedefinitivo = $_POST["idciedefinitivo"];
	    $definitivo = $_POST["definitivo"];
	    $observaciondefinitivo = $_POST["observaciondefinitivo"];
	    for($cont; $cont<count($_POST["definitivo"]); $cont++):
		$arrayBD[] = trim($idciedefinitivo[$cont]."/".$definitivo[$cont]."/".$observaciondefinitivo[$cont]."\n");
	    endfor;
		$dxdefinitivo = implode(",,",$arrayBD);
        ################# DX DEFINITIVO #################
		
		//$origenenfermedad = limpiar($_POST["origenenfermedad"]);
		$origenenfermedad = "";
		$tratamiento = limpiar($_POST["tratamiento"]);
		$fechahoja = $fecha_hora;
		$codigo = limpiar($_SESSION["codigo"]);
		$modulo = limpiar($_POST['modulo']);
		$stmt->execute();
		############################# REGISTRO DE HOJA EVOLUTIVA ############################# 

		############################# REGISTRO DE FORMULA MEDICA #############################
		if (array_filter($_POST['idcieformula'])) { 

			################ CREO CODIGO DE FORMULA MEDICA ####################
			$sql = "SELECT codformulam FROM formulasmedicas 
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$formulam=$row["codformulam"];

			}
			if(empty($formulam))
			{
				$codformulam = "F1";

			} else {

				$resto = substr($formulam, 0, 1);
				$coun = strlen($resto);
				$num     = substr($formulam, $coun);
				$codigofinal     = $num + 1;
				$codformulam = "F".$codigofinal;
			}
            ################ CREO CODIGO DE FORMULA MEDICA ###############

            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
			$sql = "SELECT nrodocumento FROM formulasmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docformula=$row["nrodocumento"];

			}
			if(empty($docformula))
			{
				$nroformula = "01";

			} else {

				$num = substr($docformula, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroformula = $numfinal;
			}
            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

            $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codformulam);
			$stmt->bindParam(2, $nroformula);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $formulamedica);
			$stmt->bindParam(10, $fechaformula);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codapertura);
			$procedimiento = limpiar("APERTURA MEDICA");

			################# DX FORMULAS MEDICAS #################
			$cont = 0;
			$arrayFormula = array();
			$idcieformula = $_POST["idcieformula"];
			$formula = $_POST["formula"];
			$observacionformula = $_POST["observacionformula"];
			for($cont; $cont<count($_POST["formula"]); $cont++):
				$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
			endfor;
			$formulamedica = implode(",,",$arrayFormula);
            ################# DX FORMULAS MEDICAS #################

			$fechaformula = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE FORMULA MEDICA ############################# 

		############################# REGISTRO DE ORDENES MEDICA #############################
		if (array_filter($_POST['idcieorden'])) {

			################ CREO CODIGO DE ORDENES MEDICAS ####################
			$sql = "SELECT codorden FROM ordenesmedicas 
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$ordenm=$row["codorden"];

			}
			if(empty($ordenm))
			{
				$codorden = "O1";

			} else {

				$resto = substr($ordenm, 0, 1);
				$coun = strlen($resto);
				$num     = substr($ordenm, $coun);
				$codigofinal     = $num + 1;
				$codorden = "O".$codigofinal;
			}
            ################ CREO CODIGO DE ORDENES MEDICAS ###############

            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
			$sql = "SELECT nrodocumento FROM ordenesmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docorden=$row["nrodocumento"];

			}
			if(empty($docorden))
			{
				$nroorden = "01";

			} else {

				$num = substr($docorden, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroorden = $numfinal;
			}
            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

			$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codorden);
			$stmt->bindParam(2, $nroorden);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $ordenmedica);
			$stmt->bindParam(10, $fechaorden);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codapertura);
			$procedimiento = limpiar("APERTURA MEDICA");

			################# DX ORDENES MEDICAS #################
			$cont = 0;
			$arrayOrden = array();
			$idcieorden = $_POST["idcieorden"];
			$ordenes = $_POST["ordenes"];
			$observacionorden = $_POST["observacionorden"];
			for($cont; $cont<count($_POST["ordenes"]); $cont++):
				$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
			endfor;
			$ordenmedica = implode(",,",$arrayOrden);
            ################# DX ORDENES MEDICAS #################

			$fechaorden = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE ORDENES MEDICA #############################

		############################# REGISTRO DE REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) { 

			################ CREO CODIGO DE REMISION ####################
			$sql = "SELECT codremision FROM remisiones 
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$remito=$row["codremision"];

			}
			if(empty($remito))
			{
				$codremision = "R1";

			} else {

				$resto = substr($remito, 0, 1);
				$coun = strlen($resto);
				$num     = substr($remito, $coun);
				$codigofinal     = $num + 1;
				$codremision = "R".$codigofinal;
			}
            ################ CREO CODIGO DE REMISION ###############

            ################ CREO DOCUMENTO DE REMISION ####################
			$sql = "SELECT nrodocumento FROM remisiones 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docremision=$row["nrodocumento"];

			}
			if(empty($docremision))
			{
				$nroremito = "01";

			} else {

				$num = substr($docremision, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroremito = $numfinal;
			}
            ################ CREO DOCUMENTO DE REMISION ###############

            $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codremision);
			$stmt->bindParam(2, $nroremito);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $remision);
			$stmt->bindParam(10, $fecharemision);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		    $codprocedimiento = limpiar($codapertura);
			$procedimiento = limpiar("APERTURA MEDICA");
			$remision = limpiar($_POST["remision"]);
			$fecharemision = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE REMISION #############################

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	    echo "<span class='fa fa-check-square-o'></span> LA APERTURA MEDICA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codapertura)."&tipo=".encrypt("CONSTANCIA_APERTURA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Apertura' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR APERTURA</strong></a>";
	    exit;

    } else {

    	echo "6";
	    exit;
    }
}
############################# FUNCION REGISTRAR APERTURAS ##############################

############################ FUNCION LISTAR APERTURAS #############################
public function ListarAperturas()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM aperturas 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE aperturas.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND aperturas.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
	AND aperturas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM aperturas 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE aperturas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR APERTURAS #############################

########################### FUNCION ID APERTURAS ###############################
public function AperturasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	aperturas.talla,
	aperturas.imc,
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	remisiones.remision,
	remisiones.fecharemision,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM aperturas 
	INNER JOIN hojasevolutivas ON aperturas.codapertura = hojasevolutivas.codprocedimiento
	LEFT JOIN remisiones ON aperturas.codapertura = remisiones.codprocedimiento 
	LEFT JOIN formulasmedicas ON aperturas.codapertura = formulasmedicas.codprocedimiento 
	LEFT JOIN ordenesmedicas ON aperturas.codapertura = ordenesmedicas.codprocedimiento 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE aperturas.codapertura = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID APERTURAS ###############################

########################## FUNCION ACTUALIZAR APERTURAS #######################
public function ActualizarAperturas()
{
	self::SetNames();
	if(empty($_POST["codapertura"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
	$presuntivo = $_POST['presuntivo'];
    $repeated = array_filter(array_count_values($presuntivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "2";
		exit;
    }
    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
		
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############
    $definitivo = $_POST['definitivo'];
    $repeated = array_filter(array_count_values($definitivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "4";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "5";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############


	    ############################# ACTUALIZO APERTURA MEDICA #############################
	    $sql = " UPDATE aperturas set "
			." enfermedadpaciente = ?, "
			." antecedentepaciente = ?, "
			." antecedentefamiliares = ?, "
			." antecedentealergico = ?, "
			." antecedentepatologico = ?, "
			." antecedentequirurgico = ?, "
			." antecedentefarmacologico = ?, "
			." antecedenteginecologico = ?, "
			." historialgestacional = ?, "
			." planificacionfamiliar = ?, "
			." talla = ?, "
			." imc = ? "
		    ." WHERE "
		    ." codapertura = ?;
		    ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $enfermedadpaciente);
		$stmt->bindParam(2, $antecedentepaciente);
		$stmt->bindParam(3, $antecedentefamiliares);
		$stmt->bindParam(4, $antecedentealergico);
		$stmt->bindParam(5, $antecedentepatologico);
		$stmt->bindParam(6, $antecedentequirurgico);
		$stmt->bindParam(7, $antecedentefarmacologico);
		$stmt->bindParam(8, $antecedenteginecologico);
		$stmt->bindParam(9, $historialgestacional);
		$stmt->bindParam(10, $planificacionfamiliar);			
		$stmt->bindParam(11, $talla);			
		$stmt->bindParam(12, $imc);
		$stmt->bindParam(13, $codapertura);
        
		$enfermedadpaciente = limpiar($_POST["enfermedadpaciente"]);
		$antecedentepaciente = limpiar($_POST["antecedentepaciente"]);
		$antecedentefamiliares = limpiar($_POST["antecedentefamiliares"]);
		$antecedentealergico = limpiar($_POST["antecedentealergico"]);
		$antecedentepatologico = limpiar($_POST["antecedentepatologico"]);
		$antecedentequirurgico = limpiar($_POST["antecedentequirurgico"]);
		$antecedentefarmacologico = limpiar($_POST["antecedentefarmacologico"]);
		$antecedenteginecologico = limpiar(isset($_POST['antecedenteginecologico']) ? $_POST["antecedenteginecologico"] : "");
		$historialgestacional = limpiar(isset($_POST['historialgestacional']) ? $_POST["historialgestacional"] : "");
		$planificacionfamiliar = limpiar(isset($_POST['planificacionfamiliar']) ? $_POST["planificacionfamiliar"] : "");
		$talla = isset($_POST['talla']) ? $_POST["talla"] : null;
		$imc = isset($_POST['imc']) ? $_POST["imc"] : null;
	
		$codapertura = limpiar(decrypt($_POST['codapertura']));
	    $stmt->execute();

	    ############################# ACTUALIZO APERTURA MEDICA #############################

	    ############################# ACTUALIZO HOJA EVOLUTIVA #############################
	    $sql = " UPDATE hojasevolutivas set "
			." motivoconsulta = ?, "
			." examenfisico = ?, "
			." fechacitologia = ?, "
			." embarazada = ?, "
			." fechamestruacion = ?, "
			." semanas = ?, "
			." fechaparto = ?, "
			." ta = ?, "
			." temperatura = ?, "
			." fc = ?, "
			." fr = ?, "
			." peso = ?, "
			." dxpresuntivo = ?, "
			." dxdefinitivo = ?, "
			." origenenfermedad = ?, "
			." tratamiento = ?, "
			." talla = ?, "
			." imc = ? "
			." WHERE "
			." codprocedimiento = ?;
			";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $motivoconsulta);
		$stmt->bindParam(2, $examenfisico);
		$stmt->bindParam(3, $fechacitologia);
		$stmt->bindParam(4, $embarazada);
		$stmt->bindParam(5, $fechamestruacion);
		$stmt->bindParam(6, $semanas);
		$stmt->bindParam(7, $fechaparto);
		$stmt->bindParam(8, $ta);
		$stmt->bindParam(9, $temperatura);
		$stmt->bindParam(10, $fc);
		$stmt->bindParam(11, $fr);
		$stmt->bindParam(12, $peso);
		$stmt->bindParam(13, $dxpresuntivo);
		$stmt->bindParam(14, $dxdefinitivo);
		$stmt->bindParam(15, $origenenfermedad);
		$stmt->bindParam(16, $tratamiento);
		$stmt->bindParam(17, $talla);
		$stmt->bindParam(18, $imc);
		$stmt->bindParam(19, $codprocedimiento);
			
		$motivoconsulta = limpiar($_POST['motivoconsulta']);
		$examenfisico = limpiar($_POST["examenfisico"]);
		$fechacitologia = isset($_POST['fechacitologia']) && $_POST['fechacitologia'] != "" ? date("Y-m-d",strtotime($_POST['fechacitologia'])) : null;
		$embarazada = limpiar(isset($_POST['embarazada']) ? $_POST["embarazada"] : "");
		$fechamestruacion = isset($_POST['fechamestruacion']) ? date("Y-m-d",strtotime($_POST['fechamestruacion'])) : null;
		$semanas = limpiar(isset($_POST['semanas']) ? $_POST['semanas'] : "");
		$fechaparto = isset($_POST['fechaparto']) ? date("Y-m-d",strtotime($_POST['fechaparto'])) : null;
		$atenproced = limpiar(isset($_POST['atenproced']) ? $_POST['atenproced'] : "");
		$ta = limpiar($_POST["ta"]);
		$temperatura = limpiar($_POST["temperatura"]);
		$fc = limpiar($_POST["fc"]);
		$fr = limpiar($_POST["fr"]);
		$peso = limpiar($_POST["peso"]);
		
		################# DX PRESUNTIVO #################
		$dxpresuntivo = null;
		if(isset($_POST["presuntivo"]) && count($_POST["presuntivo"]) > 0) {
			$cont = 0;
	    $arrayBD = array();
	    $presuntivo = $_POST["presuntivo"];
	    for($cont; $cont<count($_POST["presuntivo"]); $cont++):
				$arrayBD[] = trim($presuntivo[$cont]."\n");
	    endfor;
			$dxpresuntivo = implode(",,",$arrayBD);
		}
		
		################# DX PRESUNTIVO #################
		
		################# DX DEFINITIVO #################
		$dxdefinitivo = null;
		if(isset($_POST["definitivo"]) && count($_POST["definitivo"]) > 0) {
			$cont = 0;
	    $arrayBD = array();
	    $definitivo = $_POST["definitivo"];
	    for($cont; $cont<count($_POST["definitivo"]); $cont++):
				$arrayBD[] = trim($definitivo[$cont]."\n");
	    endfor;
			$dxdefinitivo = implode(",,",$arrayBD);
		}
    ################# DX DEFINITIVO #################
		
		//$origenenfermedad = limpiar($_POST["origenenfermedad"]);
		$origenenfermedad = "";
		$tratamiento = limpiar($_POST["tratamiento"]);
		$talla = isset($_POST['talla']) ? $_POST["talla"] : null;
		$imc = isset($_POST['imc']) ? $_POST["imc"] : null;
		$codprocedimiento = limpiar(decrypt($_POST['codapertura']));
		$stmt->execute();
	    ############################# ACTUALIZO HOJA EVOLUTIVA #############################


	    ############################# ACTUALIZO FORMULA MEDICA #############################
	    if (array_filter($_POST['idcieformula'])) { 

	        $sql = "SELECT * FROM formulasmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST["codapertura"])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

			    ################ CREO CODIGO DE FORMULA MEDICA ####################
				$sql = "SELECT codformulam FROM formulasmedicas 
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$formulam=$row["codformulam"];

				}
				if(empty($formulam))
				{
					$codformulam = "F1";

				} else {

					$resto = substr($formulam, 0, 1);
		            $coun = strlen($resto);
		            $num     = substr($formulam, $coun);
		            $codigofinal     = $num + 1;
		            $codformulam = "F".$codigofinal;
				}
	            ################ CREO CODIGO DE FORMULA MEDICA ###############

	            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
				$sql = "SELECT nrodocumento FROM formulasmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docformula=$row["nrodocumento"];

				}
				if(empty($docformula))
				{
					$nroformula = "01";

				} else {

					$num = substr($docformula, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroformula = $numfinal;
				}
	            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

                $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codformulam);
				$stmt->bindParam(2, $nroformula);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $formulamedica);
				$stmt->bindParam(10, $fechaformula);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codapertura"]));
				$procedimiento = limpiar("APERTURA MEDICA");

				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$fechaformula = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

		    } else {

				$sql = " UPDATE formulasmedicas set "
					  ." formulamedica = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $formulamedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codapertura"]));
			    $stmt->execute();
		    }
	    } 
	    ############################# ACTUALIZO FORMULA MEDICA #############################


	    ############################# ACTUALIZO ORDENES MEDICA #############################
	    if (array_filter($_POST['idcieorden'])) {

	        $sql = "SELECT * FROM ordenesmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codapertura'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE ORDENES MEDICAS ####################
				$sql = "SELECT codorden FROM ordenesmedicas 
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$ordenm=$row["codorden"];

				}
				if(empty($ordenm))
				{
					$codorden = "O1";

				} else {

					$resto = substr($ordenm, 0, 1);
					$coun = strlen($resto);
					$num     = substr($ordenm, $coun);
					$codigofinal     = $num + 1;
					$codorden = "O".$codigofinal;
				}
	            ################ CREO CODIGO DE ORDENES MEDICAS ###############

	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
				$sql = "SELECT nrodocumento FROM ordenesmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docorden=$row["nrodocumento"];

				}
				if(empty($docorden))
				{
					$nroorden = "01";

				} else {

					$num = substr($docorden, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroorden = $numfinal;
				}
	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

				$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codorden);
				$stmt->bindParam(2, $nroorden);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $ordenmedica);
				$stmt->bindParam(10, $fechaorden);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codapertura"]));
				$procedimiento = limpiar("APERTURA MEDICA");

		        ################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$fechaorden = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE ordenesmedicas set "
					." ordenmedica = ? "
					." WHERE "
					." codprocedimiento = ?;
					";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $ordenmedica);
				$stmt->bindParam(2, $codprocedimiento);
					
		        ################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codapertura"]));
			    $stmt->execute();

			}
	    }
	    ############################# ACTUALIZO ORDENES MEDICA #############################

	    ############################# ACTUALIZO REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) {

			$sql = "SELECT * FROM remisiones WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codapertura'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE REMISION ####################
				$sql = "SELECT codremision FROM remisiones 
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$remito=$row["codremision"];

				}
				if(empty($remito))
				{
					$codremision = "R1";

				} else {

					$resto = substr($remito, 0, 1);
					$coun = strlen($resto);
					$num     = substr($remito, $coun);
					$codigofinal     = $num + 1;
					$codremision = "R".$codigofinal;
				}
	            ################ CREO CODIGO DE REMISION ###############

	            ################ CREO DOCUMENTO DE REMISION ####################
				$sql = "SELECT nrodocumento FROM remisiones 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docremision=$row["nrodocumento"];

				}
				if(empty($docremision))
				{
					$nroremito = "01";

				} else {

					$num = substr($docremision, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroremito = $numfinal;
				}
	            ################ CREO DOCUMENTO DE REMISION ###############

                $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codremision);
				$stmt->bindParam(2, $nroremito);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $remision);
				$stmt->bindParam(10, $fecharemision);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
				$codprocedimiento = limpiar(decrypt($_POST["codapertura"]));
				$procedimiento = limpiar("APERTURA MEDICA");
				$remision = limpiar($_POST["remision"]);
				$fecharemision = limpiar(date("Y-m-d H:i:s"));
				$codigo = limpiar($_SESSION["codigo"]);
				$modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE remisiones set "
					  ." remision = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $remision);
				$stmt->bindParam(2, $codprocedimiento);
					
				$remision = limpiar($_POST["remision"]);
				$codprocedimiento = limpiar(decrypt($_POST['codapertura']));
			    $stmt->execute();
		    }
		}
	    ############################# ACTUALIZO REMISION #############################

	echo "<span class='fa fa-check-square-o'></span> LA APERTURA MEDICA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codapertura)."&tipo=".encrypt("CONSTANCIA_APERTURA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Apertura' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR APERTURA</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR APERTURAS #######################

############################ FUNCION ELIMINAR APERTURAS ###########################
public function EliminarAperturas()
{
	if($_SESSION['acceso'] == "administrador") {
		
		################### ELIMINO APERTURA MEDICA ###################
		$sql = "DELETE FROM aperturas WHERE codapertura = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codapertura);
		$codapertura = decrypt($_GET["codapertura"]);
		$stmt->execute();
		################### ELIMINO APERTURA MEDICA ###################

		################### ELIMINO HOJAS EVOLUTIVAS ###################
		$sql = "DELETE FROM hojasevolutivas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codapertura);
		$codapertura = decrypt($_GET["codapertura"]);
		$stmt->execute();
		################### ELIMINO HOJAS EVOLUTIVAS ###################

		################### ELIMINO FORMULAS MEDICA ###################
		$sql = "DELETE FROM formulasmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codapertura);
		$codapertura = decrypt($_GET["codapertura"]);
		$stmt->execute();
		################### ELIMINO FORMULAS MEDICA ###################

		################### ELIMINO ORDENES MEDICA ###################
		$sql = "DELETE FROM ordenesmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codapertura);
		$codapertura = decrypt($_GET["codapertura"]);
		$stmt->execute();
		################### ELIMINO ORDENES MEDICA ###################

		################### ELIMINO REMISIONES ###################
		$sql = "DELETE FROM remisiones WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codapertura);
		$codapertura = decrypt($_GET["codapertura"]);
		$stmt->execute();
		################### ELIMINO REMISIONES ###################
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
}  
############################ FUNCION ELIMINAR APERTURAS ###########################

################################ FUNCION BUSQUEDA APERTURAS POR FECHAS ################################
public function BuscarAperturasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM aperturas 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE aperturas.codsucursal = ?
	AND aperturas.codmedico = ?
	AND DATE_FORMAT(aperturas.fechaapertura,'%Y-%m-%d') BETWEEN ? AND ?
	AND aperturas.modulo = ?
	ORDER BY aperturas.fechaapertura DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM aperturas 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE aperturas.codsucursal = ? 
	AND DATE_FORMAT(aperturas.fechaapertura,'%Y-%m-%d') BETWEEN ? AND ?
	AND aperturas.modulo = ?
	ORDER BY aperturas.fechaapertura DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA APERTURAS POR FECHAS ################################

################################ FUNCION BUSQUEDA APERTURAS POR MEDICO ################################
public function BuscarAperturasxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM aperturas 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE aperturas.codsucursal = ?
	AND aperturas.codmedico = ?  
	AND DATE_FORMAT(aperturas.fechaapertura,'%Y-%m-%d') BETWEEN ? AND ?
	AND aperturas.modulo = ?
	ORDER BY aperturas.fechaapertura DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA APERTURAS POR MEDICO ################################

################################ FUNCION BUSQUEDA APERTURAS POR PACIENTE ################################
public function BuscarAperturasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM aperturas 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE aperturas.codsucursal = ?
	AND aperturas.codmedico = ?
	AND aperturas.codpaciente = ?
	AND aperturas.modulo = ?
	ORDER BY aperturas.fechaapertura DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	aperturas.idapertura,
	aperturas.codapertura,
	aperturas.nrodocumento,  
	aperturas.codcita,
	aperturas.codsucursal,
	aperturas.codmedico, 
	aperturas.codpaciente, 
	aperturas.enfermedadpaciente,
	aperturas.antecedentepaciente,
	aperturas.antecedentefamiliares,
	aperturas.antecedentealergico,
	aperturas.antecedentepatologico,
	aperturas.antecedentequirurgico,
	aperturas.antecedentefarmacologico,
	aperturas.antecedenteginecologico,
	aperturas.historialgestacional,
	aperturas.planificacionfamiliar,
	aperturas.fechaapertura,
	aperturas.codigo,
	aperturas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM aperturas 
	LEFT JOIN sucursales ON aperturas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON aperturas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON aperturas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE aperturas.codsucursal = ?  
	AND aperturas.codpaciente = ?
	AND aperturas.modulo = ?
	ORDER BY aperturas.fechaapertura DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(3, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA APERTURAS POR PACIENTE ################################

##################################### CLASE APERTURAS MEDICAS ########################################

















##################################### CLASE HOJA EVOLUTIVA ########################################

############################# FUNCION REGISTRAR HOJAS ##############################
public function RegistrarHojasEvolutivas()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
	$presuntivo = $_POST['presuntivo'];
    $repeated = array_filter(array_count_values($presuntivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "2";
		exit;
    }
    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
		
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############
    $definitivo = $_POST['definitivo'];
    $repeated = array_filter(array_count_values($definitivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "4";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "5";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	################ CREO CODIGO DE HOJA EVOLUTIVA ####################
	$sql = "SELECT codhoja FROM hojasevolutivas 
	ORDER BY idhoja DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$hoja=$row["codhoja"];

	}
	if(empty($hoja))
	{
		$codhoja = "H1";

	} else {

		$resto = substr($hoja, 0, 1);
		$coun = strlen($resto);
		$num     = substr($hoja, $coun);
		$codigofinal     = $num + 1;
		$codhoja = "H".$codigofinal;
	}
    ################ CREO CODIGO DE HOJA EVOLUTIVA ###############

    ################ CREO DOCUMENTO DE HOJA EVOLUTIVA ####################
	$sql = "SELECT nrodocumento FROM hojasevolutivas 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idhoja DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE HOJA EVOLUTIVA ###############

    $fecha_hora = date("Y-m-d H:i:s");

    $sql = "SELECT * FROM aperturas WHERE codsucursal = ? AND codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["sucursal_busqueda"]),decrypt($_POST["codpaciente"])));
	$num = $stmt->rowCount();
	if($num > 0)
	{

		############################# REGISTRO DE HOJA EVOLUTIVA #############################
		$query = "INSERT INTO hojasevolutivas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codhoja);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $codprocedimiento);
		$stmt->bindParam(8, $procedimiento);
		$stmt->bindParam(9, $motivoconsulta);
		$stmt->bindParam(10, $examenfisico);
		$stmt->bindParam(11, $fechacitologia);
		$stmt->bindParam(12, $embarazada);
		$stmt->bindParam(13, $fechamestruacion);
		$stmt->bindParam(14, $semanas);
		$stmt->bindParam(15, $fechaparto);
		$stmt->bindParam(16, $atenproced);
		$stmt->bindParam(17, $ta);
		$stmt->bindParam(18, $temperatura);
		$stmt->bindParam(19, $fc);
		$stmt->bindParam(20, $fr);
		$stmt->bindParam(21, $peso);
		$stmt->bindParam(22, $dxpresuntivo);
		$stmt->bindParam(23, $dxdefinitivo);
		$stmt->bindParam(24, $origenenfermedad);
		$stmt->bindParam(25, $tratamiento);
		$stmt->bindParam(26, $fechahoja);
		$stmt->bindParam(27, $codigo);
		$stmt->bindParam(28, $modulo);
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$codprocedimiento = limpiar("0");
		$procedimiento = limpiar("HOJA EVOLUTIVA");
		$motivoconsulta = limpiar($_POST['motivoconsulta']);
		$examenfisico = limpiar($_POST["examenfisico"]);
        $fechacitologia = limpiar(isset($_POST['fechacitologia']) && $_POST['fechacitologia'] != "" ? date("Y-m-d",strtotime($_POST['fechacitologia'])) : "'0000-00-00'");
        $embarazada = limpiar(isset($_POST['embarazada']) ? $_POST["embarazada"] : "");
        $fechamestruacion = limpiar(isset($_POST['fechamestruacion']) ? date("Y-m-d",strtotime($_POST['fechamestruacion'])) : "0000-00-00");
        $semanas = limpiar(isset($_POST['semanas']) ? $_POST['semanas'] : "");
        $fechaparto = limpiar(isset($_POST['fechaparto']) ? date("Y-m-d",strtotime($_POST['fechaparto'])) : "0000-00-00");
        $atenproced = limpiar(isset($_POST['atenproced']) ? $_POST['atenproced'] : "");
		$ta = limpiar($_POST["ta"]);
		$temperatura = limpiar($_POST["temperatura"]);
		$fc = limpiar($_POST["fc"]);
		$fr = limpiar($_POST["fr"]);
		$peso = limpiar($_POST["peso"]);
		
		################# DX PRESUNTIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciepresuntivo = $_POST["idciepresuntivo"];
	    $presuntivo = $_POST["presuntivo"];
	    $observacionpresuntivo = $_POST["observacionpresuntivo"];
	    for($cont; $cont<count($_POST["presuntivo"]); $cont++):
		$arrayBD[] = trim($idciepresuntivo[$cont]."/".$presuntivo[$cont]."/".$observacionpresuntivo[$cont]."\n");
	    endfor;
		$dxpresuntivo = implode(",,",$arrayBD);
		################# DX PRESUNTIVO #################
		
		################# DX DEFINITIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciedefinitivo = $_POST["idciedefinitivo"];
	    $definitivo = $_POST["definitivo"];
	    $observaciondefinitivo = $_POST["observaciondefinitivo"];
	    for($cont; $cont<count($_POST["definitivo"]); $cont++):
		$arrayBD[] = trim($idciedefinitivo[$cont]."/".$definitivo[$cont]."/".$observaciondefinitivo[$cont]."\n");
	    endfor;
		$dxdefinitivo = implode(",,",$arrayBD);
        ################# DX DEFINITIVO #################
		
		$origenenfermedad = limpiar($_POST["origenenfermedad"]);
		$tratamiento = limpiar($_POST["tratamiento"]);
		$fechahoja = $fecha_hora;
		$codigo = limpiar($_SESSION["codigo"]);
		$modulo = limpiar($_POST['modulo']);
		$stmt->execute();
		############################# REGISTRO DE HOJA EVOLUTIVA #############################

		############################# REGISTRO DE FORMULA MEDICA #############################
		if (array_filter($_POST['idcieformula'])) {

			################ CREO CODIGO DE FORMULA MEDICA ####################
			$sql = "SELECT codformulam FROM formulasmedicas 
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$formulam=$row["codformulam"];

			}
			if(empty($formulam))
			{
				$codformulam = "F1";

			} else {

				$resto = substr($formulam, 0, 1);
				$coun = strlen($resto);
				$num     = substr($formulam, $coun);
				$codigofinal     = $num + 1;
				$codformulam = "F".$codigofinal;
			}
            ################ CREO CODIGO DE FORMULA MEDICA ###############

            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
			$sql = "SELECT nrodocumento FROM formulasmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docformula=$row["nrodocumento"];

			}
			if(empty($docformula))
			{
				$nroformula = "01";

			} else {

				$num = substr($docformula, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroformula = $numfinal;
			}
            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

            $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codformulam);
			$stmt->bindParam(2, $nroformula);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $formulamedica);
			$stmt->bindParam(10, $fechaformula);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codhoja);
			$procedimiento = limpiar("HOJA EVOLUTIVA");

			################# DX FORMULAS MEDICAS #################
			$cont = 0;
			$arrayFormula = array();
			$idcieformula = $_POST["idcieformula"];
			$formula = $_POST["formula"];
			$observacionformula = $_POST["observacionformula"];
			for($cont; $cont<count($_POST["formula"]); $cont++):
				$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
			endfor;
			$formulamedica = implode(",,",$arrayFormula);
            ################# DX FORMULAS MEDICAS #################

			$fechaformula = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE FORMULA MEDICA ############################# 

		############################# REGISTRO DE ORDENES MEDICA #############################
		if (array_filter($_POST['idcieorden'])) {

			################ CREO CODIGO DE ORDENES MEDICAS ####################
			$sql = "SELECT codorden FROM ordenesmedicas 
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$ordenm=$row["codorden"];

			}
			if(empty($ordenm))
			{
				$codorden = "O1";

			} else {

				$resto = substr($ordenm, 0, 1);
				$coun = strlen($resto);
				$num     = substr($ordenm, $coun);
				$codigofinal     = $num + 1;
				$codorden = "O".$codigofinal;
			}
            ################ CREO CODIGO DE ORDENES MEDICAS ###############

            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
			$sql = "SELECT nrodocumento FROM ordenesmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docorden=$row["nrodocumento"];

			}
			if(empty($docorden))
			{
				$nroorden = "01";

			} else {

				$num = substr($docorden, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroorden = $numfinal;
			}
            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

			$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codorden);
			$stmt->bindParam(2, $nroorden);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $ordenmedica);
			$stmt->bindParam(10, $fechaorden);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codhoja);
			$procedimiento = limpiar("HOJA EVOLUTIVA");

			################# DX ORDENES MEDICAS #################
			$cont = 0;
			$arrayOrden = array();
			$idcieorden = $_POST["idcieorden"];
			$ordenes = $_POST["ordenes"];
			$observacionorden = $_POST["observacionorden"];
			for($cont; $cont<count($_POST["ordenes"]); $cont++):
				$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
			endfor;
			$ordenmedica = implode(",,",$arrayOrden);
            ################# DX ORDENES MEDICAS #################

			$fechaorden = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE ORDENES MEDICA #############################

		############################# REGISTRO DE REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) { 

			################ CREO CODIGO DE REMISION ####################
			$sql = "SELECT codremision FROM remisiones 
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$remito=$row["codremision"];

			}
			if(empty($remito))
			{
				$codremision = "R1";

			} else {

				$resto = substr($remito, 0, 1);
				$coun = strlen($resto);
				$num     = substr($remito, $coun);
				$codigofinal     = $num + 1;
				$codremision = "R".$codigofinal;
			}
            ################ CREO CODIGO DE REMISION ###############

            ################ CREO DOCUMENTO DE REMISION ####################
			$sql = "SELECT nrodocumento FROM remisiones 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docremision=$row["nrodocumento"];

			}
			if(empty($docremision))
			{
				$nroremito = "01";

			} else {

				$num = substr($docremision, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroremito = $numfinal;
			}
            ################ CREO DOCUMENTO DE REMISION ###############

            $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codremision);
			$stmt->bindParam(2, $nroremito);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $remision);
			$stmt->bindParam(10, $fecharemision);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codhoja);
			$procedimiento = limpiar("HOJA EVOLUTIVA");
			$remision = limpiar($_POST["remision"]);
			$fecharemision = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE REMISION ############################# 

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	    echo "<span class='fa fa-check-square-o'></span> LA HOJA EVOLUTIVA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codhoja)."&tipo=".encrypt("CONSTANCIA_HOJA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Hoja Evolutiva' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR HOJA EVOLUTIVA</strong></a>";
	    exit;

    } else {

    	echo "6";
	    exit;
    }
}
############################# FUNCION REGISTRAR HOJAS ##############################

############################ FUNCION LISTAR HOJAS #############################
public function ListarHojasEvolutivas()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM hojasevolutivas 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE hojasevolutivas.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND hojasevolutivas.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
	AND hojasevolutivas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM hojasevolutivas 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE hojasevolutivas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR HOJAS #############################

########################### FUNCION ID HOJAS ###############################
public function HojasEvolutivasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	remisiones.remision,
	remisiones.fecharemision,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM hojasevolutivas 
	LEFT JOIN remisiones ON hojasevolutivas.codhoja = remisiones.codprocedimiento 
	LEFT JOIN formulasmedicas ON hojasevolutivas.codhoja = formulasmedicas.codprocedimiento 
	LEFT JOIN ordenesmedicas ON hojasevolutivas.codhoja = ordenesmedicas.codprocedimiento 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE hojasevolutivas.codhoja = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID HOJAS ###############################

########################## FUNCION ACTUALIZAR HOJAS #######################
public function ActualizarHojasEvolutivas()
{
	self::SetNames();
	if(empty($_POST["codhoja"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
	$presuntivo = $_POST['presuntivo'];
    $repeated = array_filter(array_count_values($presuntivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "2";
		exit;
    }
    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
		
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############
    $definitivo = $_POST['definitivo'];
    $repeated = array_filter(array_count_values($definitivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "4";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "5";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############


	    ############################# ACTUALIZO HOJA EVOLUTIVA #############################
	    $sql = " UPDATE hojasevolutivas set "
			." motivoconsulta = ?, "
			." examenfisico = ?, "
			." fechacitologia = ?, "
			." embarazada = ?, "
			." fechamestruacion = ?, "
			." semanas = ?, "
			." fechaparto = ?, "
			." atenproced = ?, "
			." ta = ?, "
			." temperatura = ?, "
			." fc = ?, "
			." fr = ?, "
			." peso = ?, "
			." dxpresuntivo = ?, "
			." dxdefinitivo = ?, "
			." origenenfermedad = ?, "
			." tratamiento = ? "
			." WHERE "
			." codhoja = ?;
			";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $motivoconsulta);
		$stmt->bindParam(2, $examenfisico);
		$stmt->bindParam(3, $fechacitologia);
		$stmt->bindParam(4, $embarazada);
		$stmt->bindParam(5, $fechamestruacion);
		$stmt->bindParam(6, $semanas);
		$stmt->bindParam(7, $fechaparto);
		$stmt->bindParam(8, $atenproced);
		$stmt->bindParam(9, $ta);
		$stmt->bindParam(10, $temperatura);
		$stmt->bindParam(11, $fc);
		$stmt->bindParam(12, $fr);
		$stmt->bindParam(13, $peso);
		$stmt->bindParam(14, $dxpresuntivo);
		$stmt->bindParam(15, $dxdefinitivo);
		$stmt->bindParam(16, $origenenfermedad);
		$stmt->bindParam(17, $tratamiento);
		$stmt->bindParam(18, $codhoja);
			
		$motivoconsulta = limpiar($_POST['motivoconsulta']);
		$examenfisico = limpiar($_POST["examenfisico"]);
        $fechacitologia = limpiar(isset($_POST['fechacitologia']) && $_POST['fechacitologia'] != "" ? date("Y-m-d",strtotime($_POST['fechacitologia'])) : "'0000-00-00'");
        $embarazada = limpiar(isset($_POST['embarazada']) ? $_POST["embarazada"] : "");
        $fechamestruacion = limpiar(isset($_POST['fechamestruacion']) ? date("Y-m-d",strtotime($_POST['fechamestruacion'])) : "0000-00-00");
        $semanas = limpiar(isset($_POST['semanas']) ? $_POST['semanas'] : "");
        $fechaparto = limpiar(isset($_POST['fechaparto']) ? date("Y-m-d",strtotime($_POST['fechaparto'])) : "0000-00-00");
        $atenproced = limpiar(isset($_POST['atenproced']) ? $_POST['atenproced'] : "");
		$ta = limpiar($_POST["ta"]);
		$temperatura = limpiar($_POST["temperatura"]);
		$fc = limpiar($_POST["fc"]);
		$fr = limpiar($_POST["fr"]);
		$peso = limpiar($_POST["peso"]);
		
		################# DX PRESUNTIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciepresuntivo = $_POST["idciepresuntivo"];
	    $presuntivo = $_POST["presuntivo"];
	    $observacionpresuntivo = $_POST["observacionpresuntivo"];
	    for($cont; $cont<count($_POST["presuntivo"]); $cont++):
		$arrayBD[] = trim($idciepresuntivo[$cont]."/".$presuntivo[$cont]."/".$observacionpresuntivo[$cont]."\n");
	    endfor;
		$dxpresuntivo = implode(",,",$arrayBD);
		################# DX PRESUNTIVO #################
		
		################# DX DEFINITIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciedefinitivo = $_POST["idciedefinitivo"];
	    $definitivo = $_POST["definitivo"];
	    $observaciondefinitivo = $_POST["observaciondefinitivo"];
	    for($cont; $cont<count($_POST["definitivo"]); $cont++):
		$arrayBD[] = trim($idciedefinitivo[$cont]."/".$definitivo[$cont]."/".$observaciondefinitivo[$cont]."\n");
	    endfor;
		$dxdefinitivo = implode(",,",$arrayBD);
        ################# DX DEFINITIVO #################
		
		$origenenfermedad = limpiar($_POST["origenenfermedad"]);
		$tratamiento = limpiar($_POST["tratamiento"]);
		$codhoja = limpiar(decrypt($_POST['codhoja']));
		$stmt->execute();
	    ############################# ACTUALIZO HOJA EVOLUTIVA #############################


	    ############################# ACTUALIZO FORMULA MEDICA #############################
	    if (array_filter($_POST['idcieformula'])) {

	        $sql = "SELECT * FROM formulasmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codhoja'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

			    ################ CREO CODIGO DE FORMULA MEDICA ####################
				$sql = "SELECT codformulam FROM formulasmedicas 
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$formulam=$row["codformulam"];

				}
				if(empty($formulam))
				{
					$codformulam = "F1";

				} else {

					$resto = substr($formulam, 0, 1);
		            $coun = strlen($resto);
		            $num     = substr($formulam, $coun);
		            $codigofinal     = $num + 1;
		            $codformulam = "F".$codigofinal;
				}
	            ################ CREO CODIGO DE FORMULA MEDICA ###############

	            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
				$sql = "SELECT nrodocumento FROM formulasmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docformula=$row["nrodocumento"];

				}
				if(empty($docformula))
				{
					$nroformula = "01";

				} else {

					$num = substr($docformula, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroformula = $numfinal;
				}
	            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

                $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codformulam);
				$stmt->bindParam(2, $nroformula);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $formulamedica);
				$stmt->bindParam(10, $fechaformula);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar($relacion);
				$procedimiento = limpiar("HOJA EVOLUTIVA");
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$fechaformula = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

		    } else {

				$sql = " UPDATE formulasmedicas set "
					  ." formulamedica = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $formulamedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST['codhoja']));
			    $stmt->execute();
		    }
	    } 
	    ############################# ACTUALIZO FORMULA MEDICA #############################


	    ############################# ACTUALIZO ORDENES MEDICA #############################
	    if (array_filter($_POST['idcieorden'])) {
		
	        $sql = "SELECT * FROM ordenesmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codhoja'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE ORDENES MEDICAS ####################
				$sql = "SELECT codorden FROM ordenesmedicas 
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$ordenm=$row["codorden"];

				}
				if(empty($ordenm))
				{
					$codorden = "O1";

				} else {

					$resto = substr($ordenm, 0, 1);
					$coun = strlen($resto);
					$num     = substr($ordenm, $coun);
					$codigofinal     = $num + 1;
					$codorden = "O".$codigofinal;
				}
	            ################ CREO CODIGO DE ORDENES MEDICAS ###############

	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
				$sql = "SELECT nrodocumento FROM ordenesmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docorden=$row["nrodocumento"];

				}
				if(empty($docorden))
				{
					$nroorden = "01";

				} else {

					$num = substr($docorden, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroorden = $numfinal;
				}
	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

				$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codorden);
				$stmt->bindParam(2, $nroorden);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $ordenmedica);
				$stmt->bindParam(10, $fechaorden);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST['codhoja']));
				$procedimiento = limpiar("HOJA EVOLUTIVA");

				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$fechaorden = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE ordenesmedicas set "
					." ordenmedica = ? "
					." WHERE "
					." codprocedimiento = ?;
					";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $ordenmedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codhoja"]));
			    $stmt->execute();
			}
	    }
	    ############################# ACTUALIZO ORDENES MEDICA #############################

	    ############################# ACTUALIZO REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) {

			$sql = "SELECT * FROM remisiones WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codhoja'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE REMISION ####################
				$sql = "SELECT codremision FROM remisiones 
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$remito=$row["codremision"];

				}
				if(empty($remito))
				{
					$codremision = "R1";

				} else {

					$resto = substr($remito, 0, 1);
					$coun = strlen($resto);
					$num     = substr($remito, $coun);
					$codigofinal     = $num + 1;
					$codremision = "R".$codigofinal;
				}
	            ################ CREO CODIGO DE REMISION ###############

	            ################ CREO DOCUMENTO DE REMISION ####################
				$sql = "SELECT nrodocumento FROM remisiones 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docremision=$row["nrodocumento"];

				}
				if(empty($docremision))
				{
					$nroremito = "01";

				} else {

					$num = substr($docremision, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroremito = $numfinal;
				}
	            ################ CREO DOCUMENTO DE REMISION ###############

                $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codremision);
				$stmt->bindParam(2, $nroremito);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $remision);
				$stmt->bindParam(10, $fecharemision);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
				$codprocedimiento = limpiar(decrypt($_POST["codhoja"]));
				$procedimiento = limpiar("HOJA EVOLUTIVA");
				$remision = limpiar($_POST["remision"]);
				$fecharemision = limpiar(date("Y-m-d H:i:s"));
				$codigo = limpiar($_SESSION["codigo"]);
				$modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE remisiones set "
					  ." remision = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $remision);
				$stmt->bindParam(2, $codprocedimiento);
					
				$remision = limpiar($_POST["remision"]);
				$codprocedimiento = limpiar(decrypt($_POST['codhoja']));
			    $stmt->execute();
		    }
		}
	    ############################# ACTUALIZO REMISION #############################

	echo "<span class='fa fa-check-square-o'></span> LA HOJA EVOLUTIVA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codhoja)."&tipo=".encrypt("CONSTANCIA_HOJA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Hoja Evolutiva' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR HOJA EVOLUTIVA</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR HOJAS #######################

############################ FUNCION ELIMINAR HOJAS ###########################
public function EliminarHojasEvolutivas()
{
	if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT * FROM hojasevolutivas WHERE codhoja = ? AND codprocedimiento != 0";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codhoja"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		################### ELIMINO HOJAS EVOLUTIVAS ###################
		$sql = "DELETE FROM hojasevolutivas WHERE codhoja = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codhoja);
		$codhoja = decrypt($_GET["codhoja"]);
		$stmt->execute();
		################### ELIMINO HOJAS EVOLUTIVAS ###################

		################### ELIMINO FORMULAS MEDICA ###################
		$sql = "DELETE FROM formulasmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codhoja);
		$codhoja = decrypt($_GET["codhoja"]);
		$stmt->execute();
		################### ELIMINO FORMULAS MEDICA ###################

		################### ELIMINO ORDENES MEDICA ###################
		$sql = "DELETE FROM ordenesmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codhoja);
		$codhoja = decrypt($_GET["codhoja"]);
		$stmt->execute();
		################### ELIMINO ORDENES MEDICA ###################

		################### ELIMINO REMISIONES ###################
		$sql = "DELETE FROM remisiones WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codhoja);
		$codhoja = decrypt($_GET["codhoja"]);
		$stmt->execute();
		################### ELIMINO REMISIONES ###################
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}  
############################ FUNCION ELIMINAR HOJAS ###########################

################################ FUNCION BUSQUEDA HOJAS EVOLUTIVAS POR FECHAS ################################
public function BuscarHojasEvolutivasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM hojasevolutivas 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE hojasevolutivas.codsucursal = ?
	AND hojasevolutivas.codmedico = ?
	AND DATE_FORMAT(hojasevolutivas.fechahoja,'%Y-%m-%d') BETWEEN ? AND ?
	AND hojasevolutivas.modulo = ?
	ORDER BY hojasevolutivas.fechahoja DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM hojasevolutivas 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE hojasevolutivas.codsucursal = ? 
	AND DATE_FORMAT(hojasevolutivas.fechahoja,'%Y-%m-%d') BETWEEN ? AND ?
	AND hojasevolutivas.modulo = ?
	ORDER BY hojasevolutivas.fechahoja DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA HOJAS EVOLUTIVAS POR FECHAS ################################

################################ FUNCION BUSQUEDA HOJAS EVOLUTIVAS POR MEDICO ################################
public function BuscarHojasEvolutivasxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM hojasevolutivas 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE hojasevolutivas.codsucursal = ?
	AND hojasevolutivas.codmedico = ? 
	AND DATE_FORMAT(hojasevolutivas.fechahoja,'%Y-%m-%d') BETWEEN ? AND ? 
	AND hojasevolutivas.modulo = ?
	ORDER BY hojasevolutivas.fechahoja DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA HOJAS EVOLUTIVAS POR MEDICO ################################

################################ FUNCION BUSQUEDA HOJAS EVOLUTIVAS POR PACIENTE ################################
public function BuscarHojasEvolutivasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM hojasevolutivas 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE hojasevolutivas.codsucursal = ?
	AND hojasevolutivas.codmedico = ?
	AND hojasevolutivas.codpaciente = ?
	AND hojasevolutivas.modulo = ?
	ORDER BY hojasevolutivas.fechahoja DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	hojasevolutivas.idhoja,
	hojasevolutivas.codhoja,
	hojasevolutivas.nrodocumento,  
	hojasevolutivas.codcita,
	hojasevolutivas.codsucursal,
	hojasevolutivas.codmedico, 
	hojasevolutivas.codpaciente, 
	hojasevolutivas.codprocedimiento,
	hojasevolutivas.procedimiento,
	hojasevolutivas.motivoconsulta,
	hojasevolutivas.examenfisico,
	hojasevolutivas.fechacitologia,
	hojasevolutivas.embarazada, 
	hojasevolutivas.fechamestruacion, 
	hojasevolutivas.semanas, 
	hojasevolutivas.fechaparto,
	hojasevolutivas.atenproced,
	hojasevolutivas.ta,
	hojasevolutivas.temperatura,
	hojasevolutivas.fc, 
	hojasevolutivas.fr, 
	hojasevolutivas.peso, 
	hojasevolutivas.dxpresuntivo,
	hojasevolutivas.dxdefinitivo, 
	hojasevolutivas.origenenfermedad, 
	hojasevolutivas.tratamiento, 
	hojasevolutivas.fechahoja,
	hojasevolutivas.codigo,
	hojasevolutivas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM hojasevolutivas 
	LEFT JOIN sucursales ON hojasevolutivas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON hojasevolutivas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON hojasevolutivas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE hojasevolutivas.codsucursal = ?  
	AND hojasevolutivas.codpaciente = ?
	AND hojasevolutivas.modulo = ?
	ORDER BY hojasevolutivas.fechahoja DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(3, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA HOJAS EVOLUTIVAS POR PACIENTE ################################

##################################### CLASE HOJAS EVOLUTIVAS ########################################


















##################################### CLASE REMISIONES ########################################

############################# FUNCION REGISTRAR REMISIONES ##############################
public function RegistrarRemisiones()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["remision"]))
	{
		echo "1";
		exit;
	}	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "2";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "3";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	################ CREO CODIGO DE REMISION ####################
	$sql = "SELECT codremision FROM remisiones 
	ORDER BY idremision DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$remision=$row["codremision"];

	}
	if(empty($remision))
	{
		$codremision = "R1";

	} else {

		$resto = substr($remision, 0, 1);
		$coun = strlen($resto);
		$num     = substr($remision, $coun);
		$codigofinal     = $num + 1;
		$codremision = "R".$codigofinal;
	}
    ################ CREO CODIGO DE REMISION ###############

    ################ CREO DOCUMENTO DE REMISION ####################
	$sql = "SELECT nrodocumento FROM remisiones 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idremision DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
		$digitos = $num + 1;
		$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
		$nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE REMISION ###############
 
    $fecha_hora = date("Y-m-d H:i:s");

    $sql = "SELECT * FROM aperturas WHERE codsucursal = ? AND codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["sucursal_busqueda"]),decrypt($_POST["codpaciente"])));
	$num = $stmt->rowCount();
	if($num > 0)
	{

		############################# REGISTRO DE REMISION #############################
	    $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codremision);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $codprocedimiento);
		$stmt->bindParam(8, $procedimiento);
		$stmt->bindParam(9, $remision);
		$stmt->bindParam(10, $fecharemision);
		$stmt->bindParam(11, $codigo);
		$stmt->bindParam(12, $modulo);

		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$codprocedimiento = limpiar("0");
		$procedimiento = limpiar("REMISION");
		$remision = limpiar($_POST["remision"]);
		$fecharemision = $fecha_hora;
        $codigo = limpiar($_SESSION["codigo"]);
        $modulo = limpiar($_POST['modulo']);
		$stmt->execute();
		############################# REGISTRO DE REMISION #############################

		############################# REGISTRO DE FORMULA MEDICA #############################
		if (array_filter($_POST['idcieformula'])) {

		    ################ CREO CODIGO DE FORMULA MEDICA ####################
			$sql = "SELECT codformulam FROM formulasmedicas 
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$formulam=$row["codformulam"];

			}
			if(empty($formulam))
			{
				$codformulam = "F1";

			} else {

				$resto = substr($formulam, 0, 1);
				$coun = strlen($resto);
				$num     = substr($formulam, $coun);
				$codigofinal     = $num + 1;
				$codformulam = "F".$codigofinal;
			}
		    ################ CREO CODIGO DE FORMULA MEDICA ###############

		    ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
			$sql = "SELECT nrodocumento FROM formulasmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docformula=$row["nrodocumento"];

			}
			if(empty($docformula))
			{
				$nroformula = "01";

			} else {

				$num = substr($docformula, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroformula = $numfinal;
			}
		    ################ CREO DOCUMENTO DE FORMULA MEDICA ############### 
			
            $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codformulam);
			$stmt->bindParam(2, $nroformula);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $formulamedica);
			$stmt->bindParam(10, $fechaformula);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		    $codprocedimiento = limpiar($codremision);
			$procedimiento = limpiar("REMISION");

			################# DX FORMULAS MEDICAS #################
			$cont = 0;
			$arrayFormula = array();
			$idcieformula = $_POST["idcieformula"];
			$formula = $_POST["formula"];
			$observacionformula = $_POST["observacionformula"];
			for($cont; $cont<count($_POST["formula"]); $cont++):
				$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
			endfor;
			$formulamedica = implode(",,",$arrayFormula);
            ################# DX FORMULAS MEDICAS #################

			$fechaformula = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();  
		}
		############################# REGISTRO DE FORMULA MEDICA ############################# 

		############################# REGISTRO DE ORDENES MEDICA #############################
		if (array_filter($_POST['idcieorden'])) { 
			
			################ CREO CODIGO DE ORDENES MEDICAS ####################
			$sql = "SELECT codorden FROM ordenesmedicas 
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$ordenm=$row["codorden"];

			}
			if(empty($ordenm))
			{
				$codorden = "O1";

			} else {

				$resto = substr($ordenm, 0, 1);
				$coun = strlen($resto);
				$num     = substr($ordenm, $coun);
				$codigofinal     = $num + 1;
				$codorden = "O".$codigofinal;
			}
            ################ CREO CODIGO DE ORDENES MEDICAS ###############

            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
			$sql = "SELECT nrodocumento FROM ordenesmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docorden=$row["nrodocumento"];

			}
			if(empty($docorden))
			{
				$nroorden = "01";

			} else {

				$num = substr($docorden, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroorden = $numfinal;
			}
            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

			$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codorden);
			$stmt->bindParam(2, $nroorden);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $ordenmedica);
			$stmt->bindParam(10, $fechaorden);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		    $codprocedimiento = limpiar($codremision);
			$procedimiento = limpiar("REMISION");

			################# DX ORDENES MEDICAS #################
			$cont = 0;
			$arrayOrden = array();
			$idcieorden = $_POST["idcieorden"];
			$ordenes = $_POST["ordenes"];
			$observacionorden = $_POST["observacionorden"];
			for($cont; $cont<count($_POST["ordenes"]); $cont++):
				$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
			endfor;
			$ordenmedica = implode(",,",$arrayOrden);
            ################# DX ORDENES MEDICAS #################

			$fechaorden = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE ORDENES MEDICA #############################

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	    echo "<span class='fa fa-check-square-o'></span> LA REMISIÓN HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codremision)."&tipo=".encrypt("CONSTANCIA_REMISION")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Remision' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR REMISIÓN</strong></a>";
	    exit;

    } else {

    	echo "6";
	    exit;
    }
}
############################# FUNCION REGISTRAR REMISIONES ##############################

############################ FUNCION LISTAR REMISIONES #############################
public function ListarRemisiones()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.codpaciente, 
	remisiones.codprocedimiento,
	remisiones.procedimiento,
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	remisiones.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM remisiones 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE remisiones.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND remisiones.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
	AND remisiones.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.codpaciente, 
	remisiones.codprocedimiento,
	remisiones.procedimiento,
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	remisiones.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM remisiones 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE remisiones.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR REMISIONES #############################

########################### FUNCION ID REMISIONES ###############################
public function RemisionesPorId()
{
	self::SetNames();
	$sql = "SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.codpaciente, 
	remisiones.codprocedimiento,
	remisiones.procedimiento,
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	remisiones.modulo,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM remisiones 
	LEFT JOIN formulasmedicas ON remisiones.codremision = formulasmedicas.codprocedimiento 
	LEFT JOIN ordenesmedicas ON remisiones.codremision = ordenesmedicas.codprocedimiento 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE remisiones.codremision = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID REMISIONES ###############################

########################## FUNCION ACTUALIZAR REMISIONES #######################
public function ActualizarRemisiones()
{
	self::SetNames();
	if(empty($_POST["codremision"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["remision"]))
	{
		echo "1";
		exit;
	}

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "2";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "3";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############


	    ############################# ACTUALIZO REMISIONES #############################
	    $sql = " UPDATE remisiones set "
			  ." remision = ? "
			  ." WHERE "
			  ." codprocedimiento = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $remision);
		$stmt->bindParam(2, $codremision);
			
		$remision = limpiar($_POST["remision"]);
		$codremision = limpiar(decrypt($_POST['codremision']));
	    $stmt->execute();
	    ############################# ACTUALIZO REMISIONES #############################


	    ############################# ACTUALIZO FORMULA MEDICA #############################
	    if (array_filter($_POST['idcieformula'])) { 

	        $sql = "SELECT * FROM formulasmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST["codremision"])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

			    ################ CREO CODIGO DE FORMULA MEDICA ####################
				$sql = "SELECT codformulam FROM formulasmedicas 
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$formulam=$row["codformulam"];

				}
				if(empty($formulam))
				{
					$codformulam = "F1";

				} else {

					$resto = substr($formulam, 0, 1);
		            $coun = strlen($resto);
		            $num     = substr($formulam, $coun);
		            $codigofinal     = $num + 1;
		            $codformulam = "F".$codigofinal;
				}
	            ################ CREO CODIGO DE FORMULA MEDICA ###############

	            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
				$sql = "SELECT nrodocumento FROM formulasmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docformula=$row["nrodocumento"];

				}
				if(empty($docformula))
				{
					$nroformula = "F1";

				} else {

					$num = substr($docformula, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroformula = $numfinal;
				}
	            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

                $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codformulam);
				$stmt->bindParam(2, $nroformula);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $formulamedica);
				$stmt->bindParam(10, $fechaformula);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codremision"]));
				$procedimiento = limpiar("REMISION");
				
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
                ################# DX FORMULAS MEDICAS #################

				$fechaformula = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

		    } else {

				$sql = " UPDATE formulasmedicas set "
					  ." formulamedica = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $formulamedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
                ################# DX FORMULAS MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codremision"]));
			    $stmt->execute();
		    }
	    } 
	    ############################# ACTUALIZO FORMULA MEDICA #############################


	    ############################# ACTUALIZO ORDENES MEDICA #############################
	    if (array_filter($_POST['idcieorden'])) {

	        $sql = "SELECT * FROM ordenesmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codremision'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE ORDENES MEDICAS ####################
				$sql = "SELECT codorden FROM ordenesmedicas 
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$ordenm=$row["codorden"];

				}
				if(empty($ordenm))
				{
					$codorden = "O1";

				} else {

					$resto = substr($ordenm, 0, 1);
					$coun = strlen($resto);
					$num     = substr($ordenm, $coun);
					$codigofinal     = $num + 1;
					$codorden = "O".$codigofinal;
				}
	            ################ CREO CODIGO DE ORDENES MEDICAS ###############

	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
				$sql = "SELECT nrodocumento FROM ordenesmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docorden=$row["nrodocumento"];

				}
				if(empty($docorden))
				{
					$nroorden = "01";

				} else {

					$num = substr($docorden, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroorden = $numfinal;
				}
	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

				$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codorden);
				$stmt->bindParam(2, $nroorden);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $ordenmedica);
				$stmt->bindParam(10, $fechaorden);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codremision"]));
				$procedimiento = limpiar("REMISION");

				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$fechaorden = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE ordenesmedicas set "
					." ordenmedica = ? "
					." WHERE "
					." codprocedimiento = ?;
					";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $ordenmedica);
				$stmt->bindParam(2, $codprocedimiento);

				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codremision"]));
			    $stmt->execute();
			}
	    }
	    ############################# ACTUALIZO ORDENES MEDICA #############################

	echo "<span class='fa fa-check-square-o'></span> LA REMISIÓN HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codremision)."&tipo=".encrypt("CONSTANCIA_REMISION")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Remision' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR REMISION</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR REMISIONES #######################

############################ FUNCION ELIMINAR REMISIONES ###########################
public function EliminarRemisiones()
{
	if($_SESSION['acceso'] == "administrador") {

		################### ELIMINO REMISIONES ###################
		$sql = "DELETE FROM remisiones WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codremision);
		$codremision = decrypt($_GET["codremision"]);
		$stmt->execute();
		################### ELIMINO REMISIONES ###################

		################### ELIMINO FORMULAS MEDICA ###################
		$sql = "DELETE FROM formulasmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codremision);
		$codremision = decrypt($_GET["codremision"]);
		$stmt->execute();
		################### ELIMINO FORMULAS MEDICA ###################

		################### ELIMINO ORDENES MEDICA ###################
		$sql = "DELETE FROM ordenesmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codremision);
		$codremision = decrypt($_GET["codremision"]);
		$stmt->execute();
		################### ELIMINO ORDENES MEDICA ###################
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 	
}  
############################ FUNCION ELIMINAR REMISIONES ###########################

################################ FUNCION BUSQUEDA REMISIONES POR FECHAS ################################
public function BuscarRemisionesxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.procedimiento, 
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM remisiones 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE remisiones.codsucursal = ?
	AND remisiones.codmedico = ?
	AND DATE_FORMAT(remisiones.fecharemision,'%Y-%m-%d') BETWEEN ? AND ?
	AND remisiones.modulo = ?
	ORDER BY remisiones.fecharemision DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.procedimiento, 
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM remisiones 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE remisiones.codsucursal = ? 
	AND DATE_FORMAT(remisiones.fecharemision,'%Y-%m-%d') BETWEEN ? AND ?
	AND remisiones.modulo = ?
	ORDER BY remisiones.fecharemision DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA REMISIONES POR FECHAS ################################

################################ FUNCION BUSQUEDA REMISIONES POR MEDICO ################################
public function BuscarRemisionesxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.procedimiento, 
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM remisiones 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE remisiones.codsucursal = ?
	AND remisiones.codmedico = ? 
	AND DATE_FORMAT(remisiones.fecharemision,'%Y-%m-%d') BETWEEN ? AND ? 
	AND remisiones.modulo = ?
	ORDER BY remisiones.fecharemision DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA REMISIONES POR MEDICO ################################

################################ FUNCION BUSQUEDA REMISIONES POR PACIENTE ################################
public function BuscarRemisionesxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.procedimiento, 
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM remisiones 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE remisiones.codsucursal = ?
	AND remisiones.codmedico = ?
	AND remisiones.codpaciente = ?
	AND remisiones.modulo = ?
	ORDER BY remisiones.fecharemision DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	remisiones.idremision,
	remisiones.codremision,
	remisiones.nrodocumento,  
	remisiones.codcita,
	remisiones.codsucursal,
	remisiones.codmedico, 
	remisiones.procedimiento, 
	remisiones.remision,
	remisiones.fecharemision,
	remisiones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM remisiones 
	LEFT JOIN sucursales ON remisiones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON remisiones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON remisiones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE remisiones.codsucursal = ?  
	AND remisiones.codpaciente = ?
	AND remisiones.modulo = ?
	ORDER BY remisiones.fecharemision DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(3, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA REMISIONES POR PACIENTE ################################

##################################### CLASE REMISIONES ########################################



















##################################### CLASE FORMULAS MEDICAS ########################################

############################# FUNCION REGISTRAR FORMULAS MEDICAS ##############################
public function RegistrarFormulasMedicas()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["idcieformula"]) or empty($_POST["formula"]) or empty($_POST["observacionformula"]))
	{
		echo "1";
		exit;
	}	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
    $formula = $_POST['idcieformula'];
    $repeated = array_filter(array_count_values($formula), function($count) {
    return $count > 1;
    });

     foreach ($repeated as $key => $value) {
        echo "2";
	    exit;
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "3";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	################ CREO CODIGO DE FORMULA MEDICA ####################
    $sql = "SELECT codformulam FROM formulasmedicas 
    ORDER BY idformulam DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$formulam=$row["codformulam"];

    }
    if(empty($formulam))
    {
    	$codformulam = "F1";

    } else {

    	$resto = substr($formulam, 0, 1);
		$coun = strlen($resto);
		$num     = substr($formulam, $coun);
		$codigofinal     = $num + 1;
		$codformulam = "F".$codigofinal;
    }
	################ CREO CODIGO DE FORMULA MEDICA ###############

	################ CREO DOCUMENTO DE FORMULA MEDICA ####################
    $sql = "SELECT nrodocumento FROM formulasmedicas 
    WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
    ORDER BY idformulam DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$documento=$row["nrodocumento"];

    }
    if(empty($documento))
    {
    	$nrodocumento = "01";

    } else {

    	$num = substr($documento, 0);
    	$digitos = $num + 1;
    	$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
    	$nrodocumento = $numfinal;
    }
	################ CREO DOCUMENTO DE FORMULA MEDICA ###############
 
    $fecha_hora = date("Y-m-d H:i:s");

    $sql = "SELECT * FROM aperturas WHERE codsucursal = ? AND codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["sucursal_busqueda"]),decrypt($_POST["codpaciente"])));
	$num = $stmt->rowCount();
	if($num > 0)
	{

		############################# REGISTRO DE FORMULA MEDICA #############################			
        $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codformulam);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $codprocedimiento);
		$stmt->bindParam(8, $procedimiento);
		$stmt->bindParam(9, $formulamedica);
		$stmt->bindParam(10, $fechaformula);
		$stmt->bindParam(11, $codigo);
		$stmt->bindParam(12, $modulo);

		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$codprocedimiento = limpiar("0");
		$procedimiento = limpiar("FORMULA MEDICA");

		################# DX FORMULAS MEDICAS #################
		$cont = 0;
		$arrayFormula = array();
		$idcieformula = $_POST["idcieformula"];
		$formula = $_POST["formula"];
		$observacionformula = $_POST["observacionformula"];
		for($cont; $cont<count($_POST["formula"]); $cont++):
			$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
		endfor;
		$formulamedica = implode(",,",$arrayFormula);
        ################# DX FORMULAS MEDICAS #################

		$fechaformula = $fecha_hora;
        $codigo = limpiar($_SESSION["codigo"]);
        $modulo = limpiar($_POST['modulo']);
		$stmt->execute();
		############################# REGISTRO DE FORMULA MEDICA ############################# 

		############################# REGISTRO DE ORDENES MEDICA #############################
		if (array_filter($_POST['idcieorden'])) {

			################ CREO CODIGO DE ORDENES MEDICAS ####################
			$sql = "SELECT codorden FROM ordenesmedicas 
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$ordenm=$row["codorden"];

			}
			if(empty($ordenm))
			{
				$codorden = "O1";

			} else {

				$resto = substr($ordenm, 0, 1);
				$coun = strlen($resto);
				$num     = substr($ordenm, $coun);
				$codigofinal     = $num + 1;
				$codorden = "O".$codigofinal;
			}
            ################ CREO CODIGO DE ORDENES MEDICAS ###############

            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
			$sql = "SELECT nrodocumento FROM ordenesmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docorden=$row["nrodocumento"];

			}
			if(empty($docorden))
			{
				$nroorden = "01";

			} else {

				$num = substr($docorden, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroorden = $numfinal;
			}
            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

			$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codorden);
			$stmt->bindParam(2, $nroorden);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $ordenmedica);
			$stmt->bindParam(10, $fechaorden);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codformulam);
			$procedimiento = limpiar("FORMULA MEDICA");

			################# DX ORDENES MEDICAS #################
			$cont = 0;
			$arrayOrden = array();
			$idcieorden = $_POST["idcieorden"];
			$ordenes = $_POST["ordenes"];
			$observacionorden = $_POST["observacionorden"];
			for($cont; $cont<count($_POST["ordenes"]); $cont++):
				$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
			endfor;
			$ordenmedica = implode(",,",$arrayOrden);
            ################# DX ORDENES MEDICAS #################

			$fechaorden = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE ORDENES MEDICA #############################

		############################# REGISTRO DE REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) { 

			################ CREO CODIGO DE REMISION ####################
			$sql = "SELECT codremision FROM remisiones 
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$remito=$row["codremision"];

			}
			if(empty($remito))
			{
				$codremision = "R1";

			} else {

				$resto = substr($remito, 0, 1);
				$coun = strlen($resto);
				$num     = substr($remito, $coun);
				$codigofinal     = $num + 1;
				$codremision = "R".$codigofinal;
			}
            ################ CREO CODIGO DE REMISION ###############

            ################ CREO DOCUMENTO DE REMISION ####################
			$sql = "SELECT nrodocumento FROM remisiones 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docremision=$row["nrodocumento"];

			}
			if(empty($docremision))
			{
				$nroremito = "01";

			} else {

				$num = substr($docremision, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroremito = $numfinal;
			}
            ################ CREO DOCUMENTO DE REMISION ###############

            $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codremision);
			$stmt->bindParam(2, $nroremito);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $remision);
			$stmt->bindParam(10, $fecharemision);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codformulam);
			$procedimiento = limpiar("FORMULA MEDICA");
			$remision = limpiar($_POST["remision"]);
			$fecharemision = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE REMISION #############################


		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	    echo "<span class='fa fa-check-square-o'></span> LA FÓRMULA MÉDICA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codformulam)."&tipo=".encrypt("CONSTANCIA_FORMULAMEDICA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Formula Medica' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR FÓRMULA MÉDICA</strong></a>";
	    exit;

    } else {

    	echo "6";
	    exit;
    }
}
############################# FUNCION REGISTRAR FORMULAS MEDICAS ##############################

############################ FUNCION LISTAR FORMULAS MEDICAS #############################
public function ListarFormulasMedicas()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.codpaciente, 
	formulasmedicas.codprocedimiento,
	formulasmedicas.procedimiento,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	formulasmedicas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasmedicas 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasmedicas.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND formulasmedicas.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
	AND formulasmedicas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.codpaciente, 
	formulasmedicas.codprocedimiento,
	formulasmedicas.procedimiento,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	formulasmedicas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasmedicas 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasmedicas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR FORMULAS MEDICAS #############################

########################### FUNCION ID FORMULAS MEDICAS ###############################
public function FormulasMedicasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.codpaciente, 
	formulasmedicas.codprocedimiento,
	formulasmedicas.procedimiento,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	formulasmedicas.modulo,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM formulasmedicas 
	LEFT JOIN ordenesmedicas ON formulasmedicas.codformulam = ordenesmedicas.codprocedimiento 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE formulasmedicas.codformulam = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID FORMULAS MEDICAS ###############################

########################## FUNCION ACTUALIZAR FORMULAS MEDICAS #######################
public function ActualizarFormulasMedicas()
{
	self::SetNames();
	if(empty($_POST["codformulam"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["idcieformula"]) or empty($_POST["formula"]) or empty($_POST["observacionformula"]))
	{
		echo "1";
		exit;
	}

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
    $formula = $_POST['idcieformula'];
    $repeated = array_filter(array_count_values($formula), function($count) {
    return $count > 1;
    });

     foreach ($repeated as $key => $value) {
        echo "2";
	    exit;
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "3";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	    ############################# ACTUALIZO FORMULA MEDICA #############################
		$sql = " UPDATE formulasmedicas set "
			  ." formulamedica = ? "
			  ." WHERE "
			  ." codformulam = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $formulamedica);
		$stmt->bindParam(2, $codformulam);
					
		################# DX FORMULAS MEDICAS #################
		$cont = 0;
		$arrayFormula = array();
		$idcieformula = $_POST["idcieformula"];
		$formula = $_POST["formula"];
		$observacionformula = $_POST["observacionformula"];
		for($cont; $cont<count($_POST["formula"]); $cont++):
			$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
		endfor;
		$formulamedica = implode(",,",$arrayFormula);
        ################# DX FORMULAS MEDICAS #################

		$codformulam = limpiar(decrypt($_POST["codformulam"]));
	    $stmt->execute();
	    ############################# ACTUALIZO FORMULA MEDICA #############################

	    ############################# ACTUALIZO ORDENES MEDICA #############################
	    if (array_filter($_POST['idcieorden'])) {
		
	        $sql = "SELECT * FROM ordenesmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codformulam'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE ORDENES MEDICAS ####################
				$sql = "SELECT codorden FROM ordenesmedicas 
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$ordenm=$row["codorden"];

				}
				if(empty($ordenm))
				{
					$codorden = "O1";

				} else {

					$resto = substr($ordenm, 0, 1);
					$coun = strlen($resto);
					$num     = substr($ordenm, $coun);
					$codigofinal     = $num + 1;
					$codorden = "O".$codigofinal;
				}
	            ################ CREO CODIGO DE ORDENES MEDICAS ###############

	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
				$sql = "SELECT nrodocumento FROM ordenesmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docorden=$row["nrodocumento"];

				}
				if(empty($docorden))
				{
					$nroorden = "01";

				} else {

					$num = substr($docorden, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroorden = $numfinal;
				}
	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

				$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codorden);
				$stmt->bindParam(2, $nroorden);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $ordenmedica);
				$stmt->bindParam(10, $fechaorden);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codformulam"]));
				$procedimiento = limpiar("FORMULA MEDICA");

				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$fechaorden = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE ordenesmedicas set "
					." ordenmedica = ? "
					." WHERE "
					." codprocedimiento = ?;
					";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $ordenmedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codformulam"]));
			    $stmt->execute();
			}
	    }
	    ############################# ACTUALIZO ORDENES MEDICA #############################

	    ############################# ACTUALIZO REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) {

			$sql = "SELECT * FROM remisiones WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codformulam'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE REMISION ####################
				$sql = "SELECT codremision FROM remisiones 
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$remito=$row["codremision"];

				}
				if(empty($remito))
				{
					$codremision = "R1";

				} else {

					$resto = substr($remito, 0, 1);
					$coun = strlen($resto);
					$num     = substr($remito, $coun);
					$codigofinal     = $num + 1;
					$codremision = "R".$codigofinal;
				}
	            ################ CREO CODIGO DE REMISION ###############

	            ################ CREO DOCUMENTO DE REMISION ####################
				$sql = "SELECT nrodocumento FROM remisiones 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docremision=$row["nrodocumento"];

				}
				if(empty($docremision))
				{
					$nroremito = "01";

				} else {

					$num = substr($docremision, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroremito = $numfinal;
				}
	            ################ CREO DOCUMENTO DE REMISION ###############

                $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codremision);
				$stmt->bindParam(2, $nroremito);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $remision);
				$stmt->bindParam(10, $fecharemision);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
				$codprocedimiento = limpiar(decrypt($_POST["codformulam"]));
				$procedimiento = limpiar("FORMULA MEDICA");
				$remision = limpiar($_POST["remision"]);
				$fecharemision = limpiar(date("Y-m-d H:i:s"));
				$codigo = limpiar($_SESSION["codigo"]);
				$modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE remisiones set "
					  ." remision = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $remision);
				$stmt->bindParam(2, $codprocedimiento);
					
				$remision = limpiar($_POST["remision"]);
				$codprocedimiento = limpiar(decrypt($_POST['codformulam']));
			    $stmt->execute();
		    }
		}
	    ############################# ACTUALIZO REMISION #############################

	echo "<span class='fa fa-check-square-o'></span> LA FÓRMULA MÉDICA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codformulam)."&tipo=".encrypt("CONSTANCIA_FORMULAMEDICA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Formula Medica' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR FÓRMULA MÉDICA</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR FORMULAS MEDICAS #######################

############################ FUNCION ELIMINAR FORMULAS MEDICAS ###########################
public function EliminarFormulasMedicas()
{
	if($_SESSION['acceso'] == "administrador") {

		################### ELIMINO FORMULAS MEDICA ###################
		$sql = "DELETE FROM formulasmedicas WHERE codformulam = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codformulam);
		$codformulam = decrypt($_GET["codformulam"]);
		$stmt->execute();
		################### ELIMINO FORMULAS MEDICA ###################

		################### ELIMINO ORDENES MEDICA ###################
		$sql = "DELETE FROM ordenesmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codformulam);
		$codformulam = decrypt($_GET["codformulam"]);
		$stmt->execute();
		################### ELIMINO ORDENES MEDICA ###################

		################### ELIMINO REMISIONES ###################
		$sql = "DELETE FROM remisiones WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codformulam);
		$codformulam = decrypt($_GET["codformulam"]);
		$stmt->execute();
		################### ELIMINO REMISIONES ###################
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 	
}  
############################ FUNCION ELIMINAR FORMULAS MEDICAS ###########################

################################ FUNCION BUSQUEDA FORMULAS MEDICAS POR FECHAS ################################
public function BuscarFormulasMedicasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.procedimiento, 
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasmedicas 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasmedicas.codsucursal = ?
	AND formulasmedicas.codmedico = ?
	AND DATE_FORMAT(formulasmedicas.fechaformula,'%Y-%m-%d') BETWEEN ? AND ?
	AND formulasmedicas.modulo = ?
	ORDER BY formulasmedicas.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.procedimiento, 
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasmedicas 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasmedicas.codsucursal = ? 
	AND DATE_FORMAT(formulasmedicas.fechaformula,'%Y-%m-%d') BETWEEN ? AND ?
	AND formulasmedicas.modulo = ?
	ORDER BY formulasmedicas.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA FORMULAS MEDICAS POR FECHAS ################################

################################ FUNCION BUSQUEDA FORMULAS MEDICAS POR MEDICO ################################
public function BuscarFormulasMedicasxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.procedimiento, 
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasmedicas 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasmedicas.codsucursal = ?
	AND formulasmedicas.codmedico = ? 
	AND DATE_FORMAT(formulasmedicas.fechaformula,'%Y-%m-%d') BETWEEN ? AND ? 
	AND formulasmedicas.modulo = ?
	ORDER BY formulasmedicas.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA FORMULAS MEDICAS POR MEDICO ################################

################################ FUNCION BUSQUEDA FORMULAS MEDICAS POR PACIENTE ################################
public function BuscarFormulasMedicasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.procedimiento, 
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasmedicas 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasmedicas.codsucursal = ?
	AND formulasmedicas.codmedico = ?
	AND formulasmedicas.codpaciente = ?
	AND formulasmedicas.modulo = ?
	ORDER BY formulasmedicas.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	formulasmedicas.idformulam,
	formulasmedicas.codformulam,
	formulasmedicas.nrodocumento,  
	formulasmedicas.codcita,
	formulasmedicas.codsucursal,
	formulasmedicas.codmedico, 
	formulasmedicas.procedimiento, 
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	formulasmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasmedicas 
	LEFT JOIN sucursales ON formulasmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasmedicas.codsucursal = ?  
	AND formulasmedicas.codpaciente = ?
	AND formulasmedicas.modulo = ?
	ORDER BY formulasmedicas.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(3, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA FORMULAS MEDICAS POR PACIENTE ################################

##################################### CLASE FORMULAS MEDICAS ########################################
















##################################### CLASE ORDENES MEDICAS ########################################

############################# FUNCION REGISTRAR ORDENES MEDICAS ##############################
public function RegistrarOrdenesMedicas()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["idcieorden"]) or empty($_POST["ordenes"]) or empty($_POST["observacionorden"]))
	{
		echo "1";
		exit;
	}	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
    if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "4";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############        
    $orden = $_POST['idcieorden'];
    $repeated = array_filter(array_count_values($orden), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	################ CREO CODIGO DE ORDEN MEDICA ####################
    $sql = "SELECT codorden FROM ordenesmedicas 
    ORDER BY idorden DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$ordenm=$row["codorden"];

    }
    if(empty($ordenm))
    {
    	$codorden = "O1";

    } else {

    	$resto = substr($ordenm, 0, 1);
		$coun = strlen($resto);
		$num     = substr($ordenm, $coun);
		$codigofinal     = $num + 1;
		$codorden = "O".$codigofinal;
    }
	################ CREO CODIGO DE ORDEN MEDICA ###############

	################ CREO DOCUMENTO DE ORDEN MEDICA ####################
    $sql = "SELECT nrodocumento FROM ordenesmedicas 
    WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
    ORDER BY idorden DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$documento=$row["nrodocumento"];

    }
    if(empty($documento))
    {
    	$nrodocumento = "01";

    } else {

    	$num = substr($documento, 0);
    	$digitos = $num + 1;
    	$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
    	$nrodocumento = $numfinal;
    }
	################ CREO DOCUMENTO DE ORDEN MEDICA ###############
 
    $fecha_hora = date("Y-m-d H:i:s");

    $sql = "SELECT * FROM aperturas WHERE codsucursal = ? AND codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["sucursal_busqueda"]),decrypt($_POST["codpaciente"])));
	$num = $stmt->rowCount();
	if($num > 0)
	{

		############################# REGISTRO DE ORDENES MEDICA #############################			
        $query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codorden);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $codprocedimiento);
		$stmt->bindParam(8, $procedimiento);
		$stmt->bindParam(9, $ordenmedica);
		$stmt->bindParam(10, $fechaorden);
		$stmt->bindParam(11, $codigo);
		$stmt->bindParam(12, $modulo);

		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$codprocedimiento = limpiar("0");
		$procedimiento = limpiar("ORDEN MEDICA");

		################# DX ORDENES MEDICAS #################
		$cont = 0;
		$arrayOrden = array();
		$idcieorden = $_POST["idcieorden"];
		$ordenes = $_POST["ordenes"];
		$observacionorden = $_POST["observacionorden"];
		for($cont; $cont<count($_POST["ordenes"]); $cont++):
			$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
		endfor;
		$ordenmedica = implode(",,",$arrayOrden);
        ################# DX ORDENES MEDICAS #################

		$fechaorden = $fecha_hora;
        $codigo = limpiar($_SESSION["codigo"]);
        $modulo = limpiar($_POST['modulo']);
		$stmt->execute();
		############################# REGISTRO DE ORDENES MEDICA ############################# 

		############################# REGISTRO DE FORMULA MEDICA #############################
		if (array_filter($_POST['idcieformula'])) {

			################ CREO CODIGO DE FORMULA MEDICA ####################
			$sql = "SELECT codformulam FROM formulasmedicas 
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$formulam=$row["codformulam"];

			}
			if(empty($formulam))
			{
				$codformulam = "F1";

			} else {

				$resto = substr($formulam, 0, 1);
				$coun = strlen($resto);
				$num     = substr($formulam, $coun);
				$codigofinal     = $num + 1;
				$codformulam = "F".$codigofinal;
			}
            ################ CREO CODIGO DE FORMULA MEDICA ###############

            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
			$sql = "SELECT nrodocumento FROM formulasmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docformula=$row["nrodocumento"];

			}
			if(empty($docformula))
			{
				$nroformula = "01";

			} else {

				$num = substr($docformula, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroformula = $numfinal;
			}
            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

            $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codformulam);
			$stmt->bindParam(2, $nroformula);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $formulamedica);
			$stmt->bindParam(10, $fechaformula);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codorden);
			$procedimiento = limpiar("ORDEN MEDICA");

			################# DX FORMULAS MEDICAS #################
			$cont = 0;
			$arrayFormula = array();
			$idcieformula = $_POST["idcieformula"];
			$formula = $_POST["formula"];
			$observacionformula = $_POST["observacionformula"];
			for($cont; $cont<count($_POST["formula"]); $cont++):
				$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
			endfor;
			$formulamedica = implode(",,",$arrayFormula);
            ################# DX FORMULAS MEDICAS #################

			$fechaformula = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE FORMULA MEDICA #############################

		############################# REGISTRO DE REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) { 

			################ CREO CODIGO DE REMISION ####################
			$sql = "SELECT codremision FROM remisiones 
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$remito=$row["codremision"];

			}
			if(empty($remito))
			{
				$codremision = "R1";

			} else {

			    $resto = substr($remito, 0, 1);
				$coun = strlen($resto);
				$num     = substr($remito, $coun);
				$codigofinal     = $num + 1;
				$codremision = "R".$codigofinal;
			}
            ################ CREO CODIGO DE REMISION ###############

            ################ CREO DOCUMENTO DE REMISION ####################
			$sql = "SELECT nrodocumento FROM remisiones 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docremision=$row["nrodocumento"];

			}
			if(empty($docremision))
			{
				$nroremito = "01";

			} else {

				$num = substr($docremision, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroremito = $numfinal;
			}
            ################ CREO DOCUMENTO DE REMISION ###############

            $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codremision);
			$stmt->bindParam(2, $nroremito);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $remision);
			$stmt->bindParam(10, $fecharemision);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codorden);
			$procedimiento = limpiar("ORDEN MEDICA");
			$remision = limpiar($_POST["remision"]);
			$fecharemision = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE REMISION #############################


		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	    echo "<span class='fa fa-check-square-o'></span> LA ORDEN MÉDICA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codorden)."&tipo=".encrypt("CONSTANCIA_ORDENMEDICA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Orden Medica' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR ORDEN MÉDICA</strong></a>";
	    exit;

    } else {

    	echo "6";
	    exit;
    }
}
############################# FUNCION REGISTRAR ORDENES MEDICAS ##############################

############################ FUNCION LISTAR ORDENES MEDICAS #############################
public function ListarOrdenesMedicas()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.codpaciente, 
	ordenesmedicas.codprocedimiento,
	ordenesmedicas.procedimiento,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	ordenesmedicas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ordenesmedicas 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ordenesmedicas.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND ordenesmedicas.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
	AND ordenesmedicas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.codpaciente, 
	ordenesmedicas.codprocedimiento,
	ordenesmedicas.procedimiento,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	ordenesmedicas.modulo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ordenesmedicas 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ordenesmedicas.modulo = '".limpiar(decrypt($_GET["url"]))."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR ORDENES MEDICAS #############################

########################### FUNCION ID ORDENES MEDICAS ###############################
public function OrdenesMedicasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.codpaciente, 
	ordenesmedicas.codprocedimiento,
	ordenesmedicas.procedimiento,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	ordenesmedicas.modulo,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM ordenesmedicas 
	LEFT JOIN formulasmedicas ON ordenesmedicas.codorden = formulasmedicas.codprocedimiento 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE ordenesmedicas.codorden = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID ORDENES MEDICAS ###############################

########################## FUNCION ACTUALIZAR ORDENES MEDICAS #######################
public function ActualizarOrdenesMedicas()
{
	self::SetNames();
	if(empty($_POST["codformulam"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["idcieorden"]) or empty($_POST["ordenes"]) or empty($_POST["observacionorden"]))
	{
		echo "1";
		exit;
	}

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
    if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "2";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    $orden = $_POST['idcieorden'];
    $repeated = array_filter(array_count_values($orden), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	    ############################# ACTUALIZO FORMULA MEDICA #############################
		$sql = " UPDATE ordenesmedicas set "
			  ." ordenmedica = ? "
			  ." WHERE "
			  ." codorden = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $ordenmedica);
		$stmt->bindParam(2, $codorden);
					
		################# DX FORMULAS MEDICAS #################
		$cont = 0;
		$arrayFormula = array();
		$idcieformula = $_POST["idcieformula"];
		$formula = $_POST["formula"];
		$observacionformula = $_POST["observacionformula"];
		for($cont; $cont<count($_POST["formula"]); $cont++):
			$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
		endfor;
		$formulamedica = implode(",,",$arrayFormula);
        ################# DX FORMULAS MEDICAS #################

		$codorden = limpiar(decrypt($_POST["codorden"]));
	    $stmt->execute();
	    ############################# ACTUALIZO FORMULA MEDICA #############################

	    ############################# ACTUALIZO FORMULA MEDICA #############################
	    if (limpiar(isset($_POST['idcieformula']))) { 

	        $sql = "SELECT * FROM formulasmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST["codorden"])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

			    ################ CREO CODIGO DE FORMULA MEDICA ####################
				$sql = "SELECT codformulam FROM formulasmedicas 
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$formulam=$row["codformulam"];

				}
				if(empty($formulam))
				{
					$codformulam = "F1";

				} else {

					$resto = substr($formulam, 0, 1);
		            $coun = strlen($resto);
		            $num     = substr($formulam, $coun);
		            $codigofinal     = $num + 1;
		            $codformulam = "F".$codigofinal;
				}
	            ################ CREO CODIGO DE FORMULA MEDICA ###############

	            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
				$sql = "SELECT nrodocumento FROM formulasmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docformula=$row["nrodocumento"];

				}
				if(empty($docformula))
				{
					$nroformula = "01";

				} else {

					$num = substr($docformula, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroformula = $numfinal;
				}
	            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

                $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codformulam);
				$stmt->bindParam(2, $nroformula);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $formulamedica);
				$stmt->bindParam(10, $fechaformula);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codorden"]));
				$procedimiento = limpiar("ORDEN MEDICA");
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$fechaformula = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

		    } else {

				$sql = " UPDATE formulasmedicas set "
					  ." formulamedica = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $formulamedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codorden"]));
			    $stmt->execute();
		    }
	    } 
	    ############################# ACTUALIZO FORMULA MEDICA #############################

	    ############################# ACTUALIZO REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) {

			$sql = "SELECT * FROM remisiones WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codorden'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE REMISION ####################
				$sql = "SELECT codremision FROM remisiones 
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$remito=$row["codremision"];

				}
				if(empty($remito))
				{
					$codremision = "R1";

				} else {

					$resto = substr($remito, 0, 1);
		            $coun = strlen($resto);
		            $num     = substr($remito, $coun);
		            $codigofinal     = $num + 1;
		            $codremision = "R".$codigofinal;
				}
	            ################ CREO CODIGO DE REMISION ###############

	            ################ CREO DOCUMENTO DE REMISION ####################
				$sql = "SELECT nrodocumento FROM remisiones 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docremision=$row["nrodocumento"];

				}
				if(empty($docremision))
				{
					$nroremito = "01";

				} else {

					$num = substr($docremision, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroremito = $numfinal;
				}
	            ################ CREO DOCUMENTO DE REMISION ###############

                $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codremision);
				$stmt->bindParam(2, $nroremito);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $remision);
				$stmt->bindParam(10, $fecharemision);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
				$codprocedimiento = limpiar(decrypt($_POST["codorden"]));
				$procedimiento = limpiar("ORDEN MEDICA");
				$remision = limpiar($_POST["remision"]);
				$fecharemision = limpiar(date("Y-m-d H:i:s"));
				$codigo = limpiar($_SESSION["codigo"]);
				$modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE remisiones set "
					  ." remision = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $remision);
				$stmt->bindParam(2, $codprocedimiento);
					
				$remision = limpiar($_POST["remision"]);
				$codprocedimiento = limpiar(decrypt($_POST['codorden']));
			    $stmt->execute();
		    }
		}
	    ############################# ACTUALIZO REMISION #############################

	echo "<span class='fa fa-check-square-o'></span> LA ORDEN MÉDICA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codorden)."&tipo=".encrypt("CONSTANCIA_ORDENMEDICA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Orden Medica' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR ORDEN MÉDICA</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR ORDENES MEDICAS #######################

############################ FUNCION ELIMINAR ORDENES MEDICAS ###########################
public function EliminarOrdenesMedicas()
{
	if($_SESSION['acceso'] == "administrador") {

		################### ELIMINO FORMULAS MEDICA ###################
		$sql = "DELETE FROM formulasmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codorden);
		$codorden = decrypt($_GET["codorden"]);
		$stmt->execute();
		################### ELIMINO FORMULAS MEDICA ###################

		################### ELIMINO ORDENES MEDICA ###################
		$sql = "DELETE FROM ordenesmedicas WHERE codorden = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codorden);
		$codorden = decrypt($_GET["codorden"]);
		$stmt->execute();
		################### ELIMINO ORDENES MEDICA ###################

		################### ELIMINO REMISIONES ###################
		$sql = "DELETE FROM remisiones WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codorden);
		$codorden = decrypt($_GET["codorden"]);
		$stmt->execute();
		################### ELIMINO REMISIONES ###################
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 	
}  
############################ FUNCION ELIMINAR ORDENES MEDICAS ###########################

################################ FUNCION BUSQUEDA ORDENES MEDICAS POR FECHAS ################################
public function BuscarOrdenesMedicasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.procedimiento, 
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ordenesmedicas 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ordenesmedicas.codsucursal = ?
	AND ordenesmedicas.codmedico = ?
	AND DATE_FORMAT(ordenesmedicas.fechaorden,'%Y-%m-%d') BETWEEN ? AND ?
	AND ordenesmedicas.modulo = ?
	ORDER BY ordenesmedicas.fechaorden DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.procedimiento, 
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ordenesmedicas 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ordenesmedicas.codsucursal = ? 
	AND DATE_FORMAT(ordenesmedicas.fechaorden,'%Y-%m-%d') BETWEEN ? AND ?
	AND ordenesmedicas.modulo = ?
	ORDER BY ordenesmedicas.fechaorden DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA ORDENES MEDICAS POR FECHAS ################################

################################ FUNCION BUSQUEDA ORDENES MEDICAS POR MEDICO ################################
public function BuscarOrdenesMedicasxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.procedimiento, 
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ordenesmedicas 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ordenesmedicas.codsucursal = ?
	AND ordenesmedicas.codmedico = ? 
	AND DATE_FORMAT(ordenesmedicas.fechaorden,'%Y-%m-%d') BETWEEN ? AND ? 
	AND ordenesmedicas.modulo = ?
	ORDER BY ordenesmedicas.fechaorden DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->bindValue(5, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA ORDENES MEDICAS POR MEDICO ################################

################################ FUNCION BUSQUEDA ORDENES MEDICAS POR PACIENTE ################################
public function BuscarOrdenesMedicasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.procedimiento, 
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ordenesmedicas 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ordenesmedicas.codsucursal = ?
	AND ordenesmedicas.codmedico = ?
	AND ordenesmedicas.codpaciente = ?
	AND ordenesmedicas.modulo = ?
	ORDER BY ordenesmedicas.fechaorden DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(4, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	ordenesmedicas.idorden,
	ordenesmedicas.codorden,
	ordenesmedicas.nrodocumento,  
	ordenesmedicas.codcita,
	ordenesmedicas.codsucursal,
	ordenesmedicas.codmedico, 
	ordenesmedicas.procedimiento, 
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	ordenesmedicas.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ordenesmedicas 
	LEFT JOIN sucursales ON ordenesmedicas.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ordenesmedicas.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ordenesmedicas.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ordenesmedicas.codsucursal = ?  
	AND ordenesmedicas.codpaciente = ?
	AND ordenesmedicas.modulo = ?
	ORDER BY ordenesmedicas.fechaorden DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->bindValue(3, trim(decrypt($_GET['url'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA ORDENES MEDICAS POR PACIENTE ################################

##################################### CLASE ORDENES MEDICAS ########################################
























##################################### CLASE FORMULAS TERAPIAS ########################################

############################# FUNCION REGISTRAR FORMULAS TERAPIAS ##############################
public function RegistrarFormulasTerapias()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}	

	################ CREO CODIGO DE FORMULA DE TERAPIA ####################
    $sql = "SELECT codformula FROM formulasterapias 
    ORDER BY idformula DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$formula=$row["codformula"];

    }
    if(empty($formula))
    {
    	$codformula = "01";

    } else {

    	$num = substr($formula, 0);
    	$dig = $num + 1;
    	$codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
    	$codformula = $codigofinal;
    }
	################ CREO CODIGO DE FORMULA DE TERAPIA ###############

	################ CREO DOCUMENTO DE FORMULA DE TERAPIA ####################
    $sql = "SELECT nrodocumento FROM formulasterapias 
    WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
    ORDER BY idformula DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$documento=$row["nrodocumento"];

    }
    if(empty($documento))
    {
    	$nrodocumento = "01";

    } else {

    	$num = substr($documento, 0);
    	$digitos = $num + 1;
    	$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
    	$nrodocumento = $numfinal;
    }
	################ CREO DOCUMENTO DE FORMULA DE TERAPIA ###############
 
    $fecha_hora = date("Y-m-d H:i:s");

    ############################# REGISTRO DE FORMULA DE TERAPIA #############################
    $query = "INSERT INTO formulasterapias values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $codformula);
	$stmt->bindParam(2, $nrodocumento);
	$stmt->bindParam(3, $codcita);
	$stmt->bindParam(4, $codsucursal);
	$stmt->bindParam(5, $codmedico);
	$stmt->bindParam(6, $codpaciente);
	$stmt->bindParam(7, $terapiasrespiratorias);
	$stmt->bindParam(8, $terapiasfisicas);
	$stmt->bindParam(9, $micronebulizaciones);
	$stmt->bindParam(10, $fechaformula);
	$stmt->bindParam(11, $codigo);

	$codcita = limpiar(decrypt($_POST["codcita"]));
	$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
	$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
	$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	$terapiasrespiratorias = limpiar(isset($_POST['terapiasrespiratorias']) ? $_POST["terapiasrespiratorias"] : "0");
	$terapiasfisicas = limpiar(isset($_POST['terapiasfisicas']) ? $_POST["terapiasfisicas"] : "0");
	$micronebulizaciones = limpiar(isset($_POST['micronebulizaciones']) ? $_POST["micronebulizaciones"] : "0");
	$fechaformula = $fecha_hora;
    $codigo = limpiar($_SESSION["codigo"]);
	$stmt->execute();
	############################# REGISTRO DE FORMULA DE TERAPIA #############################

	################# ACTUALIZO EL STATUS DE CITA ##############
	$sql = " UPDATE citasmedicas set "
		  ." statuscita = ? "
		  ." WHERE "
		  ." codcita = ?;
		   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $statuscita);
	$stmt->bindParam(2, $codcita);
		
	$statuscita = limpiar('1');
	$codcita = limpiar(decrypt($_POST["codcita"]));
	$stmt->execute();
	################# ACTUALIZO EL STATUS DE CITA ##############
	
    echo "<span class='fa fa-check-square-o'></span> LA FÓRMULA DE TERAPIAS HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codformula)."&tipo=".encrypt("CONSTANCIA_FORMULATERAPIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Formula Terapia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR FORMULA DE TERAPIA</strong></a>";
    exit;

}
############################# FUNCION REGISTRAR FORMULAS TERAPIAS ##############################

############################ FUNCION LISTAR FORMULAS TERAPIAS #############################
public function ListarFormulasTerapias()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.codpaciente, 
	formulasterapias.terapiasrespiratorias,
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasterapias.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND formulasterapias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.codpaciente, 
	formulasterapias.terapiasrespiratorias,
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR FORMULAS TERAPIAS #############################

########################### FUNCION ID FORMULAS TERAPIAS ###############################
public function FormulasTerapiasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.codpaciente, 
	formulasterapias.terapiasrespiratorias,
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE formulasterapias.codformula = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID FORMULAS TERAPIAS ###############################

########################## FUNCION ACTUALIZAR FORMULAS TERAPIAS #######################
public function ActualizarFormulasTerapias()
{
	self::SetNames();
	if(empty($_POST["codformula"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	############################# ACTUALIZO FORMULA DE TERAPIA #############################
	$sql = " UPDATE formulasterapias set "
	  ." terapiasrespiratorias = ?, "
	  ." terapiasfisicas = ?, "
	  ." micronebulizaciones = ? "
	  ." WHERE "
	  ." codformula = ?;
	   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $terapiasrespiratorias);
	$stmt->bindParam(2, $terapiasfisicas);
	$stmt->bindParam(3, $micronebulizaciones);
	$stmt->bindParam(4, $codformula);
					
	$terapiasrespiratorias = limpiar(isset($_POST['terapiasrespiratorias']) ? $_POST["terapiasrespiratorias"] : "0");
	$terapiasfisicas = limpiar(isset($_POST['terapiasfisicas']) ? $_POST["terapiasfisicas"] : "0");
	$micronebulizaciones = limpiar(isset($_POST['micronebulizaciones']) ? $_POST["micronebulizaciones"] : "0");
	$codformula = limpiar(decrypt($_POST["codformula"]));
    $stmt->execute();
	############################# ACTUALIZO FORMULA DE TERAPIA #############################

	echo "<span class='fa fa-check-square-o'></span> LA FÓRMULA DE TERAPIA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codformula)."&tipo=".encrypt("CONSTANCIA_FORMULATERAPIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Formula Terapia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR FORMULA DE TERAPIA</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR FORMULAS TERAPIAS #######################

############################ FUNCION ELIMINAR FORMULAS TERAPIAS ###########################
public function EliminarFormulasTerapias()
{
	if($_SESSION['acceso'] == "administrador") {

		################### ELIMINO FORMULAS TERAPIAS ###################
		$sql = "DELETE FROM formulasterapias WHERE codformula = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codformula);
		$codformula = decrypt($_GET["codformula"]);
		$stmt->execute();
		################### ELIMINO FORMULAS TERAPIA ###################
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 	
}  
############################ FUNCION ELIMINAR FORMULAS TERAPIAS ###########################

################################ FUNCION BUSQUEDA FORMULAS TERAPIAS POR FECHAS ################################
public function BuscarFormulasTerapiasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.terapiasrespiratorias, 
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasterapias.codsucursal = ?
	AND formulasterapias.codmedico = ?
	AND DATE_FORMAT(formulasterapias.fechaformula,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY formulasterapias.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.terapiasrespiratorias, 
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasterapias.codsucursal = ? 
	AND DATE_FORMAT(formulasterapias.fechaformula,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY formulasterapias.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA FORMULAS TERAPIAS POR FECHAS ################################

################################ FUNCION BUSQUEDA FORMULAS TERAPIAS POR MEDICO ################################
public function BuscarFormulasTerapiasxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.terapiasrespiratorias, 
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasterapias.codsucursal = ?
	AND formulasterapias.codmedico = ? 
	AND DATE_FORMAT(formulasterapias.fechaformula,'%Y-%m-%d') BETWEEN ? AND ? 
	ORDER BY formulasterapias.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA FORMULAS TERAPIAS POR MEDICO ################################

################################ FUNCION BUSQUEDA FORMULAS TERAPIAS POR PACIENTE ################################
public function BuscarFormulasTerapiasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.terapiasrespiratorias, 
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasterapias.codsucursal = ?
	AND formulasterapias.codmedico = ?
	AND formulasterapias.codpaciente = ?
	ORDER BY formulasterapias.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	formulasterapias.idformula,
	formulasterapias.codformula,
	formulasterapias.nrodocumento,  
	formulasterapias.codcita,
	formulasterapias.codsucursal,
	formulasterapias.codmedico, 
	formulasterapias.terapiasrespiratorias, 
	formulasterapias.terapiasfisicas,
	formulasterapias.micronebulizaciones,
	formulasterapias.fechaformula,
	formulasterapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM formulasterapias 
	LEFT JOIN sucursales ON formulasterapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON formulasterapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON formulasterapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE formulasterapias.codsucursal = ?  
	AND formulasterapias.codpaciente = ?
	ORDER BY formulasterapias.fechaformula DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA FORMULAS TERAPIAS POR PACIENTE ################################

##################################### CLASE FORMULAS TERAPIAS ########################################




















##################################### CLASE SOLICITUD EXAMENES ########################################

############################# FUNCION REGISTRAR SOLICITUD EXAMENES ##############################
public function RegistrarSolicitudExamenes()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}	

	################ CREO CODIGO DE SOLICITUD EXAMEN ####################
    $sql = "SELECT codexamen FROM solicitudexamenes 
    ORDER BY idexamen DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$formula=$row["codexamen"];

    }
    if(empty($formula))
    {
    	$codexamen = "01";

    } else {

    	$num = substr($formula, 0);
    	$dig = $num + 1;
    	$codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
    	$codexamen = $codigofinal;
    }
	################ CREO CODIGO DE SOLICITUD EXAMEN ###############

	################ CREO DOCUMENTO DE SOLICITUD EXAMEN ####################
    $sql = "SELECT nrodocumento FROM solicitudexamenes 
    WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
    ORDER BY idexamen DESC LIMIT 1";
    foreach ($this->dbh->query($sql) as $row){

    	$documento=$row["nrodocumento"];

    }
    if(empty($documento))
    {
    	$nrodocumento = "01";

    } else {

    	$num = substr($documento, 0);
    	$digitos = $num + 1;
    	$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
    	$nrodocumento = $numfinal;
    }
	################ CREO DOCUMENTO DE SOLICITUD EXAMEN ###############
 
    $fecha_hora = date("Y-m-d H:i:s");

    ############################# REGISTRO DE SOLICITUD EXAMEN #############################
    $query = "INSERT INTO solicitudexamenes values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $codexamen);
	$stmt->bindParam(2, $nrodocumento);
	$stmt->bindParam(3, $codcita);
	$stmt->bindParam(4, $codsucursal);
	$stmt->bindParam(5, $codmedico);
	$stmt->bindParam(6, $codpaciente);
	$stmt->bindParam(7, $cuadrohepatico);
	$stmt->bindParam(8, $hematocrito);
	$stmt->bindParam(9, $hemoglobina);
	$stmt->bindParam(10, $vsg);
	$stmt->bindParam(11, $esp);
	$stmt->bindParam(12, $gotagruesa);
	$stmt->bindParam(13, $factorrh);
	$stmt->bindParam(14, $glicemia);
	$stmt->bindParam(15, $colesteroltotal);
	$stmt->bindParam(16, $colesterolhdl);
	$stmt->bindParam(17, $colesterolldl);
	$stmt->bindParam(18, $trigliceridos);
	$stmt->bindParam(19, $creatinina);
	$stmt->bindParam(20, $bun);
	$stmt->bindParam(21, $urea);
	$stmt->bindParam(22, $acidourico);
	$stmt->bindParam(23, $gliecemiapre);
	$stmt->bindParam(24, $parcialorina);
	$stmt->bindParam(25, $materiafecal);
	$stmt->bindParam(26, $basiloscopia);
	$stmt->bindParam(27, $koh);
	$stmt->bindParam(28, $flujovaginal);
	$stmt->bindParam(29, $embarazo);
	$stmt->bindParam(30, $serologia);
	$stmt->bindParam(31, $otros);
	$stmt->bindParam(32, $idcie);
	$stmt->bindParam(33, $fechasolicitud);
	$stmt->bindParam(34, $codigo);

	$codcita = limpiar(decrypt($_POST["codcita"]));
	$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
	$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
	$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	$cuadrohepatico = limpiar(isset($_POST['cuadrohepatico']) ? $_POST["cuadrohepatico"] : "");
	$hematocrito = limpiar(isset($_POST['hematocrito']) ? $_POST["hematocrito"] : "");
	$hemoglobina = limpiar(isset($_POST['hemoglobina']) ? $_POST["hemoglobina"] : "");
	$vsg = limpiar(isset($_POST['vsg']) ? $_POST["vsg"] : "");
	$esp = limpiar(isset($_POST['esp']) ? $_POST["esp"] : "");
	$gotagruesa = limpiar(isset($_POST['gotagruesa']) ? $_POST["gotagruesa"] : "");
	$factorrh = limpiar(isset($_POST['factorrh']) ? $_POST["factorrh"] : "");
	$glicemia = limpiar(isset($_POST['glicemia']) ? $_POST["glicemia"] : "");
    $colesteroltotal = limpiar(isset($_POST['colesteroltotal']) ? $_POST["colesteroltotal"] : "");
    $colesterolhdl = limpiar(isset($_POST['colesterolhdl']) ? $_POST["colesterolhdl"] : "");
    $colesterolldl = limpiar(isset($_POST['colesterolldl']) ? $_POST["colesterolldl"] : "");
    $trigliceridos = limpiar(isset($_POST['trigliceridos']) ? $_POST["trigliceridos"] : "");
	$creatinina = limpiar(isset($_POST['creatinina']) ? $_POST["creatinina"] : "");
	$bun = limpiar(isset($_POST['bun']) ? $_POST["bun"] : "");
	$urea = limpiar(isset($_POST['urea']) ? $_POST["urea"] : "");
	$acidourico = limpiar(isset($_POST['acidourico']) ? $_POST["acidourico"] : "");
	$gliecemiapre = limpiar(isset($_POST['gliecemiapre']) ? $_POST["gliecemiapre"] : "");
	$parcialorina = limpiar(isset($_POST['parcialorina']) ? $_POST["parcialorina"] : "");
	$materiafecal = limpiar(isset($_POST['materiafecal']) ? $_POST["materiafecal"] : "");
	$basiloscopia = limpiar(isset($_POST['basiloscopia']) ? $_POST["basiloscopia"] : "");
	$koh = limpiar(isset($_POST['koh']) ? $_POST["koh"] : "");
	$flujovaginal = limpiar(isset($_POST['flujovaginal']) ? $_POST["flujovaginal"] : "");
	$embarazo = limpiar(isset($_POST['embarazo']) ? $_POST["embarazo"] : "");
	$serologia = limpiar(isset($_POST['serologia']) ? $_POST["serologia"] : "");
	$otros = limpiar(isset($_POST['otros']) ? $_POST["otros"] : "");
	$idcie = limpiar($_POST["idcie"]);
	$fechasolicitud = $fecha_hora;
    $codigo = limpiar($_SESSION["codigo"]);
	$stmt->execute();
	############################# REGISTRO DE SOLICITUD EXAMEN #############################

	################# ACTUALIZO EL STATUS DE CITA ##############
	$sql = " UPDATE citasmedicas set "
		  ." statuscita = ? "
		  ." WHERE "
		  ." codcita = ?;
		   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $statuscita);
	$stmt->bindParam(2, $codcita);
		
	$statuscita = limpiar('1');
	$codcita = limpiar(decrypt($_POST["codcita"]));
	$stmt->execute();
	################# ACTUALIZO EL STATUS DE CITA ##############
	
    echo "<span class='fa fa-check-square-o'></span> LA SOLICITUD EXÁMENES HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codexamen)."&tipo=".encrypt("CONSTANCIA_SOLICITUDEXAMEN")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Solicitud de Examenes' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR SOLICITUD EXAMENES</strong></a>";
    exit;

}
############################# FUNCION REGISTRAR SOLICITUD EXAMENES ##############################

############################ FUNCION LISTAR SOLICITUD EXAMENES #############################
public function ListarSolicitudExamenes()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM solicitudexamenes
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie 
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE solicitudexamenes.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND solicitudexamenes.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM solicitudexamenes
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie 
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR SOLICITUD EXAMENES #############################

########################### FUNCION ID SOLICITUD EXAMENES ###############################
public function SolicitudExamenesPorId()
{
	self::SetNames();
	$sql = "SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM solicitudexamenes 
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE solicitudexamenes.codexamen = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID ORDENES MEDICAS ###############################

########################## FUNCION ACTUALIZAR SOLICITUD EXAMENES #######################
public function ActualizarSolicitudExamenes()
{
	self::SetNames();
	if(empty($_POST["codexamen"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	############################# ACTUALIZO SOLICITUD EXAMEN #############################
	$sql = " UPDATE solicitudexamenes set "
	  ." cuadrohepatico = ?, "
	  ." hematocrito = ?, "
	  ." hemoglobina = ?, "
	  ." vsg = ?, "
	  ." esp = ?, "
	  ." gotagruesa = ?, "
	  ." factorrh = ?, "
	  ." glicemia = ?, "
	  ." colesteroltotal = ?, "
	  ." colesterolhdl = ?, "
	  ." colesterolldl = ?, "
	  ." trigliceridos = ?, "
	  ." creatinina = ?, "
	  ." bun = ?, "
	  ." urea = ?, "
	  ." acidourico = ?, "
	  ." gliecemiapre = ?, "
	  ." parcialorina = ?, "
	  ." materiafecal = ?, "
	  ." basiloscopia = ?, "
	  ." koh = ?, "
	  ." flujovaginal = ?, "
	  ." embarazo = ?, "
	  ." serologia = ?, "
	  ." otros = ?, "
	  ." idcie = ? "
	  ." WHERE "
	  ." codexamen = ?;
	   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $cuadrohepatico);
	$stmt->bindParam(2, $hematocrito);
	$stmt->bindParam(3, $hemoglobina);
	$stmt->bindParam(4, $vsg);
	$stmt->bindParam(5, $esp);
	$stmt->bindParam(6, $gotagruesa);
	$stmt->bindParam(7, $factorrh);
	$stmt->bindParam(8, $glicemia);
	$stmt->bindParam(9, $colesteroltotal);
	$stmt->bindParam(10, $colesterolhdl);
	$stmt->bindParam(11, $colesterolldl);
	$stmt->bindParam(12, $trigliceridos);
	$stmt->bindParam(13, $creatinina);
	$stmt->bindParam(14, $bun);
	$stmt->bindParam(15, $urea);
	$stmt->bindParam(16, $acidourico);
	$stmt->bindParam(17, $gliecemiapre);
	$stmt->bindParam(18, $parcialorina);
	$stmt->bindParam(19, $materiafecal);
	$stmt->bindParam(20, $basiloscopia);
	$stmt->bindParam(21, $koh);
	$stmt->bindParam(22, $flujovaginal);
	$stmt->bindParam(23, $embarazo);
	$stmt->bindParam(24, $serologia);
	$stmt->bindParam(25, $otros);
	$stmt->bindParam(26, $idcie);
	$stmt->bindParam(27, $codexamen);

	$cuadrohepatico = limpiar(isset($_POST['cuadrohepatico']) ? $_POST["cuadrohepatico"] : "");
	$hematocrito = limpiar(isset($_POST['hematocrito']) ? $_POST["hematocrito"] : "");
	$hemoglobina = limpiar(isset($_POST['hemoglobina']) ? $_POST["hemoglobina"] : "");
	$vsg = limpiar(isset($_POST['vsg']) ? $_POST["vsg"] : "");
	$esp = limpiar(isset($_POST['esp']) ? $_POST["esp"] : "");
	$gotagruesa = limpiar(isset($_POST['gotagruesa']) ? $_POST["gotagruesa"] : "");
	$factorrh = limpiar(isset($_POST['factorrh']) ? $_POST["factorrh"] : "");
	$glicemia = limpiar(isset($_POST['glicemia']) ? $_POST["glicemia"] : "");
    $colesteroltotal = limpiar(isset($_POST['colesteroltotal']) ? $_POST["colesteroltotal"] : "");
    $colesterolhdl = limpiar(isset($_POST['colesterolhdl']) ? $_POST["colesterolhdl"] : "");
    $colesterolldl = limpiar(isset($_POST['colesterolldl']) ? $_POST["colesterolldl"] : "");
    $trigliceridos = limpiar(isset($_POST['trigliceridos']) ? $_POST["trigliceridos"] : "");
	$creatinina = limpiar(isset($_POST['creatinina']) ? $_POST["creatinina"] : "");
	$bun = limpiar(isset($_POST['bun']) ? $_POST["bun"] : "");
	$urea = limpiar(isset($_POST['urea']) ? $_POST["urea"] : "");
	$acidourico = limpiar(isset($_POST['acidourico']) ? $_POST["acidourico"] : "");
	$gliecemiapre = limpiar(isset($_POST['gliecemiapre']) ? $_POST["gliecemiapre"] : "");
	$parcialorina = limpiar(isset($_POST['parcialorina']) ? $_POST["parcialorina"] : "");
	$materiafecal = limpiar(isset($_POST['materiafecal']) ? $_POST["materiafecal"] : "");
	$basiloscopia = limpiar(isset($_POST['basiloscopia']) ? $_POST["basiloscopia"] : "");
	$koh = limpiar(isset($_POST['koh']) ? $_POST["koh"] : "");
	$flujovaginal = limpiar(isset($_POST['flujovaginal']) ? $_POST["flujovaginal"] : "");
	$embarazo = limpiar(isset($_POST['embarazo']) ? $_POST["embarazo"] : "");
	$serologia = limpiar(isset($_POST['serologia']) ? $_POST["serologia"] : "");
	$otros = limpiar(isset($_POST['otros']) ? $_POST["otros"] : "");
	$idcie = limpiar($_POST["idcie"]);
	$codexamen = limpiar(decrypt($_POST["codexamen"]));
    $stmt->execute();
	############################# ACTUALIZO SOLICITUD EXAMEN #############################

	echo "<span class='fa fa-check-square-o'></span> LA SOLICITUD EXÁMENES HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codexamen)."&tipo=".encrypt("CONSTANCIA_SOLICITUDEXAMEN")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Solicitud de Examenes' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR SOLICITUD EXAMENES</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR SOLICITUD EXAMENES #######################

############################ FUNCION ELIMINAR SOLICITUD EXAMENES ###########################
public function EliminarSolicitudExamenes()
{
	if($_SESSION['acceso'] == "administrador") {

		################### ELIMINO SOLICITUD EXAMENES ###################
		$sql = "DELETE FROM solicitudexamenes WHERE codexamen = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codexamen);
		$codexamen = decrypt($_GET["codexamen"]);
		$stmt->execute();
		################### ELIMINO SOLICITUD EXAMENES ###################
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 	
}  
############################ FUNCION ELIMINAR SOLICITUD EXAMENES ###########################

################################ FUNCION BUSQUEDA SOLICITUD EXAMENES POR FECHAS ################################
public function BuscarSolicitudExamenesxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM solicitudexamenes 
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE solicitudexamenes.codsucursal = ?
	AND solicitudexamenes.codmedico = ?
	AND DATE_FORMAT(solicitudexamenes.fechasolicitud,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY solicitudexamenes.fechasolicitud DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM solicitudexamenes
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie 
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE solicitudexamenes.codsucursal = ? 
	AND DATE_FORMAT(solicitudexamenes.fechasolicitud,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY solicitudexamenes.fechasolicitud DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA SOLICITUD EXAMENES POR FECHAS ################################

################################ FUNCION BUSQUEDA SOLICITUD EXAMENES POR MEDICO ################################
public function BuscarSolicitudExamenesxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM solicitudexamenes
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie 
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE solicitudexamenes.codsucursal = ?
	AND solicitudexamenes.codmedico = ? 
	AND DATE_FORMAT(solicitudexamenes.fechasolicitud,'%Y-%m-%d') BETWEEN ? AND ? 
	ORDER BY solicitudexamenes.fechasolicitud DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA SOLICITUD EXAMENES POR MEDICO ################################

################################ FUNCION BUSQUEDA SOLICITUD EXAMENES POR PACIENTE ################################
public function BuscarSolicitudExamenesxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM solicitudexamenes
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie 
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE solicitudexamenes.codsucursal = ?
	AND solicitudexamenes.codmedico = ?
	AND solicitudexamenes.codpaciente = ?
	ORDER BY solicitudexamenes.fechasolicitud DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	solicitudexamenes.idexamen,
	solicitudexamenes.codexamen,
	solicitudexamenes.nrodocumento,  
	solicitudexamenes.codcita,
	solicitudexamenes.codsucursal,
	solicitudexamenes.codmedico, 
	solicitudexamenes.codpaciente, 
	solicitudexamenes.cuadrohepatico,
	solicitudexamenes.hematocrito,
	solicitudexamenes.hemoglobina,
	solicitudexamenes.vsg,
	solicitudexamenes.esp,
	solicitudexamenes.gotagruesa,
	solicitudexamenes.factorrh,
	solicitudexamenes.glicemia,
	solicitudexamenes.colesteroltotal,
	solicitudexamenes.colesterolhdl,
	solicitudexamenes.colesterolldl,
	solicitudexamenes.trigliceridos,
	solicitudexamenes.creatinina,
	solicitudexamenes.bun,
	solicitudexamenes.urea,
	solicitudexamenes.acidourico,
	solicitudexamenes.gliecemiapre,
	solicitudexamenes.parcialorina,
	solicitudexamenes.materiafecal,
	solicitudexamenes.basiloscopia,
	solicitudexamenes.koh,
	solicitudexamenes.flujovaginal,
	solicitudexamenes.embarazo,
	solicitudexamenes.serologia,
	solicitudexamenes.otros,
	solicitudexamenes.idcie,
	solicitudexamenes.fechasolicitud,
	solicitudexamenes.codigo,
	cie10.codcie,
	cie10.nombrecie,
	cie10.descripcioncie,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM solicitudexamenes 
	LEFT JOIN cie10 ON solicitudexamenes.idcie = cie10.idcie
	LEFT JOIN sucursales ON solicitudexamenes.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON solicitudexamenes.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON solicitudexamenes.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE solicitudexamenes.codsucursal = ?  
	AND solicitudexamenes.codpaciente = ?
	ORDER BY solicitudexamenes.fechasolicitud DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA SOLICITUD EXAMENES POR PACIENTE ################################

##################################### CLASE SOLICITUD EXAMENES ########################################


















##################################### CLASE CRIOCAUTERIZACIONES ########################################

############################# FUNCION REGISTRAR CRIOCAUTERIZACIONES ##############################
public function RegistrarCriocauterizaciones()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
	$presuntivo = $_POST['presuntivo'];
    $repeated = array_filter(array_count_values($presuntivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "2";
		exit;
    }
    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
		
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############
    $definitivo = $_POST['definitivo'];
    $repeated = array_filter(array_count_values($definitivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "4";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "5";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############

	################ CREO CODIGO DE CRIOCAUTERIZACION ####################
	$sql = "SELECT codcriocauterizacion FROM criocauterizaciones 
	ORDER BY idcriocauterizacion DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$cauterizacion=$row["codcriocauterizacion"];

	}
	if(empty($cauterizacion))
	{
		$codcriocauterizacion = "C1";

	} else {

		$resto = substr($cauterizacion, 0, 1);
		$coun = strlen($resto);
		$num     = substr($cauterizacion, $coun);
		$codigofinal     = $num + 1;
		$codcriocauterizacion = "C".$codigofinal;
	}
    ################ CREO CODIGO DE CRIOCAUTERIZACION ###############

    ################ CREO DOCUMENTO DE CRIOCAUTERIZACION ####################
	$sql = "SELECT nrodocumento FROM criocauterizaciones 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idcriocauterizacion DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE CRIOCAUTERIZACION ###############

    $fecha_hora = date("Y-m-d H:i:s");

		############################# REGISTRO DE CRIOCAUTERIZACION #############################
		$query = "INSERT INTO criocauterizaciones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codcriocauterizacion);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $codprocedimiento);
		$stmt->bindParam(8, $procedimiento);
		$stmt->bindParam(9, $motivoconsulta);
		$stmt->bindParam(10, $atenproced);
		$stmt->bindParam(11, $dxpresuntivo);
		$stmt->bindParam(12, $dxdefinitivo);
		$stmt->bindParam(13, $origenenfermedad);
		$stmt->bindParam(14, $tratamiento);
		$stmt->bindParam(15, $fechacriocauterizacion);
		$stmt->bindParam(16, $codigo);
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$codprocedimiento = limpiar("0");
		$procedimiento = limpiar("0");
		$motivoconsulta = limpiar($_POST['motivoconsulta']);
        $atenproced = limpiar(isset($_POST['atenproced']) ? $_POST['atenproced'] : "");
		
		################# DX PRESUNTIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciepresuntivo = $_POST["idciepresuntivo"];
	    $presuntivo = $_POST["presuntivo"];
	    $observacionpresuntivo = $_POST["observacionpresuntivo"];
	    for($cont; $cont<count($_POST["presuntivo"]); $cont++):
		$arrayBD[] = trim($idciepresuntivo[$cont]."/".$presuntivo[$cont]."/".$observacionpresuntivo[$cont]."\n");
	    endfor;
		$dxpresuntivo = implode(",,",$arrayBD);
		################# DX PRESUNTIVO #################
		
		################# DX DEFINITIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciedefinitivo = $_POST["idciedefinitivo"];
	    $definitivo = $_POST["definitivo"];
	    $observaciondefinitivo = $_POST["observaciondefinitivo"];
	    for($cont; $cont<count($_POST["definitivo"]); $cont++):
		$arrayBD[] = trim($idciedefinitivo[$cont]."/".$definitivo[$cont]."/".$observaciondefinitivo[$cont]."\n");
	    endfor;
		$dxdefinitivo = implode(",,",$arrayBD);
        ################# DX DEFINITIVO #################
		
		$origenenfermedad = limpiar($_POST["origenenfermedad"]);
		$tratamiento = limpiar($_POST["tratamiento"]);
		$fechacriocauterizacion = $fecha_hora;
		$codigo = limpiar($_SESSION["codigo"]);
		$stmt->execute();
		############################# REGISTRO DE CRIOCAUTERIZACION #############################

		############################# REGISTRO DE FORMULA MEDICA #############################
		if (array_filter($_POST['idcieformula'])) {

			################ CREO CODIGO DE FORMULA MEDICA ####################
			$sql = "SELECT codformulam FROM formulasmedicas 
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$formulam=$row["codformulam"];

			}
			if(empty($formulam))
			{
				$codformulam = "F1";

			} else {

				$resto = substr($formulam, 0, 1);
				$coun = strlen($resto);
				$num     = substr($formulam, $coun);
				$codigofinal     = $num + 1;
				$codformulam = "F".$codigofinal;
			}
            ################ CREO CODIGO DE FORMULA MEDICA ###############

            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
			$sql = "SELECT nrodocumento FROM formulasmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idformulam DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docformula=$row["nrodocumento"];

			}
			if(empty($docformula))
			{
				$nroformula = "01";

			} else {

				$num = substr($docformula, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroformula = $numfinal;
			}
            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

            $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codformulam);
			$stmt->bindParam(2, $nroformula);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $formulamedica);
			$stmt->bindParam(10, $fechaformula);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codcriocauterizacion);
			$procedimiento = limpiar("CRIOCAUTERIZACION");

			################# DX FORMULAS MEDICAS #################
			$cont = 0;
			$arrayFormula = array();
			$idcieformula = $_POST["idcieformula"];
			$formula = $_POST["formula"];
			$observacionformula = $_POST["observacionformula"];
			for($cont; $cont<count($_POST["formula"]); $cont++):
				$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
			endfor;
			$formulamedica = implode(",,",$arrayFormula);
            ################# DX FORMULAS MEDICAS #################

			$fechaformula = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE FORMULA MEDICA ############################# 

		############################# REGISTRO DE ORDENES MEDICA #############################
		if (array_filter($_POST['idcieorden'])) {

			################ CREO CODIGO DE ORDENES MEDICAS ####################
			$sql = "SELECT codorden FROM ordenesmedicas 
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$ordenm=$row["codorden"];

			}
			if(empty($ordenm))
			{
				$codorden = "O1";

			} else {

				$resto = substr($ordenm, 0, 1);
				$coun = strlen($resto);
				$num     = substr($ordenm, $coun);
				$codigofinal     = $num + 1;
				$codorden = "O".$codigofinal;
			}
            ################ CREO CODIGO DE ORDENES MEDICAS ###############

            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
			$sql = "SELECT nrodocumento FROM ordenesmedicas 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idorden DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docorden=$row["nrodocumento"];

			}
			if(empty($docorden))
			{
				$nroorden = "01";

			} else {

				$num = substr($docorden, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroorden = $numfinal;
			}
            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

			$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codorden);
			$stmt->bindParam(2, $nroorden);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $ordenmedica);
			$stmt->bindParam(10, $fechaorden);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codcriocauterizacion);
			$procedimiento = limpiar("CRIOCAUTERIZACION");

			################# DX ORDENES MEDICAS #################
			$cont = 0;
			$arrayOrden = array();
			$idcieorden = $_POST["idcieorden"];
			$ordenes = $_POST["ordenes"];
			$observacionorden = $_POST["observacionorden"];
			for($cont; $cont<count($_POST["ordenes"]); $cont++):
				$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
			endfor;
			$ordenmedica = implode(",,",$arrayOrden);
            ################# DX ORDENES MEDICAS #################

			$fechaorden = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE ORDENES MEDICA #############################

		############################# REGISTRO DE REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) { 

			################ CREO CODIGO DE REMISION ####################
			$sql = "SELECT codremision FROM remisiones 
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$remito=$row["codremision"];

			}
			if(empty($remito))
			{
				$codremision = "R1";

			} else {

				$resto = substr($remito, 0, 1);
				$coun = strlen($resto);
				$num     = substr($remito, $coun);
				$codigofinal     = $num + 1;
				$codremision = "R".$codigofinal;
			}
            ################ CREO CODIGO DE REMISION ###############

            ################ CREO DOCUMENTO DE REMISION ####################
			$sql = "SELECT nrodocumento FROM remisiones 
			WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
			ORDER BY idremision DESC LIMIT 1";
			foreach ($this->dbh->query($sql) as $row){

				$docremision=$row["nrodocumento"];

			}
			if(empty($docremision))
			{
				$nroremito = "01";

			} else {

				$num = substr($docremision, 0);
				$digitos = $num + 1;
				$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
				$nroremito = $numfinal;
			}
            ################ CREO DOCUMENTO DE REMISION ###############

            $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codremision);
			$stmt->bindParam(2, $nroremito);
			$stmt->bindParam(3, $codcita);
			$stmt->bindParam(4, $codsucursal);
			$stmt->bindParam(5, $codmedico);
			$stmt->bindParam(6, $codpaciente);
			$stmt->bindParam(7, $codprocedimiento);
			$stmt->bindParam(8, $procedimiento);
			$stmt->bindParam(9, $remision);
			$stmt->bindParam(10, $fecharemision);
			$stmt->bindParam(11, $codigo);
			$stmt->bindParam(12, $modulo);

			$codcita = limpiar(decrypt($_POST["codcita"]));
			$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
			$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
			$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			$codprocedimiento = limpiar($codcriocauterizacion);
			$procedimiento = limpiar("CRIOCAUTERIZACION");
			$remision = limpiar($_POST["remision"]);
			$fecharemision = $fecha_hora;
            $codigo = limpiar($_SESSION["codigo"]);
            $modulo = limpiar($_POST['modulo']);
			$stmt->execute();
		}
		############################# REGISTRO DE REMISION ############################# 

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	    echo "<span class='fa fa-check-square-o'></span> LA CRIOCAUTERIZACIÓN HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codcriocauterizacion)."&tipo=".encrypt("CONSTANCIA_CRIOCAUTERIZACION")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Criocauterización' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR CRIOCAUTERIZACIÓN</strong></a>";
	    exit;
}
############################# FUNCION REGISTRAR CRIOCAUTERIZACIONES ##############################

############################ FUNCION LISTAR CRIOCAUTERIZACIONES #############################
public function ListarCriocauterizaciones()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM criocauterizaciones 
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE criocauterizaciones.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND criocauterizaciones.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM criocauterizaciones 
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR CRIOCAUTERIZACIONES #############################

########################### FUNCION ID CRIOCAUTERIZACIONES ###############################
public function CriocauterizacionesPorId()
{
	self::SetNames();
	$sql = "SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	remisiones.remision,
	remisiones.fecharemision,
	formulasmedicas.formulamedica,
	formulasmedicas.fechaformula,
	ordenesmedicas.ordenmedica,
	ordenesmedicas.fechaorden,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM criocauterizaciones 
	LEFT JOIN remisiones ON criocauterizaciones.codcriocauterizacion = remisiones.codprocedimiento 
	LEFT JOIN formulasmedicas ON criocauterizaciones.codcriocauterizacion = formulasmedicas.codprocedimiento 
	LEFT JOIN ordenesmedicas ON criocauterizaciones.codcriocauterizacion = ordenesmedicas.codprocedimiento 
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE criocauterizaciones.codcriocauterizacion = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID CRIOCAUTERIZACIONES ###############################

########################## FUNCION ACTUALIZAR CRIOCAUTERIZACIONES #######################
public function ActualizarCriocauterizaciones()
{
	self::SetNames();
	if(empty($_POST["codcriocauterizacion"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
	$presuntivo = $_POST['presuntivo'];
    $repeated = array_filter(array_count_values($presuntivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "2";
		exit;
    }
    ################# VERIFICO NO EXISTAN PRESUNTIVOS REPETIDOS ##############
		
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############
    $definitivo = $_POST['definitivo'];
    $repeated = array_filter(array_count_values($definitivo), function($count) {
    return $count > 1;
    });

    foreach ($repeated as $key => $value) {
        echo "3";
	    exit;
    }
    ################# VERIFICO NO EXISTAN DEFINITIVOS REPETIDOS ##############	

	################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############
	if (limpiar(isset($_POST['idcieformula']))) { 

	    $formula = $_POST['idcieformula'];
        $repeated = array_filter(array_count_values($formula), function($count) {
        return $count > 1;
        });

         foreach ($repeated as $key => $value) {
            echo "4";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN FORMULAS REPETIDAS ##############    	

    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############
    if (limpiar(isset($_POST['idcieorden']))) {
        
        $orden = $_POST['idcieorden'];
        $repeated = array_filter(array_count_values($orden), function($count) {
        return $count > 1;
        });

        foreach ($repeated as $key => $value) {
            echo "5";
		    exit;
        }
    }
    ################# VERIFICO NO EXISTAN ORDENES REPETIDAS ##############


	    ############################# ACTUALIZO CRIOCAUTERIZACION #############################
	    $sql = " UPDATE criocauterizaciones set "
			." motivoconsulta = ?, "
			." atenproced = ?, "
			." dxpresuntivo = ?, "
			." dxdefinitivo = ?, "
			." origenenfermedad = ?, "
			." tratamiento = ? "
			." WHERE "
			." codcriocauterizacion = ?;
			";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $motivoconsulta);
		$stmt->bindParam(2, $atenproced);
		$stmt->bindParam(3, $dxpresuntivo);
		$stmt->bindParam(4, $dxdefinitivo);
		$stmt->bindParam(5, $origenenfermedad);
		$stmt->bindParam(6, $tratamiento);
		$stmt->bindParam(7, $codcriocauterizacion);
			
		$motivoconsulta = limpiar($_POST['motivoconsulta']);
        $atenproced = limpiar(isset($_POST['atenproced']) ? $_POST['atenproced'] : "");
		
		################# DX PRESUNTIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciepresuntivo = $_POST["idciepresuntivo"];
	    $presuntivo = $_POST["presuntivo"];
	    $observacionpresuntivo = $_POST["observacionpresuntivo"];
	    for($cont; $cont<count($_POST["presuntivo"]); $cont++):
		$arrayBD[] = trim($idciepresuntivo[$cont]."/".$presuntivo[$cont]."/".$observacionpresuntivo[$cont]."\n");
	    endfor;
		$dxpresuntivo = implode(",,",$arrayBD);
		################# DX PRESUNTIVO #################
		
		################# DX DEFINITIVO #################
		$cont = 0;
	    $arrayBD = array();
		$idciedefinitivo = $_POST["idciedefinitivo"];
	    $definitivo = $_POST["definitivo"];
	    $observaciondefinitivo = $_POST["observaciondefinitivo"];
	    for($cont; $cont<count($_POST["definitivo"]); $cont++):
		$arrayBD[] = trim($idciedefinitivo[$cont]."/".$definitivo[$cont]."/".$observaciondefinitivo[$cont]."\n");
	    endfor;
		$dxdefinitivo = implode(",,",$arrayBD);
        ################# DX DEFINITIVO #################
		
		$origenenfermedad = limpiar($_POST["origenenfermedad"]);
		$tratamiento = limpiar($_POST["tratamiento"]);
		$codcriocauterizacion = limpiar(decrypt($_POST['codcriocauterizacion']));
		$stmt->execute();
	    ############################# ACTUALIZO CRIOCAUTERIZACION #############################


	    ############################# ACTUALIZO FORMULA MEDICA #############################
	    if (limpiar(isset($_POST['idcieformula']))) { 

	        $sql = "SELECT * FROM formulasmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST["codcriocauterizacion"])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

			    ################ CREO CODIGO DE FORMULA MEDICA ####################
				$sql = "SELECT codformulam FROM formulasmedicas 
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$formulam=$row["codformulam"];

				}
				if(empty($formulam))
				{
					$codformulam = "F1";

				} else {

					$resto = substr($formulam, 0, 1);
					$coun = strlen($resto);
					$num     = substr($formulam, $coun);
					$codigofinal     = $num + 1;
					$codformulam = "F".$codigofinal;
				}
	            ################ CREO CODIGO DE FORMULA MEDICA ###############

	            ################ CREO DOCUMENTO DE FORMULA MEDICA ####################
				$sql = "SELECT nrodocumento FROM formulasmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idformulam DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docformula=$row["nrodocumento"];

				}
				if(empty($docformula))
				{
					$nroformula = "01";

				} else {

					$num = substr($docformula, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroformula = $numfinal;
				}
	            ################ CREO DOCUMENTO DE FORMULA MEDICA ###############

                $query = "INSERT INTO formulasmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codformulam);
				$stmt->bindParam(2, $nroformula);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $formulamedica);
				$stmt->bindParam(10, $fechaformula);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codcriocauterizacion"]));
				$procedimiento = limpiar("CRIOCAUTERIZACION");
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$fechaformula = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

		    } else {

				$sql = " UPDATE formulasmedicas set "
					  ." formulamedica = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $formulamedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX FORMULAS MEDICAS #################
				$cont = 0;
				$arrayFormula = array();
				$idcieformula = $_POST["idcieformula"];
				$formula = $_POST["formula"];
				$observacionformula = $_POST["observacionformula"];
				for($cont; $cont<count($_POST["formula"]); $cont++):
					$arrayFormula[] = trim($idcieformula[$cont]."/".$formula[$cont]."/".$observacionformula[$cont]."\n");
				endfor;
				$formulamedica = implode(",,",$arrayFormula);
	            ################# DX FORMULAS MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codcriocauterizacion"]));
			    $stmt->execute();
		    }
	    } 
	    ############################# ACTUALIZO FORMULA MEDICA #############################


	    ############################# ACTUALIZO ORDENES MEDICA #############################
	    if (array_filter($_POST['idcieorden'])) {
		
	        $sql = "SELECT * FROM ordenesmedicas WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codcriocauterizacion'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE ORDENES MEDICAS ####################
				$sql = "SELECT codorden FROM ordenesmedicas 
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$ordenm=$row["codorden"];

				}
				if(empty($ordenm))
				{
					$codorden = "O1";

				} else {

					$resto = substr($ordenm, 0, 1);
					$coun = strlen($resto);
					$num     = substr($ordenm, $coun);
					$codigofinal     = $num + 1;
					$codorden = "O".$codigofinal;
				}
	            ################ CREO CODIGO DE ORDENES MEDICAS ###############

	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ####################
				$sql = "SELECT nrodocumento FROM ordenesmedicas 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idorden DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docorden=$row["nrodocumento"];

				}
				if(empty($docorden))
				{
					$nroorden = "01";

				} else {

					$num = substr($docorden, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroorden = $numfinal;
				}
	            ################ CREO DOCUMENTO DE ORDENES MEDICAS ###############

				$query = "INSERT INTO ordenesmedicas values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codorden);
				$stmt->bindParam(2, $nroorden);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $ordenmedica);
				$stmt->bindParam(10, $fechaorden);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
			    $codprocedimiento = limpiar(decrypt($_POST["codcriocauterizacion"]));
				$procedimiento = limpiar("CRIOCAUTERIZACION");

				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$fechaorden = limpiar(date("Y-m-d H:i:s"));
	            $codigo = limpiar($_SESSION["codigo"]);
	            $modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE ordenesmedicas set "
					." ordenmedica = ? "
					." WHERE "
					." codprocedimiento = ?;
					";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $ordenmedica);
				$stmt->bindParam(2, $codprocedimiento);
					
				################# DX ORDENES MEDICAS #################
				$cont = 0;
				$arrayOrden = array();
				$idcieorden = $_POST["idcieorden"];
				$ordenes = $_POST["ordenes"];
				$observacionorden = $_POST["observacionorden"];
				for($cont; $cont<count($_POST["ordenes"]); $cont++):
					$arrayOrden[] = trim($idcieorden[$cont]."/".$ordenes[$cont]."/".$observacionorden[$cont]."\n");
				endfor;
				$ordenmedica = implode(",,",$arrayOrden);
	            ################# DX ORDENES MEDICAS #################

				$codprocedimiento = limpiar(decrypt($_POST["codcriocauterizacion"]));
			    $stmt->execute();
			}
	    }
	    ############################# ACTUALIZO ORDENES MEDICA #############################

	    ############################# ACTUALIZO REMISION #############################
		if (limpiar(isset($_POST['remision']) && !empty($_POST['remision']))) {

			$sql = "SELECT * FROM remisiones WHERE codprocedimiento = ?";
			$stmt = $this->dbh->prepare($sql);
			$stmt->execute(array(decrypt($_POST['codcriocauterizacion'])));
			$num = $stmt->rowCount();
			if($num == 0)
			{

				################ CREO CODIGO DE REMISION ####################
				$sql = "SELECT codremision FROM remisiones 
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$remito=$row["codremision"];

				}
				if(empty($remito))
				{
					$codremision = "R1";

				} else {

					$resto = substr($remito, 0, 1);
					$coun = strlen($resto);
					$num     = substr($remito, $coun);
					$codigofinal     = $num + 1;
					$codremision = "R".$codigofinal;
				}
	            ################ CREO CODIGO DE REMISION ###############

	            ################ CREO DOCUMENTO DE REMISION ####################
				$sql = "SELECT nrodocumento FROM remisiones 
				WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
				ORDER BY idremision DESC LIMIT 1";
				foreach ($this->dbh->query($sql) as $row){

					$docremision=$row["nrodocumento"];

				}
				if(empty($docremision))
				{
					$nroremito = "01";

				} else {

					$num = substr($docremision, 0);
					$digitos = $num + 1;
					$numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
					$nroremito = $numfinal;
				}
	            ################ CREO DOCUMENTO DE REMISION ###############

                $query = "INSERT INTO remisiones values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codremision);
				$stmt->bindParam(2, $nroremito);
				$stmt->bindParam(3, $codcita);
				$stmt->bindParam(4, $codsucursal);
				$stmt->bindParam(5, $codmedico);
				$stmt->bindParam(6, $codpaciente);
				$stmt->bindParam(7, $codprocedimiento);
				$stmt->bindParam(8, $procedimiento);
				$stmt->bindParam(9, $remision);
				$stmt->bindParam(10, $fecharemision);
				$stmt->bindParam(11, $codigo);
				$stmt->bindParam(12, $modulo);

				$codcita = limpiar(decrypt($_POST["codcita"]));
				$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
				$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
				$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
				$codprocedimiento = limpiar(decrypt($_POST["codcriocauterizacion"]));
				$procedimiento = limpiar("CRIOCAUTERIZACION");
				$remision = limpiar($_POST["remision"]);
				$fecharemision = limpiar(date("Y-m-d H:i:s"));
				$codigo = limpiar($_SESSION["codigo"]);
				$modulo = limpiar($_POST['modulo']);
				$stmt->execute();

			} else {

				$sql = " UPDATE remisiones set "
					  ." remision = ? "
					  ." WHERE "
					  ." codprocedimiento = ?;
					   ";
				$stmt = $this->dbh->prepare($sql);
				$stmt->bindParam(1, $remision);
				$stmt->bindParam(2, $codprocedimiento);
					
				$remision = limpiar($_POST["remision"]);
				$codprocedimiento = limpiar(decrypt($_POST['codcriocauterizacion']));
			    $stmt->execute();
		    }
		}
	    ############################# ACTUALIZO REMISION #############################

	echo "<span class='fa fa-check-square-o'></span> LA CRIOCAUTERIZACIÓN HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codcriocauterizacion)."&tipo=".encrypt("CONSTANCIA_CRIOCAUTERIZACION")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Criocauterización' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR CRIOCAUTERIZACIÓN</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR CRIOCAUTERIZACIONES #######################

############################ FUNCION ELIMINAR CRIOCAUTERIZACIONES ###########################
public function EliminarCriocauterizaciones()
{
	if($_SESSION['acceso'] == "administrador") {

	$sql = "SELECT * FROM criocauterizaciones WHERE codcriocauterizacion = ? AND codprocedimiento != 0";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codcriocauterizacion"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		################### ELIMINO CRIOCAUTERIZACION ###################
		$sql = "DELETE FROM criocauterizaciones WHERE codcriocauterizacion = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codcriocauterizacion);
		$codcriocauterizacion = decrypt($_GET["codcriocauterizacion"]);
		$stmt->execute();
		################### ELIMINO CRIOCAUTERIZACION ###################

		################### ELIMINO FORMULAS MEDICA ###################
		$sql = "DELETE FROM formulasmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codcriocauterizacion);
		$codcriocauterizacion = decrypt($_GET["codcriocauterizacion"]);
		$stmt->execute();
		################### ELIMINO FORMULAS MEDICA ###################

		################### ELIMINO ORDENES MEDICA ###################
		$sql = "DELETE FROM ordenesmedicas WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codcriocauterizacion);
		$codcriocauterizacion = decrypt($_GET["codcriocauterizacion"]);
		$stmt->execute();
		################### ELIMINO ORDENES MEDICA ###################

		################### ELIMINO REMISIONES ###################
		$sql = "DELETE FROM remisiones WHERE codprocedimiento = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codcriocauterizacion);
		$codcriocauterizacion = decrypt($_GET["codcriocauterizacion"]);
		$stmt->execute();
		################### ELIMINO REMISIONES ###################
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
}  
############################ FUNCION ELIMINAR CRIOCAUTERIZACIONES ###########################

################################ FUNCION BUSQUEDA CRIOCAUTERIZACIONES POR FECHAS ################################
public function BuscarCriocauterizacionesxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM criocauterizaciones 
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE criocauterizaciones.codsucursal = ?
	AND criocauterizaciones.codmedico = ?
	AND DATE_FORMAT(criocauterizaciones.fechacriocauterizacion,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY criocauterizaciones.fechacriocauterizacion DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM criocauterizaciones
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE criocauterizaciones.codsucursal = ? 
	AND DATE_FORMAT(criocauterizaciones.fechacriocauterizacion,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY criocauterizaciones.fechacriocauterizacion DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA CRIOCAUTERIZACIONES POR FECHAS ################################

################################ FUNCION BUSQUEDA CRIOCAUTERIZACIONES POR MEDICO ################################
public function BuscarCriocauterizacionesxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM criocauterizaciones
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE criocauterizaciones.codsucursal = ?
	AND criocauterizaciones.codmedico = ? 
	AND DATE_FORMAT(criocauterizaciones.fechacriocauterizacion,'%Y-%m-%d') BETWEEN ? AND ? 
	ORDER BY criocauterizaciones.fechacriocauterizacion DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA CRIOCAUTERIZACIONES POR MEDICO ################################

################################ FUNCION BUSQUEDA CRIOCAUTERIZACIONES POR PACIENTE ################################
public function BuscarCriocauterizacionesxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM criocauterizaciones
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE criocauterizaciones.codsucursal = ?
	AND criocauterizaciones.codmedico = ?
	AND criocauterizaciones.codpaciente = ?
	ORDER BY criocauterizaciones.fechacriocauterizacion DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	criocauterizaciones.idcriocauterizacion,
	criocauterizaciones.codcriocauterizacion,
	criocauterizaciones.nrodocumento,  
	criocauterizaciones.codcita,
	criocauterizaciones.codsucursal,
	criocauterizaciones.codmedico, 
	criocauterizaciones.codpaciente, 
	criocauterizaciones.codprocedimiento,
	criocauterizaciones.procedimiento,
	criocauterizaciones.motivoconsulta,
	criocauterizaciones.atenproced,
	criocauterizaciones.dxpresuntivo,
	criocauterizaciones.dxdefinitivo, 
	criocauterizaciones.origenenfermedad, 
	criocauterizaciones.tratamiento, 
	criocauterizaciones.fechacriocauterizacion,
	criocauterizaciones.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM criocauterizaciones 
	LEFT JOIN sucursales ON criocauterizaciones.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON criocauterizaciones.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON criocauterizaciones.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE criocauterizaciones.codsucursal = ?  
	AND criocauterizaciones.codpaciente = ?
	ORDER BY criocauterizaciones.fechacriocauterizacion DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA CRIOCAUTERIZACIONES POR PACIENTE ################################

##################################### CLASE CRIOCAUTERIZACIONES ########################################

















##################################### CLASE COLPOSCOPIAS ########################################

############################# FUNCION REGISTRAR COLPOSCOPIA ##############################
public function RegistrarColposcopias()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	################ CREO CODIGO DE COLPOSCOPIA ####################
	$sql = "SELECT codcolposcopia FROM colposcopias 
	ORDER BY idcolposcopia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$colposcopia=$row["codcolposcopia"];

	}
	if(empty($colposcopia))
	{
		$codcolposcopia = "01";

	} else {

		$num = substr($colposcopia, 0);
        $dig = $num + 1;
        $codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
        $codcolposcopia = $codigofinal;
	}
    ################ CREO CODIGO DE COLPOSCOPIA ###############

    ################ CREO DOCUMENTO DE COLPOSCOPIA ####################
	$sql = "SELECT nrodocumento FROM colposcopias 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idcolposcopia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE COLPOSCOPIA ###############

		############################# REGISTRO DE COLPOSCOPIA #############################
	    $query = "INSERT INTO colposcopias values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codcolposcopia);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $epiteliooriginal);
		$stmt->bindParam(8, $aspectoinflamatorio);
		$stmt->bindParam(9, $aumentoredvascular);
		$stmt->bindParam(10, $imagenesatipicas);
		$stmt->bindParam(11, $epitelioacetoblanco);
		$stmt->bindParam(12, $baseopunteado);
		$stmt->bindParam(13, $aspectotumoral);
		$stmt->bindParam(14, $ulcerativo);
		$stmt->bindParam(15, $proliferativo);
		$stmt->bindParam(16, $impresiondiagnostica);
		$stmt->bindParam(17, $impresionnormal);
		$stmt->bindParam(18, $impresioninflamatoria);
		$stmt->bindParam(19, $transformaciontipica);
		$stmt->bindParam(20, $transformacionatipica);
		$stmt->bindParam(21, $mosaico);
		$stmt->bindParam(22, $vasosatipicos);
		$stmt->bindParam(23, $condiloma);
		$stmt->bindParam(24, $alteracionesvasculares);
		$stmt->bindParam(25, $vph);
		$stmt->bindParam(26, $nic);
		$stmt->bindParam(27, $cainvasor);
		$stmt->bindParam(28, $observacionesimpresion);
		$stmt->bindParam(29, $union);
		$stmt->bindParam(30, $lesion);
		$stmt->bindParam(31, $otros);
		$stmt->bindParam(32, $biopsia);
		$stmt->bindParam(33, $exocervix);
		$stmt->bindParam(34, $escamoculumnar);
		$stmt->bindParam(35, $vagina);
		$stmt->bindParam(36, $endocervix);
		$stmt->bindParam(37, $endometrio);
		$stmt->bindParam(38, $fechacolposcopia);
		$stmt->bindParam(39, $codigo);				
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));

        $epiteliooriginal = limpiar(isset($_POST['epiteliooriginal']) ? $_POST["epiteliooriginal"] : "");
        $aspectoinflamatorio = limpiar(isset($_POST['aspectoinflamatorio']) ? $_POST["aspectoinflamatorio"] : "");
        $aumentoredvascular = limpiar(isset($_POST['aumentoredvascular']) ? $_POST["aumentoredvascular"] : "");
        $imagenesatipicas = limpiar(isset($_POST['imagenesatipicas']) ? $_POST["imagenesatipicas"] : "");
        $epitelioacetoblanco = limpiar(isset($_POST['epitelioacetoblanco']) ? $_POST["epitelioacetoblanco"] : "");
        $baseopunteado = limpiar(isset($_POST['baseopunteado']) ? $_POST["baseopunteado"] : "");
        $aspectotumoral = limpiar(isset($_POST['aspectotumoral']) ? $_POST["aspectotumoral"] : "");
        $ulcerativo = limpiar(isset($_POST['ulcerativo']) ? $_POST["ulcerativo"] : "");
        $proliferativo = limpiar(isset($_POST['proliferativo']) ? $_POST["proliferativo"] : "");
        $impresiondiagnostica = limpiar(isset($_POST['impresiondiagnostica']) ? $_POST["impresiondiagnostica"] : "");
        $impresionnormal = limpiar(isset($_POST['impresionnormal']) ? $_POST["impresionnormal"] : "");
        $impresioninflamatoria = limpiar(isset($_POST['impresioninflamatoria']) ? $_POST["impresioninflamatoria"] : "");
        $transformaciontipica = limpiar(isset($_POST['transformaciontipica']) ? $_POST["transformaciontipica"] : "");
        $transformacionatipica = limpiar(isset($_POST['transformacionatipica']) ? $_POST["transformacionatipica"] : "");
        $mosaico = limpiar(isset($_POST['mosaico']) ? $_POST["mosaico"] : "");
        $vasosatipicos = limpiar(isset($_POST['vasosatipicos']) ? $_POST["vasosatipicos"] : "");
        $condiloma = limpiar(isset($_POST['condiloma']) ? $_POST["condiloma"] : "");
        $alteracionesvasculares = limpiar(isset($_POST['alteracionesvasculares']) ? $_POST["alteracionesvasculares"] : "");
        $vph = limpiar(isset($_POST['vph']) ? $_POST["vph"] : "");
        $nic = limpiar(isset($_POST['nic']) ? $_POST["nic"] : "");
        $cainvasor = limpiar(isset($_POST['cainvasor']) ? $_POST["cainvasor"] : "");
        $observacionesimpresion = limpiar(isset($_POST['observacionesimpresion']) ? $_POST["observacionesimpresion"] : "");
        $union = limpiar(isset($_POST['union']) ? $_POST["union"] : "");
        $lesion = limpiar(isset($_POST['lesion']) ? $_POST["lesion"] : "");
        $otros = limpiar(isset($_POST['otros']) ? $_POST["otros"] : "");
        $biopsia = limpiar(isset($_POST['biopsia']) ? $_POST["biopsia"] : "");
        $exocervix = limpiar(isset($_POST['exocervix']) ? $_POST["exocervix"] : "");
        $escamoculumnar = limpiar(isset($_POST['escamoculumnar']) ? $_POST["escamoculumnar"] : "");
        $vagina = limpiar(isset($_POST['vagina']) ? $_POST["vagina"] : "");
        $endocervix = limpiar(isset($_POST['endocervix']) ? $_POST["endocervix"] : "");
        $endometrio = limpiar(isset($_POST['endometrio']) ? $_POST["endometrio"] : "");
        $neutrofilos = limpiar(isset($_POST['neutrofilos']) ? $_POST["neutrofilos"] : "");
		$fechacolposcopia = date("Y-m-d H:i:s");
		$codigo = limpiar($_SESSION["codigo"]);
		$stmt->execute();
		############################# REGISTRO DE COLPOSCOPIA #############################

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	echo "<span class='fa fa-check-square-o'></span> LA COLPOSCOPIA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codcolposcopia)."&tipo=".encrypt("CONSTANCIA_COLPOSCOPIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Colposcopia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR COLPOSCOPIA</strong></a>";
	exit;
}
############################# FUNCION REGISTRAR COLPOSCOPIAS ##############################

############################ FUNCION LISTAR COLPOSCOPIAS #############################
public function ListarColposcopias()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.codpaciente, 
	colposcopias.epiteliooriginal,
	colposcopias.aspectoinflamatorio,
	colposcopias.aumentoredvascular,
	colposcopias.imagenesatipicas,
	colposcopias.epitelioacetoblanco,
	colposcopias.baseopunteado,
	colposcopias.aspectotumoral,
	colposcopias.ulcerativo,
	colposcopias.proliferativo,
	colposcopias.impresiondiagnostica,
	colposcopias.impresionnormal,
	colposcopias.impresioninflamatoria,
	colposcopias.transformaciontipica,
	colposcopias.transformacionatipica,
	colposcopias.mosaico,
	colposcopias.vasosatipicos,
	colposcopias.condiloma,
	colposcopias.alteracionesvasculares,
	colposcopias.vph,
	colposcopias.nic,
	colposcopias.cainvasor,
	colposcopias.observacionesimpresion,
	colposcopias.tunion,
	colposcopias.tlesion,
	colposcopias.otros,
	colposcopias.biopsia,
	colposcopias.exocervix,
	colposcopias.escamoculumnar,
	colposcopias.vagina,
	colposcopias.endocervix,
	colposcopias.endometrio,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM colposcopias 
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE colposcopias.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND colposcopias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.codpaciente, 
	colposcopias.epiteliooriginal,
	colposcopias.aspectoinflamatorio,
	colposcopias.aumentoredvascular,
	colposcopias.imagenesatipicas,
	colposcopias.epitelioacetoblanco,
	colposcopias.baseopunteado,
	colposcopias.aspectotumoral,
	colposcopias.ulcerativo,
	colposcopias.proliferativo,
	colposcopias.impresiondiagnostica,
	colposcopias.impresionnormal,
	colposcopias.impresioninflamatoria,
	colposcopias.transformaciontipica,
	colposcopias.transformacionatipica,
	colposcopias.mosaico,
	colposcopias.vasosatipicos,
	colposcopias.condiloma,
	colposcopias.alteracionesvasculares,
	colposcopias.vph,
	colposcopias.nic,
	colposcopias.cainvasor,
	colposcopias.observacionesimpresion,
	colposcopias.tunion,
	colposcopias.tlesion,
	colposcopias.otros,
	colposcopias.biopsia,
	colposcopias.exocervix,
	colposcopias.escamoculumnar,
	colposcopias.vagina,
	colposcopias.endocervix,
	colposcopias.endometrio,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM colposcopias 
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR COLPOSCOPIAS #############################

########################### FUNCION ID COLPOSCOPIAS ###############################
public function ColposcopiasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.codpaciente, 
	colposcopias.epiteliooriginal,
	colposcopias.aspectoinflamatorio,
	colposcopias.aumentoredvascular,
	colposcopias.imagenesatipicas,
	colposcopias.epitelioacetoblanco,
	colposcopias.baseopunteado,
	colposcopias.aspectotumoral,
	colposcopias.ulcerativo,
	colposcopias.proliferativo,
	colposcopias.impresiondiagnostica,
	colposcopias.impresionnormal,
	colposcopias.impresioninflamatoria,
	colposcopias.transformaciontipica,
	colposcopias.transformacionatipica,
	colposcopias.mosaico,
	colposcopias.vasosatipicos,
	colposcopias.condiloma,
	colposcopias.alteracionesvasculares,
	colposcopias.vph,
	colposcopias.nic,
	colposcopias.cainvasor,
	colposcopias.observacionesimpresion,
	colposcopias.tunion,
	colposcopias.tlesion,
	colposcopias.otros,
	colposcopias.biopsia,
	colposcopias.exocervix,
	colposcopias.escamoculumnar,
	colposcopias.vagina,
	colposcopias.endocervix,
	colposcopias.endometrio,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM colposcopias 
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE colposcopias.codcolposcopia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID COLPOSCOPIAS ###############################

########################## FUNCION ACTUALIZAR COLPOSCOPIAS #######################
public function ActualizarColposcopias()
{
	self::SetNames();
	if(empty($_POST["codcolposcopia"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	    ############################# ACTUALIZO COLPOSCOPIA #############################
	   $sql = " UPDATE colposcopias set "
			." epiteliooriginal = ?, "
			." aspectoinflamatorio = ?, "
			." aumentoredvascular = ?, "
			." imagenesatipicas = ?, "
			." epitelioacetoblanco = ?, "
			." baseopunteado = ?, "
			." aspectotumoral = ?, "
			." ulcerativo = ?, "
			." proliferativo = ?, "
			." impresiondiagnostica = ?, "
			." impresionnormal = ?, "
			." impresioninflamatoria = ?, "
			." transformaciontipica = ?, "
			." transformacionatipica = ?, "
			." mosaico = ?, "
			." vasosatipicos = ?, "
			." condiloma = ?, "
			." alteracionesvasculares = ?, "
			." vph = ?, "
			." nic = ?, "
			." cainvasor = ?, "
			." observacionesimpresion = ?, "
			." tunion = ?, "
			." tlesion = ?, "
			." otros = ?, "
			." biopsia = ?, "
			." exocervix = ?, "
			." escamoculumnar = ?, "
			." vagina = ?, "
			." endocervix = ?, "
			." endometrio = ? "
		    ." WHERE "
		    ." codcolposcopia = ?;
		    ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $epiteliooriginal);
		$stmt->bindParam(2, $aspectoinflamatorio);
		$stmt->bindParam(3, $aumentoredvascular);
		$stmt->bindParam(4, $imagenesatipicas);
		$stmt->bindParam(5, $epitelioacetoblanco);
		$stmt->bindParam(6, $baseopunteado);
		$stmt->bindParam(7, $aspectotumoral);
		$stmt->bindParam(8, $ulcerativo);
		$stmt->bindParam(9, $proliferativo);
		$stmt->bindParam(10, $impresiondiagnostica);
		$stmt->bindParam(11, $impresionnormal);
		$stmt->bindParam(12, $impresioninflamatoria);
		$stmt->bindParam(13, $transformaciontipica);
		$stmt->bindParam(14, $transformacionatipica);
		$stmt->bindParam(15, $mosaico);
		$stmt->bindParam(16, $vasosatipicos);
		$stmt->bindParam(17, $condiloma);
		$stmt->bindParam(18, $alteracionesvasculares);
		$stmt->bindParam(19, $vph);
		$stmt->bindParam(20, $nic);
		$stmt->bindParam(21, $cainvasor);
		$stmt->bindParam(22, $observacionesimpresion);
		$stmt->bindParam(23, $union);
		$stmt->bindParam(24, $lesion);
		$stmt->bindParam(25, $otros);
		$stmt->bindParam(26, $biopsia);
		$stmt->bindParam(27, $exocervix);
		$stmt->bindParam(28, $escamoculumnar);
		$stmt->bindParam(29, $vagina);
		$stmt->bindParam(30, $endocervix);
		$stmt->bindParam(31, $endometrio);
		$stmt->bindParam(32, $codcolposcopia);			

        $epiteliooriginal = limpiar(isset($_POST['epiteliooriginal']) ? $_POST["epiteliooriginal"] : "");
        $aspectoinflamatorio = limpiar(isset($_POST['aspectoinflamatorio']) ? $_POST["aspectoinflamatorio"] : "");
        $aumentoredvascular = limpiar(isset($_POST['aumentoredvascular']) ? $_POST["aumentoredvascular"] : "");
        $imagenesatipicas = limpiar(isset($_POST['imagenesatipicas']) ? $_POST["imagenesatipicas"] : "");
        $epitelioacetoblanco = limpiar(isset($_POST['epitelioacetoblanco']) ? $_POST["epitelioacetoblanco"] : "");
        $baseopunteado = limpiar(isset($_POST['baseopunteado']) ? $_POST["baseopunteado"] : "");
        $aspectotumoral = limpiar(isset($_POST['aspectotumoral']) ? $_POST["aspectotumoral"] : "");
        $ulcerativo = limpiar(isset($_POST['ulcerativo']) ? $_POST["ulcerativo"] : "");
        $proliferativo = limpiar(isset($_POST['proliferativo']) ? $_POST["proliferativo"] : "");
        $impresiondiagnostica = limpiar(isset($_POST['impresiondiagnostica']) ? $_POST["impresiondiagnostica"] : "");
        $impresionnormal = limpiar(isset($_POST['impresionnormal']) ? $_POST["impresionnormal"] : "");
        $impresioninflamatoria = limpiar(isset($_POST['impresioninflamatoria']) ? $_POST["impresioninflamatoria"] : "");
        $transformaciontipica = limpiar(isset($_POST['transformaciontipica']) ? $_POST["transformaciontipica"] : "");
        $transformacionatipica = limpiar(isset($_POST['transformacionatipica']) ? $_POST["transformacionatipica"] : "");
        $mosaico = limpiar(isset($_POST['mosaico']) ? $_POST["mosaico"] : "");
        $vasosatipicos = limpiar(isset($_POST['vasosatipicos']) ? $_POST["vasosatipicos"] : "");
        $condiloma = limpiar(isset($_POST['condiloma']) ? $_POST["condiloma"] : "");
        $alteracionesvasculares = limpiar(isset($_POST['alteracionesvasculares']) ? $_POST["alteracionesvasculares"] : "");
        $vph = limpiar(isset($_POST['vph']) ? $_POST["vph"] : "");
        $nic = limpiar(isset($_POST['nic']) ? $_POST["nic"] : "");
        $cainvasor = limpiar(isset($_POST['cainvasor']) ? $_POST["cainvasor"] : "");
        $observacionesimpresion = limpiar(isset($_POST['observacionesimpresion']) ? $_POST["observacionesimpresion"] : "");
        $union = limpiar(isset($_POST['union']) ? $_POST["union"] : "");
        $lesion = limpiar(isset($_POST['lesion']) ? $_POST["lesion"] : "");
        $otros = limpiar(isset($_POST['otros']) ? $_POST["otros"] : "");
        $biopsia = limpiar(isset($_POST['biopsia']) ? $_POST["biopsia"] : "");
        $exocervix = limpiar(isset($_POST['exocervix']) ? $_POST["exocervix"] : "");
        $escamoculumnar = limpiar(isset($_POST['escamoculumnar']) ? $_POST["escamoculumnar"] : "");
        $vagina = limpiar(isset($_POST['vagina']) ? $_POST["vagina"] : "");
        $endocervix = limpiar(isset($_POST['endocervix']) ? $_POST["endocervix"] : "");
        $endometrio = limpiar(isset($_POST['endometrio']) ? $_POST["endometrio"] : "");
        $neutrofilos = limpiar(isset($_POST['neutrofilos']) ? $_POST["neutrofilos"] : "");
		$codcolposcopia = limpiar(decrypt($_POST['codcolposcopia']));
	    $stmt->execute();
	    ############################# ACTUALIZO COLPOSCOPIAS #############################

	echo "<span class='fa fa-check-square-o'></span> LA COLPOSCOPIA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codcolposcopia)."&tipo=".encrypt("CONSTANCIA_COLPOSCOPIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Colposcopia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR COLPOSCOPIA</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR COLPOSCOPIAS #######################

############################ FUNCION ELIMINAR COLPOSCOPIAS ###########################
public function EliminarColposcopias()
{
	if($_SESSION['acceso'] == "administrador") {
		
		$sql = "DELETE FROM colposcopias WHERE codcolposcopia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codcolposcopia);
		$codcolposcopia = decrypt($_GET["codcolposcopia"]);
		$stmt->execute();
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
}  
############################ FUNCION ELIMINAR COLPOSCOPIAS ###########################

################################ FUNCION BUSQUEDA COLPOSCOPIAS POR FECHAS ################################
public function BuscarColposcopiasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.impresiondiagnostica, 
	colposcopias.biopsia,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM colposcopias 
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE colposcopias.codsucursal = ?
	AND colposcopias.codmedico = ?
	AND DATE_FORMAT(colposcopias.fechacolposcopia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY colposcopias.fechacolposcopia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.impresiondiagnostica, 
	colposcopias.biopsia,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM colposcopias
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE colposcopias.codsucursal = ? 
	AND DATE_FORMAT(colposcopias.fechacolposcopia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY colposcopias.fechacolposcopia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA COLPOSCOPIAS POR FECHAS ################################

################################ FUNCION BUSQUEDA COLPOSCOPIAS POR MEDICO ################################
public function BuscarColposcopiasxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.impresiondiagnostica, 
	colposcopias.biopsia,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM colposcopias
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE colposcopias.codsucursal = ?
	AND colposcopias.codmedico = ? 
	AND DATE_FORMAT(colposcopias.fechacolposcopia,'%Y-%m-%d') BETWEEN ? AND ? 
	ORDER BY colposcopias.fechacolposcopia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA COLPOSCOPIAS POR MEDICO ################################

################################ FUNCION BUSQUEDA COLPOSCOPIAS POR PACIENTE ################################
public function BuscarColposcopiasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.impresiondiagnostica, 
	colposcopias.biopsia,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM colposcopias
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE colposcopias.codsucursal = ?
	AND colposcopias.codmedico = ?
	AND colposcopias.codpaciente = ?
	ORDER BY colposcopias.fechacolposcopia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	colposcopias.idcolposcopia,
	colposcopias.codcolposcopia,
	colposcopias.nrodocumento,  
	colposcopias.codcita,
	colposcopias.codsucursal,
	colposcopias.codmedico, 
	colposcopias.impresiondiagnostica, 
	colposcopias.biopsia,
	colposcopias.fechacolposcopia,
	colposcopias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM colposcopias 
	LEFT JOIN sucursales ON colposcopias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON colposcopias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON colposcopias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE colposcopias.codsucursal = ?  
	AND colposcopias.codpaciente = ?
	ORDER BY colposcopias.fechacolposcopia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA COLPOSCOPIAS POR PACIENTE ################################

##################################### CLASE COLPOSCOPIAS ########################################



















##################################### CLASE ECOGRAFIAS ########################################

############################# FUNCION REGISTRAR ECOGRAFIAS ##############################
public function RegistrarEcografias()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["procedimiento"]) or empty($_POST["diagnostico"]))
	{
		echo "1";
		exit;
	}

	################ CREO CODIGO DE ECOGRAFIA ####################
	$sql = "SELECT codecografia FROM ecografias 
	ORDER BY idecografia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$ecografia=$row["codecografia"];

	}
	if(empty($ecografia))
	{
		$codecografia = "01";

	} else {

		$num = substr($ecografia, 0);
        $dig = $num + 1;
        $codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
        $codecografia = $codigofinal;
	}
    ################ CREO CODIGO DE ECOGRAFIA ###############

    ################ CREO DOCUMENTO DE ECOGRAFIA ####################
	$sql = "SELECT nrodocumento FROM ecografias 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idecografia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE ECOGRAFIA ###############

    if (isset($_FILES["file"])){

    	$autoinc = 1;
		foreach($_FILES['file']['tmp_name'] as $key => $tmp_name ){
		
		$file_name = $_FILES['file']['name'][$key];
		$file_size =$_FILES['file']['size'][$key];
		$file_tmp =$_FILES['file']['tmp_name'][$key];
		$file_type=$_FILES['file']['type'][$key];
		
		if ($file_type == ''){ } 
		
		//valido que los archivos cargados sean imagenes con extension jpeg,jpg,png,gif
		elseif ($file_type != '' && $file_type != 'image/jpeg' && $file_type != 'image/jpg' && $file_type != 'image/JPEG' && $file_type != 'image/JPG' && $file_type != 'image/png' && $file_type != 'image/PNG' && $file_type != 'image/gif')
		{

		    //si los archivos cargados no son imagenes muestro un mensaje de error de carga
		    echo "2";
		    exit;
		
		} else {
		 
		if (is_dir('./fotos/ecografias/'.$codecografia)){

	        //guardo las imagenes cargadas en la carpeta que se creo
		    move_uploaded_file($file_tmp,"./fotos/ecografias/".$codecografia."/".$file_name);
	
	        //Ruta de la imagen original
	        $rutaImagenOriginal="./fotos/ecografias/".$codecografia."/".$_FILES['file']['name'][$key];

            //Nuevo nombre
		    //$rutaImagenRedimen="./fotos/".$_POST["codhabitacion"]."/{$autoinc}.".pathinfo($_FILES['file']['name'][$key], PATHINFO_EXTENSION);
			$rutaImagenRedimen="./fotos/ecografias/".$codecografia."/{$autoinc}.JPG";
	
	        //Creamos una variable imagen a partir de la imagen original
	        $img_original = imagecreatefromjpeg($rutaImagenOriginal);
	
	        //Se define el maximo ancho o alto que tendra la imagen final
	        $max_ancho = 400;
	        $max_alto = 200;
	
	        //Ancho y alto de la imagen original
	        list($ancho,$alto)=getimagesize($rutaImagenOriginal);
	
	        //Se calcula ancho y alto de la imagen final
	        $x_ratio = $max_ancho / $ancho;
	        $y_ratio = $max_alto / $alto;
	
	        //Si el ancho y el alto de la imagen no superan los maximos, 
	        //ancho final y alto final son los que tiene actualmente
	        if(($ancho <= $max_ancho) && ($alto <= $max_alto)){//Si ancho 
		        $ancho_final = $ancho;
		        $alto_final = $alto;
	        }
		    /*
		    * si proporcion horizontal*alto mayor que el alto maximo,
		    * alto final es alto por la proporcion horizontal
		    * es decir, le quitamos al alto, la misma proporcion que 
		    * le quitamos al alto
		    * 
		    */
		    elseif (($x_ratio * $alto) < $max_alto){
			   $alto_final = ceil($x_ratio * $alto);
			   $ancho_final = $max_ancho;
		    }
	        /*
	        * Igual que antes pero a la inversa
	        */
	        else {
		       $ancho_final = ceil($y_ratio * $ancho);
		       $alto_final = $max_alto;
	        }
	
		    //Creamos una imagen en blanco de tamaño $ancho_final  por $alto_final .
		    $tmp=imagecreatetruecolor($ancho_final,$alto_final);	
		
		    //Copiamos $img_original sobre la imagen que acabamos de crear en blanco ($tmp)
		    imagecopyresampled($tmp,$img_original,0,0,0,0,$ancho_final, $alto_final,$ancho,$alto);
		
		    //Se destruye variable $img_original para liberar memoria
		    imagedestroy($img_original);
		
		    unlink($rutaImagenOriginal);
		
		    //Definimos la calidad de la imagen final
		    $calidad=95;
		
		    //Se crea la imagen final en el directorio indicado
		    imagejpeg($tmp,$rutaImagenOriginal,$calidad);
	
		} else {
	   
		    //creo la carpeta donde guardare las imagenes cargadas
			$dirmake = mkdir('./fotos/ecografias/'.$codecografia, 0777); 

            $pathInfo = pathinfo($file_name);
            $sum=1;
            //guardo las imagenes cargadas en la carpeta que se creo
            move_uploaded_file($file_tmp,"./fotos/ecografias/".$codecografia."/".$file_name);

			//Ruta de la imagen original
		    $rutaImagenOriginal="./fotos/ecografias/".$codecografia."/".$_FILES['file']['name'][$key];

            //Nuevo nombre
		    //$rutaImagenRedimen="./fotos/".$_POST["codhabitacion"]."/{$autoinc}.".pathinfo($_FILES['file']['name'][$key], PATHINFO_EXTENSION);
            $rutaImagenRedimen="./fotos/ecografias/".$codecografia."/{$autoinc}.JPG";
		
		    //Creamos una variable imagen a partir de la imagen original
		    $img_original = imagecreatefromjpeg($rutaImagenOriginal);
		
		    //Se define el maximo ancho o alto que tendra la imagen final
		    $max_ancho = 400;
		    $max_alto = 200;
	
		    //Ancho y alto de la imagen original
		    list($ancho,$alto)=getimagesize($rutaImagenOriginal);
		
		    //Se calcula ancho y alto de la imagen final
		    $x_ratio = $max_ancho / $ancho;
		    $y_ratio = $max_alto / $alto;
		
		    //Si el ancho y el alto de la imagen no superan los maximos, 
		    //ancho final y alto final son los que tiene actualmente
		    if( ($ancho <= $max_ancho) && ($alto <= $max_alto) ){//Si ancho 
			$ancho_final = $ancho;
			$alto_final = $alto;
	    }
		/*
		 * si proporcion horizontal*alto mayor que el alto maximo,
		 * alto final es alto por la proporcion horizontal
		 * es decir, le quitamos al alto, la misma proporcion que 
		 * le quitamos al alto
		 * 
		*/
		elseif (($x_ratio * $alto) < $max_alto){
			$alto_final = ceil($x_ratio * $alto);
			$ancho_final = $max_ancho;
		}
		/*
		 * Igual que antes pero a la inversa
		*/
		else {
			$ancho_final = ceil($y_ratio * $ancho);
			$alto_final = $max_alto;
		}
		
		//Creamos una imagen en blanco de tamaño $ancho_final  por $alto_final .
		$tmp=imagecreatetruecolor($ancho_final,$alto_final);	
		
		//Copiamos $img_original sobre la imagen que acabamos de crear en blanco ($tmp)
		imagecopyresampled($tmp,$img_original,0,0,0,0,$ancho_final, $alto_final,$ancho,$alto);
		
		//Se destruye variable $img_original para liberar memoria
		imagedestroy($img_original);
		
		unlink($rutaImagenOriginal);
		
		//Definimos la calidad de la imagen final
		$calidad=95;
		
		
		//Se crea la imagen final en el directorio indicado
		imagejpeg($tmp,$rutaImagenOriginal,$calidad);
	
				}
	        }

            $autoinc++;
		}
	}

		############################# REGISTRO DE ECOGRAFIA #############################
	    $query = "INSERT INTO ecografias values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codecografia);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $procedimiento);
		$stmt->bindParam(8, $diagnostico);
		$stmt->bindParam(9, $fechaecografia);
		$stmt->bindParam(10, $codigo);				
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
		$procedimiento = limpiar($_POST['procedimiento']);
		$diagnostico = htmlspecialchars_decode(addslashes(trim($_POST['diagnostico'])));
		//$diagnostico = limpiar($_POST["diagnostico"]);
		$fechaecografia = date("Y-m-d H:i:s");
		$codigo = limpiar($_SESSION["codigo"]);
		$stmt->execute();
		############################# REGISTRO DE ECOGRAFIA #############################

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	echo "<span class='fa fa-check-square-o'></span> LA ECOGRAFIA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codecografia)."&tipo=".encrypt("CONSTANCIA_ECOGRAFIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Ecografia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR ECOGRAFIA</strong></a>";
	exit;
}
############################# FUNCION REGISTRAR ECOGRAFIAS ##############################

############################ FUNCION LISTAR ECOGRAFIAS #############################
public function ListarEcografias()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.codpaciente, 
	ecografias.procedimiento,
	ecografias.diagnostico,
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ecografias 
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ecografias.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND ecografias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.codpaciente, 
	ecografias.procedimiento,
	ecografias.diagnostico,
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ecografias 
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR ECOGRAFIAS #############################

########################### FUNCION ID ECOGRAFIAS ###############################
public function EcografiasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.codpaciente, 
	ecografias.procedimiento,
	ecografias.diagnostico,
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM ecografias 
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE ecografias.codecografia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID ECOGRAFIAS ###############################

########################## FUNCION ACTUALIZAR ECOGRAFIAS #######################
public function ActualizarEcografias()
{
	self::SetNames();
	if(empty($_POST["codecografia"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["procedimiento"]) or empty($_POST["diagnostico"]))
	{
		echo "1";
		exit;
	}

	if (isset($_FILES["file"])){

    	foreach($_FILES['file']['tmp_name'] as $key => $tmp_name ){
		
		$file_name = $_FILES['file']['name'][$key];
		$file_size =$_FILES['file']['size'][$key];
		$file_tmp =$_FILES['file']['tmp_name'][$key];
		$file_type=$_FILES['file']['type'][$key];
		
		if ($file_type == ''){ } 
		
		//valido que los archivos cargados sean imagenes con extension jpeg,jpg,png,gif
		elseif ($file_type != '' && $file_type != 'image/jpeg' && $file_type != 'image/jpg' && $file_type != 'image/png' && $file_type != 'image/gif'){
		
		    //si los archivos cargados no son imagenes muestro un mensaje de error de carga
		    echo "2";
		    exit;
		
		} else {
		 
		if (is_dir('./fotos/ecografias/'.decrypt($_POST["codecografia"]))){
	   
	        //guardo las imagenes cargadas en la carpeta que se creo
		    move_uploaded_file($file_tmp,"./fotos/ecografias/".decrypt($_POST["codecografia"])."/".$file_name);       
	
	        //Ruta de la imagen original
	        $rutaImagenOriginal="./fotos/ecografias/".decrypt($_POST["codecografia"])."/".$_FILES['file']['name'][$key];
	
	        //Creamos una variable imagen a partir de la imagen original
	        $img_original = imagecreatefromjpeg($rutaImagenOriginal);
	
	        //Se define el maximo ancho o alto que tendra la imagen final
	        $max_ancho = 200;
	        $max_alto = 200;
	
	        //Ancho y alto de la imagen original
	        list($ancho,$alto)=getimagesize($rutaImagenOriginal);
	
	        //Se calcula ancho y alto de la imagen final
	        $x_ratio = $max_ancho / $ancho;
	        $y_ratio = $max_alto / $alto;
	
	        //Si el ancho y el alto de la imagen no superan los maximos, 
	        //ancho final y alto final son los que tiene actualmente
	        if(($ancho <= $max_ancho) && ($alto <= $max_alto)){//Si ancho 
		        $ancho_final = $ancho;
		        $alto_final = $alto;
	        }
		    /*
		    * si proporcion horizontal*alto mayor que el alto maximo,
		    * alto final es alto por la proporcion horizontal
		    * es decir, le quitamos al alto, la misma proporcion que 
		    * le quitamos al alto
		    * 
		    */
		    elseif (($x_ratio * $alto) < $max_alto){
			   $alto_final = ceil($x_ratio * $alto);
			   $ancho_final = $max_ancho;
		    }
	        /*
	        * Igual que antes pero a la inversa
	        */
	        else {
		       $ancho_final = ceil($y_ratio * $ancho);
		       $alto_final = $max_alto;
	        }
	
		    //Creamos una imagen en blanco de tamaño $ancho_final  por $alto_final .
		    $tmp=imagecreatetruecolor($ancho_final,$alto_final);	
		
		    //Copiamos $img_original sobre la imagen que acabamos de crear en blanco ($tmp)
		    imagecopyresampled($tmp,$img_original,0,0,0,0,$ancho_final, $alto_final,$ancho,$alto);
		
		    //Se destruye variable $img_original para liberar memoria
		    imagedestroy($img_original);
		
		    unlink($rutaImagenOriginal);
		
		    //Definimos la calidad de la imagen final
		    $calidad=95;
		
		    //Se crea la imagen final en el directorio indicado
		    imagejpeg($tmp,$rutaImagenOriginal,$calidad);
	
		} else {
	   
		    //creo la carpeta donde guardare las imagenes cargadas
			$dirmake = mkdir('./fotos/ecografias/'.decrypt($_POST["codecografia"]), 0777);   
		
			//guardo las imagenes cargadas en la carpeta que se creo
			move_uploaded_file($file_tmp,"./fotos/ecografias/".decrypt($_POST["codecografia"])."/".$file_name);
					
			//Ruta de la imagen original
		    $rutaImagenOriginal="./fotos/ecografias/".decrypt($_POST["codecografia"])."/".$_FILES['file']['name'][$key];
		
		    //Creamos una variable imagen a partir de la imagen original
		    $img_original = imagecreatefromjpeg($rutaImagenOriginal);
		
		    //Se define el maximo ancho o alto que tendra la imagen final
		    $max_ancho = 200;
		    $max_alto = 200;
	
		    //Ancho y alto de la imagen original
		    list($ancho,$alto)=getimagesize($rutaImagenOriginal);
		
		    //Se calcula ancho y alto de la imagen final
		    $x_ratio = $max_ancho / $ancho;
		    $y_ratio = $max_alto / $alto;
		
		    //Si el ancho y el alto de la imagen no superan los maximos, 
		    //ancho final y alto final son los que tiene actualmente
		    if( ($ancho <= $max_ancho) && ($alto <= $max_alto) ){//Si ancho 
			$ancho_final = $ancho;
			$alto_final = $alto;
	    }
		/*
		 * si proporcion horizontal*alto mayor que el alto maximo,
		 * alto final es alto por la proporcion horizontal
		 * es decir, le quitamos al alto, la misma proporcion que 
		 * le quitamos al alto
		 * 
		*/
		elseif (($x_ratio * $alto) < $max_alto){
			$alto_final = ceil($x_ratio * $alto);
			$ancho_final = $max_ancho;
		}
		/*
		 * Igual que antes pero a la inversa
		*/
		else {
			$ancho_final = ceil($y_ratio * $ancho);
			$alto_final = $max_alto;
		}
		
		//Creamos una imagen en blanco de tamaño $ancho_final  por $alto_final .
		$tmp=imagecreatetruecolor($ancho_final,$alto_final);	
		
		//Copiamos $img_original sobre la imagen que acabamos de crear en blanco ($tmp)
		imagecopyresampled($tmp,$img_original,0,0,0,0,$ancho_final, $alto_final,$ancho,$alto);
		
		//Se destruye variable $img_original para liberar memoria
		imagedestroy($img_original);
		
		unlink($rutaImagenOriginal);
		
		//Definimos la calidad de la imagen final
		$calidad=95;
		
		
		//Se crea la imagen final en el directorio indicado
		imagejpeg($tmp,$rutaImagenOriginal,$calidad);
	
				}
	        }
		}
	}

	    ############################# ACTUALIZO ECOGRAFIA #############################
	    $sql = " UPDATE ecografias set "
			." procedimiento = ?, "
			." diagnostico = ? "
		    ." WHERE "
		    ." codecografia = ?;
		    ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $procedimiento);
		$stmt->bindParam(2, $diagnostico);
		$stmt->bindParam(3, $codecografia);			

        $procedimiento = limpiar($_POST["procedimiento"]);
        //$diagnostico = limpiar($_POST["diagnostico"]);
		$diagnostico = htmlspecialchars_decode(addslashes(trim($_POST['diagnostico'])));
		$codecografia = limpiar(decrypt($_POST['codecografia']));
	    $stmt->execute();
	    ############################# ACTUALIZO ECOGRAFIA #############################

	echo "<span class='fa fa-check-square-o'></span> LA ECOGRAFIA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codecografia)."&tipo=".encrypt("CONSTANCIA_ECOGRAFIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Ecohgrafia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR ECOGRAFIA</strong></a>";
	exit;

}
########################## FUNCION ACTUALIZAR ECOGRAFIAS #######################

############################ FUNCION ELIMINAR ECOGRAFIAS ###########################
public function EliminarEcografias()
{
	if($_SESSION['acceso'] == "administrador") {

		//funcion para eliminar una carpeta con contenido
        $codecografia = decrypt($_GET["codecografia"]);
        $carpeta = "fotos/ecografias/".$codecografia;		
        foreach(glob($carpeta . "/*") as $archivos_carpeta){             
            if (is_dir($archivos_carpeta)){
                rmDir_rf($archivos_carpeta);
            } else {
                unlink($archivos_carpeta);
            }
        }
        rmdir($carpeta);
		
		$sql = "DELETE FROM ecografias WHERE codecografia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codecografia);
		$codecografia = decrypt($_GET["codecografia"]);
		$stmt->execute();
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
}  
############################ FUNCION ELIMINAR ECOGRAFIAS ###########################

################################ FUNCION BUSQUEDA ECOGRAFIAS POR FECHAS ################################
public function BuscarEcografiasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.procedimiento, 
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ecografias 
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ecografias.codsucursal = ?
	AND ecografias.codmedico = ?
	AND DATE_FORMAT(ecografias.fechaecografia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY ecografias.fechaecografia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.procedimiento, 
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ecografias
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ecografias.codsucursal = ? 
	AND DATE_FORMAT(ecografias.fechaecografia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY ecografias.fechaecografia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA ECOGRAFIAS POR FECHAS ################################

################################ FUNCION BUSQUEDA ECOGRAFIAS POR MEDICO ################################
public function BuscarEcografiasxMedico()
{
	self::SetNames();
    $sql ="SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.procedimiento, 
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ecografias
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ecografias.codsucursal = ?
	AND ecografias.codmedico = ? 
	AND DATE_FORMAT(ecografias.fechaecografia,'%Y-%m-%d') BETWEEN ? AND ? 
	ORDER BY ecografias.fechaecografia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA ECOGRAFIAS POR MEDICO ################################

################################ FUNCION BUSQUEDA ECOGRAFIAS POR PACIENTE ################################
public function BuscarEcografiasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.procedimiento, 
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ecografias
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ecografias.codsucursal = ?
	AND ecografias.codmedico = ?
	AND ecografias.codpaciente = ?
	ORDER BY ecografias.fechaecografia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	ecografias.idecografia,
	ecografias.codecografia,
	ecografias.nrodocumento,  
	ecografias.codcita,
	ecografias.codsucursal,
	ecografias.codmedico, 
	ecografias.procedimiento, 
	ecografias.fechaecografia,
	ecografias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM ecografias 
	LEFT JOIN sucursales ON ecografias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON ecografias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON ecografias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE ecografias.codsucursal = ?  
	AND ecografias.codpaciente = ?
	ORDER BY ecografias.fechaecografia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA ECOGRAFIAS POR PACIENTE ################################

##################################### CLASE ECOGRAFIAS ########################################
















##################################### CLASE LABORATORIO ########################################

############################# FUNCION REGISTRAR LABORATORIOS ##############################
public function RegistrarLaboratorios()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	################ CREO CODIGO DE LABORATORIO ####################
	$sql = "SELECT codlaboratorio FROM laboratorios 
	ORDER BY idlaboratorio DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$laboratorio=$row["codlaboratorio"];

	}
	if(empty($laboratorio))
	{
		$codlaboratorio = "01";

	} else {

		$num = substr($laboratorio, 0);
        $dig = $num + 1;
        $codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
        $codlaboratorio = $codigofinal;
	}
    ################ CREO CODIGO DE LABORATORIO ###############

    ################ CREO DOCUMENTO DE LABORATORIO ####################
	$sql = "SELECT nrodocumento FROM laboratorios 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idlaboratorio DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE LABORATORIO ###############

		############################# REGISTRO EXAMEN LABORATORIO #############################
	    $query = "INSERT INTO laboratorios values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codlaboratorio);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $hematocrito);
		$stmt->bindParam(8, $hemoglobina);
		$stmt->bindParam(9, $leucocitos);
		$stmt->bindParam(10, $neutrofilos);
		$stmt->bindParam(11, $linfocitos);
		$stmt->bindParam(12, $eosinofilos);
		$stmt->bindParam(13, $monositos);
		$stmt->bindParam(14, $basofilos);
		$stmt->bindParam(15, $cayados);
		$stmt->bindParam(16, $plaquetas);
		$stmt->bindParam(17, $reticulositos);
		$stmt->bindParam(18, $vsg);
		$stmt->bindParam(19, $pt);
		$stmt->bindParam(20, $ptt);
		$stmt->bindParam(21, $clasifgrupo);
		$stmt->bindParam(22, $clasifrh);
		$stmt->bindParam(23, $observacioneshematologia);
		$stmt->bindParam(24, $glucosa);
		$stmt->bindParam(25, $colesteroltotal);
		$stmt->bindParam(26, $colesterolhdl);
		$stmt->bindParam(27, $colesterolldl);
		$stmt->bindParam(28, $trigliceridos);
		$stmt->bindParam(29, $acidourico);
		$stmt->bindParam(30, $nitrogenoureico);
		$stmt->bindParam(31, $creatinina);
		$stmt->bindParam(32, $proteinastotales);
		$stmt->bindParam(33, $albumina);
		$stmt->bindParam(34, $globulina);
		$stmt->bindParam(35, $bilirrubinatotal);
		$stmt->bindParam(36, $bilirrubinadirecta);
		$stmt->bindParam(37, $bilirrubinaindirecta);
		$stmt->bindParam(38, $fosfatasaalcalina);
		$stmt->bindParam(39, $tgo);
		$stmt->bindParam(40, $tgp);
		$stmt->bindParam(41, $amilasa);
		$stmt->bindParam(42, $observacionesquimica);
		$stmt->bindParam(43, $colorquimico);
		$stmt->bindParam(44, $aspectoquimico);
		$stmt->bindParam(45, $phquimico);
		$stmt->bindParam(46, $densidadquimico);
		$stmt->bindParam(47, $proteinaquimico);
		$stmt->bindParam(48, $glucosaquimico);
		$stmt->bindParam(49, $cetonaquimico);
		$stmt->bindParam(50, $bilirrubinaquimico);
		$stmt->bindParam(51, $urobilinogenoquimico);
		$stmt->bindParam(52, $sangrequimico);
		$stmt->bindParam(53, $leucocitosquimico);
		$stmt->bindParam(54, $nitritosquimico);
		$stmt->bindParam(55, $celulasepibajas);
		$stmt->bindParam(56, $celulasepialtas);
		$stmt->bindParam(57, $bacteriasmicroscopico);
		$stmt->bindParam(58, $leucocitosmicroscopico);
		$stmt->bindParam(59, $hematiesmicroscopico);
		$stmt->bindParam(60, $cristalesmicroscopico);
		$stmt->bindParam(61, $cilindrosmicroscopico);
		$stmt->bindParam(62, $mocomicroscopico);
		$stmt->bindParam(63, $observacionesuroanalisis);
		$stmt->bindParam(64, $pruebaembarazo);
		$stmt->bindParam(65, $rprsisfilis);
		$stmt->bindParam(66, $ratest);
		$stmt->bindParam(67, $astos);
		$stmt->bindParam(68, $observacionesinmunologia);
		$stmt->bindParam(69, $phfresco);
		$stmt->bindParam(70, $celulasfresco);
		$stmt->bindParam(71, $testaminafresco);
		$stmt->bindParam(72, $hongosfresco);
		$stmt->bindParam(73, $trichomonafresco);
		$stmt->bindParam(74, $leucitofresco);
		$stmt->bindParam(75, $hematiesfresco);
		$stmt->bindParam(76, $basilosgranpositivo);
		$stmt->bindParam(77, $basilosgrannegativo);
		$stmt->bindParam(78, $cocobacilogran);
		$stmt->bindParam(79, $diplococogran);
		$stmt->bindParam(80, $blastoconidiasgran);
		$stmt->bindParam(81, $pseudomiceliogran);
		$stmt->bindParam(82, $pmngran);
		$stmt->bindParam(83, $observacionesfrotis);
		$stmt->bindParam(84, $colorparasitologia);
		$stmt->bindParam(85, $consistenciaparasitologia);
		$stmt->bindParam(86, $phparasitologia);
		$stmt->bindParam(87, $sangreocultaparasitologia);
		$stmt->bindParam(88, $azucaresparasitologia);
		$stmt->bindParam(89, $almidonesparasitologia);
		$stmt->bindParam(90, $hongosparasitologia);
		$stmt->bindParam(91, $trichomonaparasitologia);
		$stmt->bindParam(92, $iodamoebaparasitologia);
		$stmt->bindParam(93, $otrosparasitologia);
		$stmt->bindParam(94, $kohmicro);
		$stmt->bindParam(95, $baciloscopiamicro);
		$stmt->bindParam(96, $fechalaboratorio);
		$stmt->bindParam(97, $codigo);				
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	    $hematocrito = limpiar(isset($_POST['hematocrito']) ? $_POST["hematocrito"] : "");
	    $hemoglobina = limpiar(isset($_POST['hemoglobina']) ? $_POST["hemoglobina"] : "");
	    $leucocitos = limpiar(isset($_POST['leucocitos']) ? $_POST["leucocitos"] : "");
	    $neutrofilos = limpiar(isset($_POST['neutrofilos']) ? $_POST["neutrofilos"] : "");
	    $linfocitos = limpiar(isset($_POST['linfocitos']) ? $_POST["linfocitos"] : "");
	    $eosinofilos = limpiar(isset($_POST['eosinofilos']) ? $_POST["eosinofilos"] : "");
	    $monositos = limpiar(isset($_POST['monositos']) ? $_POST["monositos"] : "");
	    $basofilos = limpiar(isset($_POST['basofilos']) ? $_POST["basofilos"] : "");
	    $cayados = limpiar(isset($_POST['cayados']) ? $_POST["cayados"] : "");
	    $plaquetas = limpiar(isset($_POST['plaquetas']) ? $_POST["plaquetas"] : "");
	    $reticulositos = limpiar(isset($_POST['reticulositos']) ? $_POST["reticulositos"] : "");
	    $vsg = limpiar(isset($_POST['vsg']) ? $_POST["vsg"] : "");
	    $pt = limpiar(isset($_POST['pt']) ? $_POST["pt"] : "");
	    $ptt = limpiar(isset($_POST['ptt']) ? $_POST["ptt"] : "");
	    $clasifgrupo = limpiar(isset($_POST['clasifgrupo']) ? $_POST["clasifgrupo"] : "");
	    $clasifrh = limpiar(isset($_POST['clasifrh']) ? $_POST["clasifrh"] : "");
	    $observacioneshematologia = limpiar(isset($_POST['observacioneshematologia']) ? $_POST["observacioneshematologia"] : "");
	    $glucosa = limpiar(isset($_POST['glucosa']) ? $_POST["glucosa"] : "");
	    $colesteroltotal = limpiar(isset($_POST['colesteroltotal']) ? $_POST["colesteroltotal"] : "");
	    $colesterolhdl = limpiar(isset($_POST['colesterolhdl']) ? $_POST["colesterolhdl"] : "");
	    $colesterolldl = limpiar(isset($_POST['colesterolldl']) ? $_POST["colesterolldl"] : "");
	    $trigliceridos = limpiar(isset($_POST['trigliceridos']) ? $_POST["trigliceridos"] : "");
	    $acidourico = limpiar(isset($_POST['acidourico']) ? $_POST["acidourico"] : "");
	    $nitrogenoureico = limpiar(isset($_POST['nitrogenoureico']) ? $_POST["nitrogenoureico"] : "");
	    $creatinina = limpiar(isset($_POST['creatinina']) ? $_POST["creatinina"] : "");
	    $proteinastotales = limpiar(isset($_POST['proteinastotales']) ? $_POST["proteinastotales"] : "");
	    $albumina = limpiar(isset($_POST['albumina']) ? $_POST["albumina"] : "");
	    $globulina = limpiar(isset($_POST['globulina']) ? $_POST["globulina"] : "");
	    $bilirrubinatotal = limpiar(isset($_POST['bilirrubinatotal']) ? $_POST["bilirrubinatotal"] : "");
	    $bilirrubinadirecta = limpiar(isset($_POST['bilirrubinadirecta']) ? $_POST["bilirrubinadirecta"] : "");
	    $bilirrubinaindirecta = limpiar(isset($_POST['bilirrubinaindirecta']) ? $_POST["bilirrubinaindirecta"] : "");
	    $fosfatasaalcalina = limpiar(isset($_POST['fosfatasaalcalina']) ? $_POST["fosfatasaalcalina"] : "");
	    $tgo = limpiar(isset($_POST['tgo']) ? $_POST["tgo"] : "");
	    $tgp = limpiar(isset($_POST['tgp']) ? $_POST["tgp"] : "");
	    $amilasa = limpiar(isset($_POST['amilasa']) ? $_POST["amilasa"] : "");
	    $observacionesquimica = limpiar(isset($_POST['observacionesquimica']) ? $_POST["observacionesquimica"] : "");
	    $colorquimico = limpiar(isset($_POST['colorquimico']) ? $_POST["colorquimico"] : "");
	    $aspectoquimico = limpiar(isset($_POST['aspectoquimico']) ? $_POST["aspectoquimico"] : "");
	    $phquimico = limpiar(isset($_POST['phquimico']) ? $_POST["phquimico"] : "");
	    $densidadquimico = limpiar(isset($_POST['densidadquimico']) ? $_POST["densidadquimico"] : "");
	    $proteinaquimico = limpiar(isset($_POST['proteinaquimico']) ? $_POST["proteinaquimico"] : "");
	    $glucosaquimico = limpiar(isset($_POST['glucosaquimico']) ? $_POST["glucosaquimico"] : "");
	    $cetonaquimico = limpiar(isset($_POST['cetonaquimico']) ? $_POST["cetonaquimico"] : "");
	    $bilirrubinaquimico = limpiar(isset($_POST['bilirrubinaquimico']) ? $_POST["bilirrubinaquimico"] : "");
	    $urobilinogenoquimico = limpiar(isset($_POST['urobilinogenoquimico']) ? $_POST["urobilinogenoquimico"] : "");
	    $sangrequimico = limpiar(isset($_POST['sangrequimico']) ? $_POST["sangrequimico"] : "");
	    $leucocitosquimico = limpiar(isset($_POST['leucocitosquimico']) ? $_POST["leucocitosquimico"] : "");
	    $nitritosquimico = limpiar(isset($_POST['nitritosquimico']) ? $_POST["nitritosquimico"] : "");
	    $celulasepibajas = limpiar(isset($_POST['celulasepibajas']) ? $_POST["celulasepibajas"] : "");
	    $celulasepialtas = limpiar(isset($_POST['celulasepialtas']) ? $_POST["celulasepialtas"] : "");
	    $bacteriasmicroscopico = limpiar(isset($_POST['bacteriasmicroscopico']) ? $_POST["bacteriasmicroscopico"] : "");
	    $leucocitosmicroscopico = limpiar(isset($_POST['leucocitosmicroscopico']) ? $_POST["leucocitosmicroscopico"] : "");
	    $hematiesmicroscopico = limpiar(isset($_POST['hematiesmicroscopico']) ? $_POST["hematiesmicroscopico"] : "");
	    $cristalesmicroscopico = limpiar(isset($_POST['cristalesmicroscopico']) ? $_POST["cristalesmicroscopico"] : "");
	    $cilindrosmicroscopico = limpiar(isset($_POST['cilindrosmicroscopico']) ? $_POST["cilindrosmicroscopico"] : "");
	    $mocomicroscopico = limpiar(isset($_POST['mocomicroscopico']) ? $_POST["mocomicroscopico"] : "");
	    $observacionesuroanalisis = limpiar(isset($_POST['observacionesuroanalisis']) ? $_POST["observacionesuroanalisis"] : "");
	    $pruebaembarazo = limpiar(isset($_POST['pruebaembarazo']) ? $_POST["pruebaembarazo"] : "");
	    $rprsisfilis = limpiar(isset($_POST['rprsisfilis']) ? $_POST["rprsisfilis"] : "");
	    $ratest = limpiar(isset($_POST['ratest']) ? $_POST["ratest"] : "");
	    $astos = limpiar(isset($_POST['astos']) ? $_POST["astos"] : "");
	    $observacionesinmunologia = limpiar(isset($_POST['observacionesinmunologia']) ? $_POST["observacionesinmunologia"] : "");
	    $phfresco = limpiar(isset($_POST['phfresco']) ? $_POST["phfresco"] : "");
	    $celulasfresco = limpiar(isset($_POST['celulasfresco']) ? $_POST["celulasfresco"] : "");
	    $testaminafresco = limpiar(isset($_POST['testaminafresco']) ? $_POST["testaminafresco"] : "");
	    $hongosfresco = limpiar(isset($_POST['hongosfresco']) ? $_POST["hongosfresco"] : "");
	    $trichomonafresco = limpiar(isset($_POST['trichomonafresco']) ? $_POST["trichomonafresco"] : "");
	    $leucitofresco = limpiar(isset($_POST['leucitofresco']) ? $_POST["leucitofresco"] : "");
	    $hematiesfresco = limpiar(isset($_POST['hematiesfresco']) ? $_POST["hematiesfresco"] : "");
	    $basilosgranpositivo = limpiar(isset($_POST['basilosgranpositivo']) ? $_POST["basilosgranpositivo"] : "");
	    $basilosgrannegativo = limpiar(isset($_POST['basilosgrannegativo']) ? $_POST["basilosgrannegativo"] : "");
	    $cocobacilogran = limpiar(isset($_POST['cocobacilogran']) ? $_POST["cocobacilogran"] : "");
	    $diplococogran = limpiar(isset($_POST['diplococogran']) ? $_POST["diplococogran"] : "");
	    $blastoconidiasgran = limpiar(isset($_POST['blastoconidiasgran']) ? $_POST["blastoconidiasgran"] : "");
	    $pseudomiceliogran = limpiar(isset($_POST['pseudomiceliogran']) ? $_POST["pseudomiceliogran"] : "");
	    $pmngran = limpiar(isset($_POST['pmngran']) ? $_POST["pmngran"] : "");
	    $observacionesfrotis = limpiar(isset($_POST['observacionesfrotis']) ? $_POST["observacionesfrotis"] : "");
	    $colorparasitologia = limpiar(isset($_POST['colorparasitologia']) ? $_POST["colorparasitologia"] : "");
	    $consistenciaparasitologia = limpiar(isset($_POST['consistenciaparasitologia']) ? $_POST["consistenciaparasitologia"] : "");
	    $phparasitologia = limpiar(isset($_POST['phparasitologia']) ? $_POST["phparasitologia"] : "");
	    $sangreocultaparasitologia = limpiar(isset($_POST['sangreocultaparasitologia']) ? $_POST["sangreocultaparasitologia"] : "");
	    $azucaresparasitologia = limpiar(isset($_POST['azucaresparasitologia']) ? $_POST["azucaresparasitologia"] : "");
	    $almidonesparasitologia = limpiar(isset($_POST['almidonesparasitologia']) ? $_POST["almidonesparasitologia"] : "");
	    $hongosparasitologia = limpiar(isset($_POST['hongosparasitologia']) ? $_POST["hongosparasitologia"] : "");
	    $trichomonaparasitologia = limpiar(isset($_POST['trichomonaparasitologia']) ? $_POST["trichomonaparasitologia"] : "");
	    $iodamoebaparasitologia = limpiar(isset($_POST['iodamoebaparasitologia']) ? $_POST["iodamoebaparasitologia"] : "");
	    $otrosparasitologia = limpiar(isset($_POST['otrosparasitologia']) ? $_POST["otrosparasitologia"] : "");
	    $kohmicro = limpiar(isset($_POST['kohmicro']) ? $_POST["kohmicro"] : "");
	    $baciloscopiamicro = limpiar(isset($_POST['baciloscopiamicro']) ? $_POST["baciloscopiamicro"] : "");
		$fechalaboratorio = date("Y-m-d H:i:s");
		$codigo = limpiar($_SESSION["codigo"]);
		$stmt->execute();
		############################# REGISTRO EXAMEN LABORATORIO #############################

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	echo "<span class='fa fa-check-square-o'></span> EL EXAMEN DE LABORATORIO HA SIDO REGISTRADO EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codlaboratorio)."&tipo=".encrypt("CONSTANCIA_LABORATORIO")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Examen de Laboratorio' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR EX&Aacute;MEN DE LABORATORIO</strong></a>";
	exit;
}
############################# FUNCION REGISTRAR LABORATORIOS ##############################

########################## FUNCION BUSQUEDA DE LABORATORIOS ###############################
public function BusquedaLaboratorios()
{
	self::SetNames();
	if($_SESSION["acceso"] == "medico") {

		$sql = "SELECT 
		laboratorios.idlaboratorio,
		laboratorios.codlaboratorio,
		laboratorios.nrodocumento,  
		laboratorios.codcita,
		laboratorios.codsucursal,
		laboratorios.codmedico, 
		laboratorios.codpaciente, 
		laboratorios.hematocrito,
		laboratorios.hemoglobina,
		laboratorios.leucocitos,
		laboratorios.neutrofilos,
		laboratorios.linfocitos,
		laboratorios.eosinofilos,
		laboratorios.monositos,
		laboratorios.basofilos,
		laboratorios.cayados,
		laboratorios.plaquetas,
		laboratorios.reticulositos,
		laboratorios.vsg,
		laboratorios.pt,
		laboratorios.ptt,
		laboratorios.clasifgrupo,
		laboratorios.clasifrh,
		laboratorios.observacioneshematologia,
		laboratorios.glucosa,
		laboratorios.colesteroltotal,
		laboratorios.colesterolhdl,
		laboratorios.colesterolldl,
		laboratorios.trigliceridos,
		laboratorios.acidourico,
		laboratorios.nitrogenoureico,
		laboratorios.creatinina,
		laboratorios.proteinastotales,
		laboratorios.albumina,
		laboratorios.globulina,
		laboratorios.bilirrubinatotal,
		laboratorios.bilirrubinadirecta,
		laboratorios.bilirrubinaindirecta,
		laboratorios.fosfatasaalcalina,
		laboratorios.tgo,
		laboratorios.tgp,
		laboratorios.amilasa,
		laboratorios.observacionesquimica,
		laboratorios.colorquimico,
		laboratorios.aspectoquimico,
		laboratorios.phquimico,
		laboratorios.densidadquimico,
		laboratorios.proteinaquimico,
		laboratorios.glucosaquimico,
		laboratorios.cetonaquimico,
		laboratorios.bilirrubinaquimico,
		laboratorios.urobilinogenoquimico,
		laboratorios.sangrequimico,
		laboratorios.leucocitosquimico,
		laboratorios.nitritosquimico,
		laboratorios.celulasepibajas,
		laboratorios.celulasepialtas,
		laboratorios.bacteriasmicroscopico,
		laboratorios.leucocitosmicroscopico,
		laboratorios.hematiesmicroscopico,
		laboratorios.cristalesmicroscopico,
		laboratorios.cilindrosmicroscopico,
		laboratorios.mocomicroscopico,
		laboratorios.observacionesuroanalisis,
		laboratorios.pruebaembarazo,
		laboratorios.rprsisfilis,
		laboratorios.ratest,
		laboratorios.astos,
		laboratorios.observacionesinmunologia,
		laboratorios.phfresco,
		laboratorios.celulasfresco,
		laboratorios.testaminafresco,
		laboratorios.hongosfresco,
		laboratorios.trichomonafresco,
		laboratorios.leucitofresco,
		laboratorios.hematiesfresco,
		laboratorios.basilosgranpositivo,
		laboratorios.basilosgrannegativo,
		laboratorios.cocobacilogran,
		laboratorios.diplococogran,
		laboratorios.blastoconidiasgran,
		laboratorios.pseudomiceliogran,
		laboratorios.pmngran,
		laboratorios.observacionesfrotis,
		laboratorios.colorparasitologia,
		laboratorios.consistenciaparasitologia,
		laboratorios.phparasitologia,
		laboratorios.sangreocultaparasitologia,
		laboratorios.azucaresparasitologia,
		laboratorios.almidonesparasitologia,
		laboratorios.hongosparasitologia,
		laboratorios.trichomonaparasitologia,
		laboratorios.iodamoebaparasitologia,
		laboratorios.otrosparasitologia,
		laboratorios.kohmicro,
		laboratorios.baciloscopiamicro,
		laboratorios.fechalaboratorio,
		laboratorios.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
		sucursales.idprovincia,
		sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM laboratorios 
		LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico 
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente 
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		DATE_FORMAT(laboratorios.fechalaboratorio,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		AND radiologias.codmedico = '".limpiar($_SESSION["codmedico"])."' 
	   AND radiologias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	} else {
	   
	   $sql = "SELECT 
		laboratorios.idlaboratorio,
		laboratorios.codlaboratorio,
		laboratorios.nrodocumento,  
		laboratorios.codcita,
		laboratorios.codsucursal,
		laboratorios.codmedico, 
		laboratorios.codpaciente, 
		laboratorios.hematocrito,
		laboratorios.hemoglobina,
		laboratorios.leucocitos,
		laboratorios.neutrofilos,
		laboratorios.linfocitos,
		laboratorios.eosinofilos,
		laboratorios.monositos,
		laboratorios.basofilos,
		laboratorios.cayados,
		laboratorios.plaquetas,
		laboratorios.reticulositos,
		laboratorios.vsg,
		laboratorios.pt,
		laboratorios.ptt,
		laboratorios.clasifgrupo,
		laboratorios.clasifrh,
		laboratorios.observacioneshematologia,
		laboratorios.glucosa,
		laboratorios.colesteroltotal,
		laboratorios.colesterolhdl,
		laboratorios.colesterolldl,
		laboratorios.trigliceridos,
		laboratorios.acidourico,
		laboratorios.nitrogenoureico,
		laboratorios.creatinina,
		laboratorios.proteinastotales,
		laboratorios.albumina,
		laboratorios.globulina,
		laboratorios.bilirrubinatotal,
		laboratorios.bilirrubinadirecta,
		laboratorios.bilirrubinaindirecta,
		laboratorios.fosfatasaalcalina,
		laboratorios.tgo,
		laboratorios.tgp,
		laboratorios.amilasa,
		laboratorios.observacionesquimica,
		laboratorios.colorquimico,
		laboratorios.aspectoquimico,
		laboratorios.phquimico,
		laboratorios.densidadquimico,
		laboratorios.proteinaquimico,
		laboratorios.glucosaquimico,
		laboratorios.cetonaquimico,
		laboratorios.bilirrubinaquimico,
		laboratorios.urobilinogenoquimico,
		laboratorios.sangrequimico,
		laboratorios.leucocitosquimico,
		laboratorios.nitritosquimico,
		laboratorios.celulasepibajas,
		laboratorios.celulasepialtas,
		laboratorios.bacteriasmicroscopico,
		laboratorios.leucocitosmicroscopico,
		laboratorios.hematiesmicroscopico,
		laboratorios.cristalesmicroscopico,
		laboratorios.cilindrosmicroscopico,
		laboratorios.mocomicroscopico,
		laboratorios.observacionesuroanalisis,
		laboratorios.pruebaembarazo,
		laboratorios.rprsisfilis,
		laboratorios.ratest,
		laboratorios.astos,
		laboratorios.observacionesinmunologia,
		laboratorios.phfresco,
		laboratorios.celulasfresco,
		laboratorios.testaminafresco,
		laboratorios.hongosfresco,
		laboratorios.trichomonafresco,
		laboratorios.leucitofresco,
		laboratorios.hematiesfresco,
		laboratorios.basilosgranpositivo,
		laboratorios.basilosgrannegativo,
		laboratorios.cocobacilogran,
		laboratorios.diplococogran,
		laboratorios.blastoconidiasgran,
		laboratorios.pseudomiceliogran,
		laboratorios.pmngran,
		laboratorios.observacionesfrotis,
		laboratorios.colorparasitologia,
		laboratorios.consistenciaparasitologia,
		laboratorios.phparasitologia,
		laboratorios.sangreocultaparasitologia,
		laboratorios.azucaresparasitologia,
		laboratorios.almidonesparasitologia,
		laboratorios.hongosparasitologia,
		laboratorios.trichomonaparasitologia,
		laboratorios.iodamoebaparasitologia,
		laboratorios.otrosparasitologia,
		laboratorios.kohmicro,
		laboratorios.baciloscopiamicro,
		laboratorios.fechalaboratorio,
		laboratorios.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
		sucursales.idprovincia,
		sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM laboratorios 
		LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico 
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente 
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		DATE_FORMAT(laboratorios.fechalaboratorio,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	}
}
########################## FUNCION BUSQUEDA DE LABORATORIOS ###############################

############################ FUNCION LISTAR LABORATORIOS #############################
public function ListarLaboratorios()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

		$sql = "SELECT 
		laboratorios.idlaboratorio,
		laboratorios.codlaboratorio,
		laboratorios.nrodocumento,  
		laboratorios.codcita,
		laboratorios.codsucursal,
		laboratorios.codmedico, 
		laboratorios.codpaciente, 
		laboratorios.hematocrito,
		laboratorios.hemoglobina,
		laboratorios.leucocitos,
		laboratorios.neutrofilos,
		laboratorios.linfocitos,
		laboratorios.eosinofilos,
		laboratorios.monositos,
		laboratorios.basofilos,
		laboratorios.cayados,
		laboratorios.plaquetas,
		laboratorios.reticulositos,
		laboratorios.vsg,
		laboratorios.pt,
		laboratorios.ptt,
		laboratorios.clasifgrupo,
		laboratorios.clasifrh,
		laboratorios.observacioneshematologia,
		laboratorios.glucosa,
		laboratorios.colesteroltotal,
		laboratorios.colesterolhdl,
		laboratorios.colesterolldl,
		laboratorios.trigliceridos,
		laboratorios.acidourico,
		laboratorios.nitrogenoureico,
		laboratorios.creatinina,
		laboratorios.proteinastotales,
		laboratorios.albumina,
		laboratorios.globulina,
		laboratorios.bilirrubinatotal,
		laboratorios.bilirrubinadirecta,
		laboratorios.bilirrubinaindirecta,
		laboratorios.fosfatasaalcalina,
		laboratorios.tgo,
		laboratorios.tgp,
		laboratorios.amilasa,
		laboratorios.observacionesquimica,
		laboratorios.colorquimico,
		laboratorios.aspectoquimico,
		laboratorios.phquimico,
		laboratorios.densidadquimico,
		laboratorios.proteinaquimico,
		laboratorios.glucosaquimico,
		laboratorios.cetonaquimico,
		laboratorios.bilirrubinaquimico,
		laboratorios.urobilinogenoquimico,
		laboratorios.sangrequimico,
		laboratorios.leucocitosquimico,
		laboratorios.nitritosquimico,
		laboratorios.celulasepibajas,
		laboratorios.celulasepialtas,
		laboratorios.bacteriasmicroscopico,
		laboratorios.leucocitosmicroscopico,
		laboratorios.hematiesmicroscopico,
		laboratorios.cristalesmicroscopico,
		laboratorios.cilindrosmicroscopico,
		laboratorios.mocomicroscopico,
		laboratorios.observacionesuroanalisis,
		laboratorios.pruebaembarazo,
		laboratorios.rprsisfilis,
		laboratorios.ratest,
		laboratorios.astos,
		laboratorios.observacionesinmunologia,
		laboratorios.phfresco,
		laboratorios.celulasfresco,
		laboratorios.testaminafresco,
		laboratorios.hongosfresco,
		laboratorios.trichomonafresco,
		laboratorios.leucitofresco,
		laboratorios.hematiesfresco,
		laboratorios.basilosgranpositivo,
		laboratorios.basilosgrannegativo,
		laboratorios.cocobacilogran,
		laboratorios.diplococogran,
		laboratorios.blastoconidiasgran,
		laboratorios.pseudomiceliogran,
		laboratorios.pmngran,
		laboratorios.observacionesfrotis,
		laboratorios.colorparasitologia,
		laboratorios.consistenciaparasitologia,
		laboratorios.phparasitologia,
		laboratorios.sangreocultaparasitologia,
		laboratorios.azucaresparasitologia,
		laboratorios.almidonesparasitologia,
		laboratorios.hongosparasitologia,
		laboratorios.trichomonaparasitologia,
		laboratorios.iodamoebaparasitologia,
		laboratorios.otrosparasitologia,
		laboratorios.kohmicro,
		laboratorios.baciloscopiamicro,
		laboratorios.fechalaboratorio,
		laboratorios.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
		sucursales.idprovincia,
		sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM laboratorios 
		LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico 
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente 
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE laboratorios.codmedico = '".limpiar($_SESSION["codmedico"])."'
		AND laboratorios.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

		$sql = "SELECT 
		laboratorios.idlaboratorio,
		laboratorios.codlaboratorio,
		laboratorios.nrodocumento,  
		laboratorios.codcita,
		laboratorios.codsucursal,
		laboratorios.codmedico, 
		laboratorios.codpaciente, 
		laboratorios.hematocrito,
		laboratorios.hemoglobina,
		laboratorios.leucocitos,
		laboratorios.neutrofilos,
		laboratorios.linfocitos,
		laboratorios.eosinofilos,
		laboratorios.monositos,
		laboratorios.basofilos,
		laboratorios.cayados,
		laboratorios.plaquetas,
		laboratorios.reticulositos,
		laboratorios.vsg,
		laboratorios.pt,
		laboratorios.ptt,
		laboratorios.clasifgrupo,
		laboratorios.clasifrh,
		laboratorios.observacioneshematologia,
		laboratorios.glucosa,
		laboratorios.colesteroltotal,
		laboratorios.colesterolhdl,
		laboratorios.colesterolldl,
		laboratorios.trigliceridos,
		laboratorios.acidourico,
		laboratorios.nitrogenoureico,
		laboratorios.creatinina,
		laboratorios.proteinastotales,
		laboratorios.albumina,
		laboratorios.globulina,
		laboratorios.bilirrubinatotal,
		laboratorios.bilirrubinadirecta,
		laboratorios.bilirrubinaindirecta,
		laboratorios.fosfatasaalcalina,
		laboratorios.tgo,
		laboratorios.tgp,
		laboratorios.amilasa,
		laboratorios.observacionesquimica,
		laboratorios.colorquimico,
		laboratorios.aspectoquimico,
		laboratorios.phquimico,
		laboratorios.densidadquimico,
		laboratorios.proteinaquimico,
		laboratorios.glucosaquimico,
		laboratorios.cetonaquimico,
		laboratorios.bilirrubinaquimico,
		laboratorios.urobilinogenoquimico,
		laboratorios.sangrequimico,
		laboratorios.leucocitosquimico,
		laboratorios.nitritosquimico,
		laboratorios.celulasepibajas,
		laboratorios.celulasepialtas,
		laboratorios.bacteriasmicroscopico,
		laboratorios.leucocitosmicroscopico,
		laboratorios.hematiesmicroscopico,
		laboratorios.cristalesmicroscopico,
		laboratorios.cilindrosmicroscopico,
		laboratorios.mocomicroscopico,
		laboratorios.observacionesuroanalisis,
		laboratorios.pruebaembarazo,
		laboratorios.rprsisfilis,
		laboratorios.ratest,
		laboratorios.astos,
		laboratorios.observacionesinmunologia,
		laboratorios.phfresco,
		laboratorios.celulasfresco,
		laboratorios.testaminafresco,
		laboratorios.hongosfresco,
		laboratorios.trichomonafresco,
		laboratorios.leucitofresco,
		laboratorios.hematiesfresco,
		laboratorios.basilosgranpositivo,
		laboratorios.basilosgrannegativo,
		laboratorios.cocobacilogran,
		laboratorios.diplococogran,
		laboratorios.blastoconidiasgran,
		laboratorios.pseudomiceliogran,
		laboratorios.pmngran,
		laboratorios.observacionesfrotis,
		laboratorios.colorparasitologia,
		laboratorios.consistenciaparasitologia,
		laboratorios.phparasitologia,
		laboratorios.sangreocultaparasitologia,
		laboratorios.azucaresparasitologia,
		laboratorios.almidonesparasitologia,
		laboratorios.hongosparasitologia,
		laboratorios.trichomonaparasitologia,
		laboratorios.iodamoebaparasitologia,
		laboratorios.otrosparasitologia,
		laboratorios.kohmicro,
		laboratorios.baciloscopiamicro,
		laboratorios.fechalaboratorio,
		laboratorios.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
		sucursales.idprovincia,
		sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM laboratorios 
		LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico 
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente 
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR LABORATORIOS #############################

########################### FUNCION ID LABORATORIOS ###############################
public function LaboratoriosPorId()
{
	self::SetNames();
	$sql = "SELECT 
	laboratorios.idlaboratorio,
	laboratorios.codlaboratorio,
	laboratorios.nrodocumento,  
	laboratorios.codcita,
	laboratorios.codsucursal,
	laboratorios.codmedico, 
	laboratorios.codpaciente, 
	laboratorios.hematocrito,
	laboratorios.hemoglobina,
	laboratorios.leucocitos,
	laboratorios.neutrofilos,
	laboratorios.linfocitos,
	laboratorios.eosinofilos,
	laboratorios.monositos,
	laboratorios.basofilos,
	laboratorios.cayados,
	laboratorios.plaquetas,
	laboratorios.reticulositos,
	laboratorios.vsg,
	laboratorios.pt,
	laboratorios.ptt,
	laboratorios.clasifgrupo,
	laboratorios.clasifrh,
	laboratorios.observacioneshematologia,
	laboratorios.glucosa,
	laboratorios.colesteroltotal,
	laboratorios.colesterolhdl,
	laboratorios.colesterolldl,
	laboratorios.trigliceridos,
	laboratorios.acidourico,
	laboratorios.nitrogenoureico,
	laboratorios.creatinina,
	laboratorios.proteinastotales,
	laboratorios.albumina,
	laboratorios.globulina,
	laboratorios.bilirrubinatotal,
	laboratorios.bilirrubinadirecta,
	laboratorios.bilirrubinaindirecta,
	laboratorios.fosfatasaalcalina,
	laboratorios.tgo,
	laboratorios.tgp,
	laboratorios.amilasa,
	laboratorios.observacionesquimica,
	laboratorios.colorquimico,
	laboratorios.aspectoquimico,
	laboratorios.phquimico,
	laboratorios.densidadquimico,
	laboratorios.proteinaquimico,
	laboratorios.glucosaquimico,
	laboratorios.cetonaquimico,
	laboratorios.bilirrubinaquimico,
	laboratorios.urobilinogenoquimico,
	laboratorios.sangrequimico,
	laboratorios.leucocitosquimico,
	laboratorios.nitritosquimico,
	laboratorios.celulasepibajas,
	laboratorios.celulasepialtas,
	laboratorios.bacteriasmicroscopico,
	laboratorios.leucocitosmicroscopico,
	laboratorios.hematiesmicroscopico,
	laboratorios.cristalesmicroscopico,
	laboratorios.cilindrosmicroscopico,
	laboratorios.mocomicroscopico,
	laboratorios.observacionesuroanalisis,
	laboratorios.pruebaembarazo,
	laboratorios.rprsisfilis,
	laboratorios.ratest,
	laboratorios.astos,
	laboratorios.observacionesinmunologia,
	laboratorios.phfresco,
	laboratorios.celulasfresco,
	laboratorios.testaminafresco,
	laboratorios.hongosfresco,
	laboratorios.trichomonafresco,
	laboratorios.leucitofresco,
	laboratorios.hematiesfresco,
	laboratorios.basilosgranpositivo,
	laboratorios.basilosgrannegativo,
	laboratorios.cocobacilogran,
	laboratorios.diplococogran,
	laboratorios.blastoconidiasgran,
	laboratorios.pseudomiceliogran,
	laboratorios.pmngran,
	laboratorios.observacionesfrotis,
	laboratorios.colorparasitologia,
	laboratorios.consistenciaparasitologia,
	laboratorios.phparasitologia,
	laboratorios.sangreocultaparasitologia,
	laboratorios.azucaresparasitologia,
	laboratorios.almidonesparasitologia,
	laboratorios.hongosparasitologia,
	laboratorios.trichomonaparasitologia,
	laboratorios.iodamoebaparasitologia,
	laboratorios.otrosparasitologia,
	laboratorios.kohmicro,
	laboratorios.baciloscopiamicro,
	laboratorios.fechalaboratorio,
	laboratorios.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM laboratorios 
	LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia 
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico 
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento  
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE laboratorios.codlaboratorio = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID LABORATORIOS ###############################

########################## FUNCION ACTUALIZAR LABORATORIOS #######################
public function ActualizarLaboratorios()
{
	self::SetNames();
	if(empty($_POST["codlaboratorio"]) or empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

    $sql = " UPDATE laboratorios set "
	  ." hematocrito = ?, "
	  ." hemoglobina = ?, "
	  ." leucocitos = ?, "
	  ." neutrofilos = ?, "
	  ." linfocitos = ?, "
	  ." eosinofilos = ?, "
	  ." monositos = ?, "
	  ." basofilos = ?, "
	  ." cayados = ?, "
	  ." plaquetas = ?, "
	  ." reticulositos = ?, "
	  ." vsg = ?, "
	  ." pt = ?, "
	  ." ptt = ?, "
	  ." clasifgrupo = ?, "
	  ." clasifrh = ?, "
	  ." observacioneshematologia = ?, "
	  ." glucosa = ?, "
	  ." colesteroltotal = ?, "
	  ." colesterolhdl = ?, "
	  ." colesterolldl = ?, "
	  ." trigliceridos = ?, "
	  ." acidourico = ?, "
	  ." nitrogenoureico = ?, "
	  ." creatinina = ?, "
	  ." proteinastotales = ?, "
	  ." albumina = ?, "
	  ." globulina = ?, "
	  ." bilirrubinatotal = ?, "
	  ." bilirrubinadirecta = ?, "
	  ." bilirrubinaindirecta = ?, "
	  ." fosfatasaalcalina = ?, "
	  ." tgo = ?, "
	  ." tgp = ?, "
	  ." amilasa = ?, "
	  ." observacionesquimica = ?, "
	  ." colorquimico = ?, "
	  ." aspectoquimico = ?, "
	  ." phquimico = ?, "
	  ." densidadquimico = ?, "
	  ." proteinaquimico = ?, "
	  ." glucosaquimico = ?, "
	  ." cetonaquimico = ?, "
	  ." bilirrubinaquimico = ?, "
	  ." urobilinogenoquimico = ?, "
	  ." sangrequimico = ?, "
	  ." leucocitosquimico = ?, "
	  ." nitritosquimico = ?, "
	  ." celulasepibajas = ?, "
	  ." celulasepialtas = ?, "
	  ." bacteriasmicroscopico = ?, "
	  ." leucocitosmicroscopico = ?, "
	  ." hematiesmicroscopico = ?, "
	  ." cristalesmicroscopico = ?, "
	  ." cilindrosmicroscopico = ?, "
	  ." mocomicroscopico = ?, "
	  ." observacionesuroanalisis = ?, "
	  ." pruebaembarazo = ?, "
	  ." rprsisfilis = ?, "
	  ." ratest = ?, "
	  ." astos = ?, "
	  ." observacionesinmunologia = ?, "
	  ." phfresco = ?, "
	  ." celulasfresco = ?, "
	  ." testaminafresco = ?, "
	  ." hongosfresco = ?, "
	  ." trichomonafresco = ?, "
	  ." leucitofresco = ?, "
	  ." hematiesfresco = ?, "
	  ." basilosgranpositivo = ?, "
	  ." basilosgrannegativo = ?, "
	  ." cocobacilogran = ?, "
	  ." diplococogran = ?, "
	  ." blastoconidiasgran = ?, "
	  ." pseudomiceliogran = ?, "
	  ." pmngran = ?, "
	  ." observacionesfrotis = ?, "
	  ." colorparasitologia = ?, "
	  ." consistenciaparasitologia = ?, "
	  ." phparasitologia = ?, "
	  ." sangreocultaparasitologia = ?, "
	  ." azucaresparasitologia = ?, "
	  ." almidonesparasitologia = ?, "
	  ." hongosparasitologia = ?, "
	  ." trichomonaparasitologia = ?, "
	  ." iodamoebaparasitologia = ?, "
	  ." otrosparasitologia = ?, "
	  ." kohmicro = ?, "
	  ." baciloscopiamicro = ? "
	  ." WHERE "
	  ." codlaboratorio = ?;
	   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $hematocrito);
	$stmt->bindParam(2, $hemoglobina);
	$stmt->bindParam(3, $leucocitos);
	$stmt->bindParam(4, $neutrofilos);
	$stmt->bindParam(5, $linfocitos);
	$stmt->bindParam(6, $eosinofilos);
	$stmt->bindParam(7, $monositos);
	$stmt->bindParam(8, $basofilos);
	$stmt->bindParam(9, $cayados);
	$stmt->bindParam(10, $plaquetas);
	$stmt->bindParam(11, $reticulositos);
	$stmt->bindParam(12, $vsg);
	$stmt->bindParam(13, $pt);
	$stmt->bindParam(14, $ptt);
	$stmt->bindParam(15, $clasifgrupo);
	$stmt->bindParam(16, $clasifrh);
	$stmt->bindParam(17, $observacioneshematologia);
	$stmt->bindParam(18, $glucosa);
	$stmt->bindParam(19, $colesteroltotal);
	$stmt->bindParam(20, $colesterolhdl);
	$stmt->bindParam(21, $colesterolldl);
	$stmt->bindParam(22, $trigliceridos);
	$stmt->bindParam(23, $acidourico);
	$stmt->bindParam(24, $nitrogenoureico);
	$stmt->bindParam(25, $creatinina);
	$stmt->bindParam(26, $proteinastotales);
	$stmt->bindParam(27, $albumina);
	$stmt->bindParam(28, $globulina);
	$stmt->bindParam(29, $bilirrubinatotal);
	$stmt->bindParam(30, $bilirrubinadirecta);
	$stmt->bindParam(31, $bilirrubinaindirecta);
	$stmt->bindParam(32, $fosfatasaalcalina);
	$stmt->bindParam(33, $tgo);
	$stmt->bindParam(34, $tgp);
	$stmt->bindParam(35, $amilasa);
	$stmt->bindParam(36, $observacionesquimica);
	$stmt->bindParam(37, $colorquimico);
	$stmt->bindParam(38, $aspectoquimico);
	$stmt->bindParam(39, $phquimico);
	$stmt->bindParam(40, $densidadquimico);
	$stmt->bindParam(41, $proteinaquimico);
	$stmt->bindParam(42, $glucosaquimico);
	$stmt->bindParam(43, $cetonaquimico);
	$stmt->bindParam(44, $bilirrubinaquimico);
	$stmt->bindParam(45, $urobilinogenoquimico);
	$stmt->bindParam(46, $sangrequimico);
	$stmt->bindParam(47, $leucocitosquimico);
	$stmt->bindParam(48, $nitritosquimico);
	$stmt->bindParam(49, $celulasepibajas);
	$stmt->bindParam(50, $celulasepialtas);
	$stmt->bindParam(51, $bacteriasmicroscopico);
	$stmt->bindParam(52, $leucocitosmicroscopico);
	$stmt->bindParam(53, $hematiesmicroscopico);
	$stmt->bindParam(54, $cristalesmicroscopico);
	$stmt->bindParam(55, $cilindrosmicroscopico);
	$stmt->bindParam(56, $mocomicroscopico);
	$stmt->bindParam(57, $observacionesuroanalisis);
	$stmt->bindParam(58, $pruebaembarazo);
	$stmt->bindParam(59, $rprsisfilis);
	$stmt->bindParam(60, $ratest);
	$stmt->bindParam(61, $astos);
	$stmt->bindParam(62, $observacionesinmunologia);
	$stmt->bindParam(63, $phfresco);
	$stmt->bindParam(64, $celulasfresco);
	$stmt->bindParam(65, $testaminafresco);
	$stmt->bindParam(66, $hongosfresco);
	$stmt->bindParam(67, $trichomonafresco);
	$stmt->bindParam(68, $leucitofresco);
	$stmt->bindParam(69, $hematiesfresco);
	$stmt->bindParam(70, $basilosgranpositivo);
	$stmt->bindParam(71, $basilosgrannegativo);
	$stmt->bindParam(72, $cocobacilogran);
	$stmt->bindParam(73, $diplococogran);
	$stmt->bindParam(74, $blastoconidiasgran);
	$stmt->bindParam(75, $pseudomiceliogran);
	$stmt->bindParam(76, $pmngran);
	$stmt->bindParam(77, $observacionesfrotis);
	$stmt->bindParam(78, $colorparasitologia);
	$stmt->bindParam(79, $consistenciaparasitologia);
	$stmt->bindParam(80, $phparasitologia);
	$stmt->bindParam(81, $sangreocultaparasitologia);
	$stmt->bindParam(82, $azucaresparasitologia);
	$stmt->bindParam(83, $almidonesparasitologia);
	$stmt->bindParam(84, $hongosparasitologia);
	$stmt->bindParam(85, $trichomonaparasitologia);
	$stmt->bindParam(86, $iodamoebaparasitologia);
	$stmt->bindParam(87, $otrosparasitologia);
	$stmt->bindParam(88, $kohmicro);
	$stmt->bindParam(89, $baciloscopiamicro);
	$stmt->bindParam(90, $codlaboratorio);
			
	$hematocrito = limpiar(isset($_POST['hematocrito']) ? $_POST["hematocrito"] : "");
    $hemoglobina = limpiar(isset($_POST['hemoglobina']) ? $_POST["hemoglobina"] : "");
    $leucocitos = limpiar(isset($_POST['leucocitos']) ? $_POST["leucocitos"] : "");
    $neutrofilos = limpiar(isset($_POST['neutrofilos']) ? $_POST["neutrofilos"] : "");
    $linfocitos = limpiar(isset($_POST['linfocitos']) ? $_POST["linfocitos"] : "");
    $eosinofilos = limpiar(isset($_POST['eosinofilos']) ? $_POST["eosinofilos"] : "");
    $monositos = limpiar(isset($_POST['monositos']) ? $_POST["monositos"] : "");
    $basofilos = limpiar(isset($_POST['basofilos']) ? $_POST["basofilos"] : "");
    $cayados = limpiar(isset($_POST['cayados']) ? $_POST["cayados"] : "");
    $plaquetas = limpiar(isset($_POST['plaquetas']) ? $_POST["plaquetas"] : "");
    $reticulositos = limpiar(isset($_POST['reticulositos']) ? $_POST["reticulositos"] : "");
    $vsg = limpiar(isset($_POST['vsg']) ? $_POST["vsg"] : "");
    $pt = limpiar(isset($_POST['pt']) ? $_POST["pt"] : "");
    $ptt = limpiar(isset($_POST['ptt']) ? $_POST["ptt"] : "");
    $clasifgrupo = limpiar(isset($_POST['clasifgrupo']) ? $_POST["clasifgrupo"] : "");
    $clasifrh = limpiar(isset($_POST['clasifrh']) ? $_POST["clasifrh"] : "");
    $observacioneshematologia = limpiar(isset($_POST['observacioneshematologia']) ? $_POST["observacioneshematologia"] : "");
    $glucosa = limpiar(isset($_POST['glucosa']) ? $_POST["glucosa"] : "");
    $colesteroltotal = limpiar(isset($_POST['colesteroltotal']) ? $_POST["colesteroltotal"] : "");
    $colesterolhdl = limpiar(isset($_POST['colesterolhdl']) ? $_POST["colesterolhdl"] : "");
    $colesterolldl = limpiar(isset($_POST['colesterolldl']) ? $_POST["colesterolldl"] : "");
    $trigliceridos = limpiar(isset($_POST['trigliceridos']) ? $_POST["trigliceridos"] : "");
    $acidourico = limpiar(isset($_POST['acidourico']) ? $_POST["acidourico"] : "");
    $nitrogenoureico = limpiar(isset($_POST['nitrogenoureico']) ? $_POST["nitrogenoureico"] : "");
    $creatinina = limpiar(isset($_POST['creatinina']) ? $_POST["creatinina"] : "");
    $proteinastotales = limpiar(isset($_POST['proteinastotales']) ? $_POST["proteinastotales"] : "");
    $albumina = limpiar(isset($_POST['albumina']) ? $_POST["albumina"] : "");
    $globulina = limpiar(isset($_POST['globulina']) ? $_POST["globulina"] : "");
    $bilirrubinatotal = limpiar(isset($_POST['bilirrubinatotal']) ? $_POST["bilirrubinatotal"] : "");
    $bilirrubinadirecta = limpiar(isset($_POST['bilirrubinadirecta']) ? $_POST["bilirrubinadirecta"] : "");
    $bilirrubinaindirecta = limpiar(isset($_POST['bilirrubinaindirecta']) ? $_POST["bilirrubinaindirecta"] : "");
    $fosfatasaalcalina = limpiar(isset($_POST['fosfatasaalcalina']) ? $_POST["fosfatasaalcalina"] : "");
    $tgo = limpiar(isset($_POST['tgo']) ? $_POST["tgo"] : "");
    $tgp = limpiar(isset($_POST['tgp']) ? $_POST["tgp"] : "");
    $amilasa = limpiar(isset($_POST['amilasa']) ? $_POST["amilasa"] : "");
    $observacionesquimica = limpiar(isset($_POST['observacionesquimica']) ? $_POST["observacionesquimica"] : "");
    $colorquimico = limpiar(isset($_POST['colorquimico']) ? $_POST["colorquimico"] : "");
    $aspectoquimico = limpiar(isset($_POST['aspectoquimico']) ? $_POST["aspectoquimico"] : "");
    $phquimico = limpiar(isset($_POST['phquimico']) ? $_POST["phquimico"] : "");
    $densidadquimico = limpiar(isset($_POST['densidadquimico']) ? $_POST["densidadquimico"] : "");
    $proteinaquimico = limpiar(isset($_POST['proteinaquimico']) ? $_POST["proteinaquimico"] : "");
    $glucosaquimico = limpiar(isset($_POST['glucosaquimico']) ? $_POST["glucosaquimico"] : "");
    $cetonaquimico = limpiar(isset($_POST['cetonaquimico']) ? $_POST["cetonaquimico"] : "");
    $bilirrubinaquimico = limpiar(isset($_POST['bilirrubinaquimico']) ? $_POST["bilirrubinaquimico"] : "");
    $urobilinogenoquimico = limpiar(isset($_POST['urobilinogenoquimico']) ? $_POST["urobilinogenoquimico"] : "");
    $sangrequimico = limpiar(isset($_POST['sangrequimico']) ? $_POST["sangrequimico"] : "");
    $leucocitosquimico = limpiar(isset($_POST['leucocitosquimico']) ? $_POST["leucocitosquimico"] : "");
    $nitritosquimico = limpiar(isset($_POST['nitritosquimico']) ? $_POST["nitritosquimico"] : "");
    $celulasepibajas = limpiar(isset($_POST['celulasepibajas']) ? $_POST["celulasepibajas"] : "");
    $celulasepialtas = limpiar(isset($_POST['celulasepialtas']) ? $_POST["celulasepialtas"] : "");
    $bacteriasmicroscopico = limpiar(isset($_POST['bacteriasmicroscopico']) ? $_POST["bacteriasmicroscopico"] : "");
    $leucocitosmicroscopico = limpiar(isset($_POST['leucocitosmicroscopico']) ? $_POST["leucocitosmicroscopico"] : "");
    $hematiesmicroscopico = limpiar(isset($_POST['hematiesmicroscopico']) ? $_POST["hematiesmicroscopico"] : "");
    $cristalesmicroscopico = limpiar(isset($_POST['cristalesmicroscopico']) ? $_POST["cristalesmicroscopico"] : "");
    $cilindrosmicroscopico = limpiar(isset($_POST['cilindrosmicroscopico']) ? $_POST["cilindrosmicroscopico"] : "");
    $mocomicroscopico = limpiar(isset($_POST['mocomicroscopico']) ? $_POST["mocomicroscopico"] : "");
    $observacionesuroanalisis = limpiar(isset($_POST['observacionesuroanalisis']) ? $_POST["observacionesuroanalisis"] : "");
    $pruebaembarazo = limpiar(isset($_POST['pruebaembarazo']) ? $_POST["pruebaembarazo"] : "");
    $rprsisfilis = limpiar(isset($_POST['rprsisfilis']) ? $_POST["rprsisfilis"] : "");
    $ratest = limpiar(isset($_POST['ratest']) ? $_POST["ratest"] : "");
    $astos = limpiar(isset($_POST['astos']) ? $_POST["astos"] : "");
    $observacionesinmunologia = limpiar(isset($_POST['observacionesinmunologia']) ? $_POST["observacionesinmunologia"] : "");
    $phfresco = limpiar(isset($_POST['phfresco']) ? $_POST["phfresco"] : "");
    $celulasfresco = limpiar(isset($_POST['celulasfresco']) ? $_POST["celulasfresco"] : "");
    $testaminafresco = limpiar(isset($_POST['testaminafresco']) ? $_POST["testaminafresco"] : "");
    $hongosfresco = limpiar(isset($_POST['hongosfresco']) ? $_POST["hongosfresco"] : "");
    $trichomonafresco = limpiar(isset($_POST['trichomonafresco']) ? $_POST["trichomonafresco"] : "");
    $leucitofresco = limpiar(isset($_POST['leucitofresco']) ? $_POST["leucitofresco"] : "");
    $hematiesfresco = limpiar(isset($_POST['hematiesfresco']) ? $_POST["hematiesfresco"] : "");
    $basilosgranpositivo = limpiar(isset($_POST['basilosgranpositivo']) ? $_POST["basilosgranpositivo"] : "");
    $basilosgrannegativo = limpiar(isset($_POST['basilosgrannegativo']) ? $_POST["basilosgrannegativo"] : "");
    $cocobacilogran = limpiar(isset($_POST['cocobacilogran']) ? $_POST["cocobacilogran"] : "");
    $diplococogran = limpiar(isset($_POST['diplococogran']) ? $_POST["diplococogran"] : "");
    $blastoconidiasgran = limpiar(isset($_POST['blastoconidiasgran']) ? $_POST["blastoconidiasgran"] : "");
    $pseudomiceliogran = limpiar(isset($_POST['pseudomiceliogran']) ? $_POST["pseudomiceliogran"] : "");
    $pmngran = limpiar(isset($_POST['pmngran']) ? $_POST["pmngran"] : "");
    $observacionesfrotis = limpiar(isset($_POST['observacionesfrotis']) ? $_POST["observacionesfrotis"] : "");
    $colorparasitologia = limpiar(isset($_POST['colorparasitologia']) ? $_POST["colorparasitologia"] : "");
    $consistenciaparasitologia = limpiar(isset($_POST['consistenciaparasitologia']) ? $_POST["consistenciaparasitologia"] : "");
    $phparasitologia = limpiar(isset($_POST['phparasitologia']) ? $_POST["phparasitologia"] : "");
    $sangreocultaparasitologia = limpiar(isset($_POST['sangreocultaparasitologia']) ? $_POST["sangreocultaparasitologia"] : "");
    $azucaresparasitologia = limpiar(isset($_POST['azucaresparasitologia']) ? $_POST["azucaresparasitologia"] : "");
    $almidonesparasitologia = limpiar(isset($_POST['almidonesparasitologia']) ? $_POST["almidonesparasitologia"] : "");
    $hongosparasitologia = limpiar(isset($_POST['hongosparasitologia']) ? $_POST["hongosparasitologia"] : "");
    $trichomonaparasitologia = limpiar(isset($_POST['trichomonaparasitologia']) ? $_POST["trichomonaparasitologia"] : "");
    $iodamoebaparasitologia = limpiar(isset($_POST['iodamoebaparasitologia']) ? $_POST["iodamoebaparasitologia"] : "");
    $otrosparasitologia = limpiar(isset($_POST['otrosparasitologia']) ? $_POST["otrosparasitologia"] : "");
    $kohmicro = limpiar(isset($_POST['kohmicro']) ? $_POST["kohmicro"] : "");
    $baciloscopiamicro = limpiar(isset($_POST['baciloscopiamicro']) ? $_POST["baciloscopiamicro"] : "");
	$codlaboratorio = limpiar(decrypt($_POST['codlaboratorio']));
    $stmt->execute();

	echo "<span class='fa fa-check-square-o'></span> EL EXAMEN DE LABORATORIO HA SIDO ACTUALIZADO EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codlaboratorio)."&tipo=".encrypt("CONSTANCIA_LABORATORIO")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Examen de Laboratorio' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR EX&Aacute;MEN DE LABORATORIO</strong></a>";
	exit;
}
########################## FUNCION ACTUALIZAR LABORATORIOS #######################

############################ FUNCION ELIMINAR LABORATORIOS ###########################
public function EliminarLaboratorios()
{
	if($_SESSION['acceso'] == "administrador") {
		
		$sql = "DELETE FROM laboratorios WHERE codlaboratorio = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codlaboratorio);
		$codlaboratorio = decrypt($_GET["codlaboratorio"]);
		$stmt->execute();
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
}  
############################ FUNCION ELIMINAR LABORATORIOS ###########################

################################ FUNCION BUSQUEDA LABORATORIOS POR FECHAS ################################
public function BuscarLaboratoriosxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	laboratorios.idlaboratorio,
	laboratorios.codlaboratorio,
	laboratorios.nrodocumento,  
	laboratorios.codcita,
	laboratorios.codsucursal,
	laboratorios.codmedico, 
	laboratorios.codpaciente, 
	laboratorios.hematocrito,
	laboratorios.hemoglobina,
	laboratorios.leucocitos,
	laboratorios.neutrofilos,
	laboratorios.linfocitos,
	laboratorios.eosinofilos,
	laboratorios.monositos,
	laboratorios.basofilos,
	laboratorios.cayados,
	laboratorios.plaquetas,
	laboratorios.reticulositos,
	laboratorios.vsg,
	laboratorios.pt,
	laboratorios.ptt,
	laboratorios.clasifgrupo,
	laboratorios.clasifrh,
	laboratorios.observacioneshematologia,
	laboratorios.glucosa,
	laboratorios.colesteroltotal,
	laboratorios.colesterolhdl,
	laboratorios.colesterolldl,
	laboratorios.trigliceridos,
	laboratorios.acidourico,
	laboratorios.nitrogenoureico,
	laboratorios.creatinina,
	laboratorios.proteinastotales,
	laboratorios.albumina,
	laboratorios.globulina,
	laboratorios.bilirrubinatotal,
	laboratorios.bilirrubinadirecta,
	laboratorios.bilirrubinaindirecta,
	laboratorios.fosfatasaalcalina,
	laboratorios.tgo,
	laboratorios.tgp,
	laboratorios.amilasa,
	laboratorios.observacionesquimica,
	laboratorios.colorquimico,
	laboratorios.aspectoquimico,
	laboratorios.phquimico,
	laboratorios.densidadquimico,
	laboratorios.proteinaquimico,
	laboratorios.glucosaquimico,
	laboratorios.cetonaquimico,
	laboratorios.bilirrubinaquimico,
	laboratorios.urobilinogenoquimico,
	laboratorios.sangrequimico,
	laboratorios.leucocitosquimico,
	laboratorios.nitritosquimico,
	laboratorios.celulasepibajas,
	laboratorios.celulasepialtas,
	laboratorios.bacteriasmicroscopico,
	laboratorios.leucocitosmicroscopico,
	laboratorios.hematiesmicroscopico,
	laboratorios.cristalesmicroscopico,
	laboratorios.cilindrosmicroscopico,
	laboratorios.mocomicroscopico,
	laboratorios.observacionesuroanalisis,
	laboratorios.pruebaembarazo,
	laboratorios.rprsisfilis,
	laboratorios.ratest,
	laboratorios.astos,
	laboratorios.observacionesinmunologia,
	laboratorios.phfresco,
	laboratorios.celulasfresco,
	laboratorios.testaminafresco,
	laboratorios.hongosfresco,
	laboratorios.trichomonafresco,
	laboratorios.leucitofresco,
	laboratorios.hematiesfresco,
	laboratorios.basilosgranpositivo,
	laboratorios.basilosgrannegativo,
	laboratorios.cocobacilogran,
	laboratorios.diplococogran,
	laboratorios.blastoconidiasgran,
	laboratorios.pseudomiceliogran,
	laboratorios.pmngran,
	laboratorios.observacionesfrotis,
	laboratorios.colorparasitologia,
	laboratorios.consistenciaparasitologia,
	laboratorios.phparasitologia,
	laboratorios.sangreocultaparasitologia,
	laboratorios.azucaresparasitologia,
	laboratorios.almidonesparasitologia,
	laboratorios.hongosparasitologia,
	laboratorios.trichomonaparasitologia,
	laboratorios.iodamoebaparasitologia,
	laboratorios.otrosparasitologia,
	laboratorios.kohmicro,
	laboratorios.baciloscopiamicro,
	laboratorios.fechalaboratorio,
	laboratorios.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM laboratorios 
	LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE laboratorios.codsucursal = ?
	AND laboratorios.codmedico = ?
	AND DATE_FORMAT(laboratorios.fechalaboratorio,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY laboratorios.fechalaboratorio DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	laboratorios.idlaboratorio,
	laboratorios.codlaboratorio,
	laboratorios.nrodocumento,  
	laboratorios.codcita,
	laboratorios.codsucursal,
	laboratorios.codmedico, 
	laboratorios.codpaciente, 
	laboratorios.hematocrito,
	laboratorios.hemoglobina,
	laboratorios.leucocitos,
	laboratorios.neutrofilos,
	laboratorios.linfocitos,
	laboratorios.eosinofilos,
	laboratorios.monositos,
	laboratorios.basofilos,
	laboratorios.cayados,
	laboratorios.plaquetas,
	laboratorios.reticulositos,
	laboratorios.vsg,
	laboratorios.pt,
	laboratorios.ptt,
	laboratorios.clasifgrupo,
	laboratorios.clasifrh,
	laboratorios.observacioneshematologia,
	laboratorios.glucosa,
	laboratorios.colesteroltotal,
	laboratorios.colesterolhdl,
	laboratorios.colesterolldl,
	laboratorios.trigliceridos,
	laboratorios.acidourico,
	laboratorios.nitrogenoureico,
	laboratorios.creatinina,
	laboratorios.proteinastotales,
	laboratorios.albumina,
	laboratorios.globulina,
	laboratorios.bilirrubinatotal,
	laboratorios.bilirrubinadirecta,
	laboratorios.bilirrubinaindirecta,
	laboratorios.fosfatasaalcalina,
	laboratorios.tgo,
	laboratorios.tgp,
	laboratorios.amilasa,
	laboratorios.observacionesquimica,
	laboratorios.colorquimico,
	laboratorios.aspectoquimico,
	laboratorios.phquimico,
	laboratorios.densidadquimico,
	laboratorios.proteinaquimico,
	laboratorios.glucosaquimico,
	laboratorios.cetonaquimico,
	laboratorios.bilirrubinaquimico,
	laboratorios.urobilinogenoquimico,
	laboratorios.sangrequimico,
	laboratorios.leucocitosquimico,
	laboratorios.nitritosquimico,
	laboratorios.celulasepibajas,
	laboratorios.celulasepialtas,
	laboratorios.bacteriasmicroscopico,
	laboratorios.leucocitosmicroscopico,
	laboratorios.hematiesmicroscopico,
	laboratorios.cristalesmicroscopico,
	laboratorios.cilindrosmicroscopico,
	laboratorios.mocomicroscopico,
	laboratorios.observacionesuroanalisis,
	laboratorios.pruebaembarazo,
	laboratorios.rprsisfilis,
	laboratorios.ratest,
	laboratorios.astos,
	laboratorios.observacionesinmunologia,
	laboratorios.phfresco,
	laboratorios.celulasfresco,
	laboratorios.testaminafresco,
	laboratorios.hongosfresco,
	laboratorios.trichomonafresco,
	laboratorios.leucitofresco,
	laboratorios.hematiesfresco,
	laboratorios.basilosgranpositivo,
	laboratorios.basilosgrannegativo,
	laboratorios.cocobacilogran,
	laboratorios.diplococogran,
	laboratorios.blastoconidiasgran,
	laboratorios.pseudomiceliogran,
	laboratorios.pmngran,
	laboratorios.observacionesfrotis,
	laboratorios.colorparasitologia,
	laboratorios.consistenciaparasitologia,
	laboratorios.phparasitologia,
	laboratorios.sangreocultaparasitologia,
	laboratorios.azucaresparasitologia,
	laboratorios.almidonesparasitologia,
	laboratorios.hongosparasitologia,
	laboratorios.trichomonaparasitologia,
	laboratorios.iodamoebaparasitologia,
	laboratorios.otrosparasitologia,
	laboratorios.kohmicro,
	laboratorios.baciloscopiamicro,
	laboratorios.fechalaboratorio,
	laboratorios.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM laboratorios 
	LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE laboratorios.codsucursal = ? 
	AND DATE_FORMAT(laboratorios.fechalaboratorio,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY laboratorios.fechalaboratorio DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA LABORATORIOS POR FECHAS ################################

################################ FUNCION BUSQUEDA LABORATORIOS POR MEDICOS ################################
public function BuscarLaboratoriosxMedico()
{
	self::SetNames();
	$sql ="SELECT 
	laboratorios.idlaboratorio,
	laboratorios.codlaboratorio,
	laboratorios.nrodocumento,  
	laboratorios.codcita,
	laboratorios.codsucursal,
	laboratorios.codmedico, 
	laboratorios.codpaciente, 
	laboratorios.hematocrito,
	laboratorios.hemoglobina,
	laboratorios.leucocitos,
	laboratorios.neutrofilos,
	laboratorios.linfocitos,
	laboratorios.eosinofilos,
	laboratorios.monositos,
	laboratorios.basofilos,
	laboratorios.cayados,
	laboratorios.plaquetas,
	laboratorios.reticulositos,
	laboratorios.vsg,
	laboratorios.pt,
	laboratorios.ptt,
	laboratorios.clasifgrupo,
	laboratorios.clasifrh,
	laboratorios.observacioneshematologia,
	laboratorios.glucosa,
	laboratorios.colesteroltotal,
	laboratorios.colesterolhdl,
	laboratorios.colesterolldl,
	laboratorios.trigliceridos,
	laboratorios.acidourico,
	laboratorios.nitrogenoureico,
	laboratorios.creatinina,
	laboratorios.proteinastotales,
	laboratorios.albumina,
	laboratorios.globulina,
	laboratorios.bilirrubinatotal,
	laboratorios.bilirrubinadirecta,
	laboratorios.bilirrubinaindirecta,
	laboratorios.fosfatasaalcalina,
	laboratorios.tgo,
	laboratorios.tgp,
	laboratorios.amilasa,
	laboratorios.observacionesquimica,
	laboratorios.colorquimico,
	laboratorios.aspectoquimico,
	laboratorios.phquimico,
	laboratorios.densidadquimico,
	laboratorios.proteinaquimico,
	laboratorios.glucosaquimico,
	laboratorios.cetonaquimico,
	laboratorios.bilirrubinaquimico,
	laboratorios.urobilinogenoquimico,
	laboratorios.sangrequimico,
	laboratorios.leucocitosquimico,
	laboratorios.nitritosquimico,
	laboratorios.celulasepibajas,
	laboratorios.celulasepialtas,
	laboratorios.bacteriasmicroscopico,
	laboratorios.leucocitosmicroscopico,
	laboratorios.hematiesmicroscopico,
	laboratorios.cristalesmicroscopico,
	laboratorios.cilindrosmicroscopico,
	laboratorios.mocomicroscopico,
	laboratorios.observacionesuroanalisis,
	laboratorios.pruebaembarazo,
	laboratorios.rprsisfilis,
	laboratorios.ratest,
	laboratorios.astos,
	laboratorios.observacionesinmunologia,
	laboratorios.phfresco,
	laboratorios.celulasfresco,
	laboratorios.testaminafresco,
	laboratorios.hongosfresco,
	laboratorios.trichomonafresco,
	laboratorios.leucitofresco,
	laboratorios.hematiesfresco,
	laboratorios.basilosgranpositivo,
	laboratorios.basilosgrannegativo,
	laboratorios.cocobacilogran,
	laboratorios.diplococogran,
	laboratorios.blastoconidiasgran,
	laboratorios.pseudomiceliogran,
	laboratorios.pmngran,
	laboratorios.observacionesfrotis,
	laboratorios.colorparasitologia,
	laboratorios.consistenciaparasitologia,
	laboratorios.phparasitologia,
	laboratorios.sangreocultaparasitologia,
	laboratorios.azucaresparasitologia,
	laboratorios.almidonesparasitologia,
	laboratorios.hongosparasitologia,
	laboratorios.trichomonaparasitologia,
	laboratorios.iodamoebaparasitologia,
	laboratorios.otrosparasitologia,
	laboratorios.kohmicro,
	laboratorios.baciloscopiamicro,
	laboratorios.fechalaboratorio,
	laboratorios.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM laboratorios 
	LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE laboratorios.codsucursal = ? 
	AND laboratorios.codmedico = ? 
	AND DATE_FORMAT(laboratorios.fechalaboratorio,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY laboratorios.fechalaboratorio DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA LABORATORIOS POR MEDICOS ################################

################################ FUNCION BUSQUEDA LABORATORIOS POR PACIENTE ################################
public function BuscarLaboratoriosxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	laboratorios.idlaboratorio,
	laboratorios.codlaboratorio,
	laboratorios.nrodocumento,  
	laboratorios.codcita,
	laboratorios.codsucursal,
	laboratorios.codmedico, 
	laboratorios.codpaciente, 
	laboratorios.hematocrito,
	laboratorios.hemoglobina,
	laboratorios.leucocitos,
	laboratorios.neutrofilos,
	laboratorios.linfocitos,
	laboratorios.eosinofilos,
	laboratorios.monositos,
	laboratorios.basofilos,
	laboratorios.cayados,
	laboratorios.plaquetas,
	laboratorios.reticulositos,
	laboratorios.vsg,
	laboratorios.pt,
	laboratorios.ptt,
	laboratorios.clasifgrupo,
	laboratorios.clasifrh,
	laboratorios.observacioneshematologia,
	laboratorios.glucosa,
	laboratorios.colesteroltotal,
	laboratorios.colesterolhdl,
	laboratorios.colesterolldl,
	laboratorios.trigliceridos,
	laboratorios.acidourico,
	laboratorios.nitrogenoureico,
	laboratorios.creatinina,
	laboratorios.proteinastotales,
	laboratorios.albumina,
	laboratorios.globulina,
	laboratorios.bilirrubinatotal,
	laboratorios.bilirrubinadirecta,
	laboratorios.bilirrubinaindirecta,
	laboratorios.fosfatasaalcalina,
	laboratorios.tgo,
	laboratorios.tgp,
	laboratorios.amilasa,
	laboratorios.observacionesquimica,
	laboratorios.colorquimico,
	laboratorios.aspectoquimico,
	laboratorios.phquimico,
	laboratorios.densidadquimico,
	laboratorios.proteinaquimico,
	laboratorios.glucosaquimico,
	laboratorios.cetonaquimico,
	laboratorios.bilirrubinaquimico,
	laboratorios.urobilinogenoquimico,
	laboratorios.sangrequimico,
	laboratorios.leucocitosquimico,
	laboratorios.nitritosquimico,
	laboratorios.celulasepibajas,
	laboratorios.celulasepialtas,
	laboratorios.bacteriasmicroscopico,
	laboratorios.leucocitosmicroscopico,
	laboratorios.hematiesmicroscopico,
	laboratorios.cristalesmicroscopico,
	laboratorios.cilindrosmicroscopico,
	laboratorios.mocomicroscopico,
	laboratorios.observacionesuroanalisis,
	laboratorios.pruebaembarazo,
	laboratorios.rprsisfilis,
	laboratorios.ratest,
	laboratorios.astos,
	laboratorios.observacionesinmunologia,
	laboratorios.phfresco,
	laboratorios.celulasfresco,
	laboratorios.testaminafresco,
	laboratorios.hongosfresco,
	laboratorios.trichomonafresco,
	laboratorios.leucitofresco,
	laboratorios.hematiesfresco,
	laboratorios.basilosgranpositivo,
	laboratorios.basilosgrannegativo,
	laboratorios.cocobacilogran,
	laboratorios.diplococogran,
	laboratorios.blastoconidiasgran,
	laboratorios.pseudomiceliogran,
	laboratorios.pmngran,
	laboratorios.observacionesfrotis,
	laboratorios.colorparasitologia,
	laboratorios.consistenciaparasitologia,
	laboratorios.phparasitologia,
	laboratorios.sangreocultaparasitologia,
	laboratorios.azucaresparasitologia,
	laboratorios.almidonesparasitologia,
	laboratorios.hongosparasitologia,
	laboratorios.trichomonaparasitologia,
	laboratorios.iodamoebaparasitologia,
	laboratorios.otrosparasitologia,
	laboratorios.kohmicro,
	laboratorios.baciloscopiamicro,
	laboratorios.fechalaboratorio,
	laboratorios.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM laboratorios 
	LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE laboratorios.codsucursal = ?
	AND laboratorios.codmedico = ?
	AND laboratorios.codpaciente = ? 
	ORDER BY laboratorios.fechalaboratorio DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	laboratorios.idlaboratorio,
	laboratorios.codlaboratorio,
	laboratorios.nrodocumento,  
	laboratorios.codcita,
	laboratorios.codsucursal,
	laboratorios.codmedico, 
	laboratorios.codpaciente, 
	laboratorios.hematocrito,
	laboratorios.hemoglobina,
	laboratorios.leucocitos,
	laboratorios.neutrofilos,
	laboratorios.linfocitos,
	laboratorios.eosinofilos,
	laboratorios.monositos,
	laboratorios.basofilos,
	laboratorios.cayados,
	laboratorios.plaquetas,
	laboratorios.reticulositos,
	laboratorios.vsg,
	laboratorios.pt,
	laboratorios.ptt,
	laboratorios.clasifgrupo,
	laboratorios.clasifrh,
	laboratorios.observacioneshematologia,
	laboratorios.glucosa,
	laboratorios.colesteroltotal,
	laboratorios.colesterolhdl,
	laboratorios.colesterolldl,
	laboratorios.trigliceridos,
	laboratorios.acidourico,
	laboratorios.nitrogenoureico,
	laboratorios.creatinina,
	laboratorios.proteinastotales,
	laboratorios.albumina,
	laboratorios.globulina,
	laboratorios.bilirrubinatotal,
	laboratorios.bilirrubinadirecta,
	laboratorios.bilirrubinaindirecta,
	laboratorios.fosfatasaalcalina,
	laboratorios.tgo,
	laboratorios.tgp,
	laboratorios.amilasa,
	laboratorios.observacionesquimica,
	laboratorios.colorquimico,
	laboratorios.aspectoquimico,
	laboratorios.phquimico,
	laboratorios.densidadquimico,
	laboratorios.proteinaquimico,
	laboratorios.glucosaquimico,
	laboratorios.cetonaquimico,
	laboratorios.bilirrubinaquimico,
	laboratorios.urobilinogenoquimico,
	laboratorios.sangrequimico,
	laboratorios.leucocitosquimico,
	laboratorios.nitritosquimico,
	laboratorios.celulasepibajas,
	laboratorios.celulasepialtas,
	laboratorios.bacteriasmicroscopico,
	laboratorios.leucocitosmicroscopico,
	laboratorios.hematiesmicroscopico,
	laboratorios.cristalesmicroscopico,
	laboratorios.cilindrosmicroscopico,
	laboratorios.mocomicroscopico,
	laboratorios.observacionesuroanalisis,
	laboratorios.pruebaembarazo,
	laboratorios.rprsisfilis,
	laboratorios.ratest,
	laboratorios.astos,
	laboratorios.observacionesinmunologia,
	laboratorios.phfresco,
	laboratorios.celulasfresco,
	laboratorios.testaminafresco,
	laboratorios.hongosfresco,
	laboratorios.trichomonafresco,
	laboratorios.leucitofresco,
	laboratorios.hematiesfresco,
	laboratorios.basilosgranpositivo,
	laboratorios.basilosgrannegativo,
	laboratorios.cocobacilogran,
	laboratorios.diplococogran,
	laboratorios.blastoconidiasgran,
	laboratorios.pseudomiceliogran,
	laboratorios.pmngran,
	laboratorios.observacionesfrotis,
	laboratorios.colorparasitologia,
	laboratorios.consistenciaparasitologia,
	laboratorios.phparasitologia,
	laboratorios.sangreocultaparasitologia,
	laboratorios.azucaresparasitologia,
	laboratorios.almidonesparasitologia,
	laboratorios.hongosparasitologia,
	laboratorios.trichomonaparasitologia,
	laboratorios.iodamoebaparasitologia,
	laboratorios.otrosparasitologia,
	laboratorios.kohmicro,
	laboratorios.baciloscopiamicro,
	laboratorios.fechalaboratorio,
	laboratorios.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM laboratorios 
	LEFT JOIN sucursales ON laboratorios.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON laboratorios.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON laboratorios.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE laboratorios.codsucursal = ?
	AND laboratorios.codpaciente = ? 
	ORDER BY laboratorios.fechalaboratorio DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim($_GET['codpaciente']));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA LABORATORIOS POR PACIENTE ################################

##################################### CLASE LABORATORIO ########################################





















##################################### CLASE RADIOLOGIAS ########################################

############################# FUNCION REGISTRAR RADIOLOGIAS ##############################
public function RegistrarRadiologias()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	################ CREO CODIGO DE RADIOLOGIA ####################
	$sql = "SELECT codradiologia FROM radiologias 
	ORDER BY idradiologia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$radiologia=$row["codradiologia"];

	}
	if(empty($radiologia))
	{
		$codradiologia = "01";

	} else {

		$num = substr($radiologia, 0);
        $dig = $num + 1;
        $codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
        $codradiologia = $codigofinal;
	}
    ################ CREO CODIGO DE RADIOLOGIA ###############

    ################ CREO DOCUMENTO DE RADIOLOGIA ####################
	$sql = "SELECT nrodocumento FROM radiologias 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idradiologia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE RADIOLOGIA ###############

		############################# REGISTRO DE RADIOLOGIA #############################
	    $query = "INSERT INTO radiologias values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codradiologia);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $lectura);
		$stmt->bindParam(8, $tipoestudio);
		$stmt->bindParam(9, $diagnostico);
		$stmt->bindParam(10, $fecharadiologia);
		$stmt->bindParam(11, $codigo);				
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	    $lectura = limpiar($_POST["lectura"]);
	    $tipoestudio = limpiar(isset($_POST['tipoestudio']) ? $_POST["tipoestudio"] : "");
	    $diagnostico = limpiar(isset($_POST['diagnostico']) ? $_POST["diagnostico"] : "");
		$fecharadiologia = date("Y-m-d H:i:s");
		$codigo = limpiar($_SESSION["codigo"]);
		$stmt->execute();
		############################# REGISTRO DE RADIOLOGIA #############################

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	if(limpiar($_POST["lectura"]) == 1){

	echo "<span class='fa fa-check-square-o'></span> LA LECTURA RX PARA RADIOLOGIA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codradiologia)."&tipo=".encrypt("CONSTANCIA_RADIOLOGIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Lectura Rx' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR LECTURA RX</strong></a>";
	exit;

	} else {

	echo "<span class='fa fa-check-square-o'></span> LA RADIOLOGIA HA SIDO PROCESADA EXITOSAMENTE";
	exit;

	}
}
############################# FUNCION REGISTRAR RADIOLOGIAS ##############################

########################## FUNCION BUSQUEDA DE RADIOLOGIAS ###############################
public function BusquedaRadiologias()
{
	self::SetNames();
	if($_SESSION["acceso"] == "medico") {

		$sql = "SELECT 
		radiologias.idradiologia,
		radiologias.codradiologia,
		radiologias.nrodocumento,  
		radiologias.codcita,
		radiologias.codsucursal,
		radiologias.codmedico, 
		radiologias.codpaciente, 
		radiologias.lectura,
		radiologias.tipoestudio,
		radiologias.diagnostico,
		radiologias.fecharadiologia,
		radiologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM radiologias 
		LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		radiologias.tipoestudio,
		DATE_FORMAT(radiologias.fecharadiologia,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		AND radiologias.codmedico = '".limpiar($_SESSION["codmedico"])."' 
	   AND radiologias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	} else {
	   
	   $sql = "SELECT 
		radiologias.idradiologia,
		radiologias.codradiologia,
		radiologias.nrodocumento,  
		radiologias.codcita,
		radiologias.codsucursal,
		radiologias.codmedico, 
		radiologias.codpaciente, 
		radiologias.lectura,
		radiologias.tipoestudio,
		radiologias.diagnostico,
		radiologias.fecharadiologia,
		radiologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM radiologias 
		LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		radiologias.tipoestudio,
		DATE_FORMAT(radiologias.fecharadiologia,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	}
}
########################## FUNCION BUSQUEDA DE RADIOLOGIAS ###############################

############################ FUNCION LISTAR RADIOLOGIAS #############################
public function ListarRadiologias()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

		$sql = "SELECT 
		radiologias.idradiologia,
		radiologias.codradiologia,
		radiologias.nrodocumento,  
		radiologias.codcita,
		radiologias.codsucursal,
		radiologias.codmedico, 
		radiologias.codpaciente, 
		radiologias.lectura,
		radiologias.tipoestudio,
		radiologias.diagnostico,
		radiologias.fecharadiologia,
		radiologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM radiologias 
		LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE radiologias.codmedico = '".limpiar($_SESSION["codmedico"])."'
		AND radiologias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

		$sql = "SELECT 
		radiologias.idradiologia,
		radiologias.codradiologia,
		radiologias.nrodocumento,  
		radiologias.codcita,
		radiologias.codsucursal,
		radiologias.codmedico, 
		radiologias.codpaciente, 
		radiologias.lectura,
		radiologias.tipoestudio,
		radiologias.diagnostico,
		radiologias.fecharadiologia,
		radiologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM radiologias 
		LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR RADIOLOGIAS #############################

########################### FUNCION ID RADIOLOGIAS ###############################
public function RadiologiasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	radiologias.idradiologia,
	radiologias.codradiologia,
	radiologias.nrodocumento,  
	radiologias.codcita,
	radiologias.codsucursal,
	radiologias.codmedico, 
	radiologias.codpaciente, 
	radiologias.lectura,
	radiologias.tipoestudio,
	radiologias.diagnostico,
	radiologias.fecharadiologia,
	radiologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM radiologias 
	LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE radiologias.codradiologia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID RADIOLOGIAS ###############################

########################## FUNCION ACTUALIZAR RADIOLOGIAS #######################
public function ActualizarRadiologias()
{
	self::SetNames();
	if(empty($_POST["codradiologia"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	    ############################# ACTUALIZO RADIOLOGIAS #############################
	    $sql = " UPDATE radiologias set "
		  ." lectura = ?, "
		  ." tipoestudio = ?, "
		  ." diagnostico = ? "
		  ." WHERE "
		  ." codradiologia = ?;
		   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $lectura);
		$stmt->bindParam(2, $tipoestudio);
		$stmt->bindParam(3, $diagnostico);	
		$stmt->bindParam(4, $codradiologia);			
			
	    $lectura = limpiar($_POST["lectura"]);
	    $tipoestudio = limpiar(isset($_POST['tipoestudio']) ? $_POST["tipoestudio"] : "");
	    $diagnostico = limpiar(isset($_POST['diagnostico']) ? $_POST["diagnostico"] : "");
		$codradiologia = limpiar(decrypt($_POST['codradiologia']));
	    $stmt->execute();
	    ############################# ACTUALIZO RADIOLOGIAS #############################

	if(limpiar($_POST["lectura"]) == 1){

	echo "<span class='fa fa-check-square-o'></span> LA LECTURA RX PARA RADIOLOGIA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codradiologia)."&tipo=".encrypt("CONSTANCIA_RADIOLOGIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Lectura Rx' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR LECTURA RX</strong></a>";
	exit;

	} else {

	echo "<span class='fa fa-check-square-o'></span> LA RADIOLOGIA HA SIDO ACTUALIZADA EXITOSAMENTE";
	exit;

	}
}
########################## FUNCION ACTUALIZAR RADIOLOGIAS #######################

############################ FUNCION ELIMINAR RADIOLOGIAS ###########################
public function EliminarRadiologias()
{
	if($_SESSION['acceso'] == "administrador") {
		
		$sql = "DELETE FROM radiologias WHERE codradiologia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codradiologia);
		$codradiologia = decrypt($_GET["codradiologia"]);
		$stmt->execute();
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
}  
############################ FUNCION ELIMINAR RADIOLOGIAS ###########################

################################ FUNCION BUSQUEDA RADIOLOGIAS POR FECHAS ################################
public function BuscarRadiologiasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	radiologias.idradiologia,
	radiologias.codradiologia,
	radiologias.nrodocumento,  
	radiologias.codcita,
	radiologias.codsucursal,
	radiologias.codmedico, 
	radiologias.codpaciente, 
	radiologias.lectura,
	radiologias.tipoestudio,
	radiologias.diagnostico,
	radiologias.fecharadiologia,
	radiologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM radiologias 
	LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE radiologias.codsucursal = ?
	AND radiologias.codmedico = ?
	AND DATE_FORMAT(radiologias.fecharadiologia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY radiologias.fecharadiologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	radiologias.idradiologia,
	radiologias.codradiologia,
	radiologias.nrodocumento,  
	radiologias.codcita,
	radiologias.codsucursal,
	radiologias.codmedico, 
	radiologias.codpaciente, 
	radiologias.lectura,
	radiologias.tipoestudio,
	radiologias.diagnostico,
	radiologias.fecharadiologia,
	radiologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM radiologias 
	LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE radiologias.codsucursal = ? 
	AND DATE_FORMAT(radiologias.fecharadiologia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY radiologias.fecharadiologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA RADIOLOGIAS POR FECHAS ################################

################################ FUNCION BUSQUEDA RADIOLOGIAS POR MEDICOS ################################
public function BuscarRadiologiasxMedico()
{
	self::SetNames();
	$sql ="SELECT 
	radiologias.idradiologia,
	radiologias.codradiologia,
	radiologias.nrodocumento,  
	radiologias.codcita,
	radiologias.codsucursal,
	radiologias.codmedico, 
	radiologias.codpaciente, 
	radiologias.lectura,
	radiologias.tipoestudio,
	radiologias.diagnostico,
	radiologias.fecharadiologia,
	radiologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM radiologias 
	LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE radiologias.codsucursal = ? 
	AND radiologias.codmedico = ? 
	AND DATE_FORMAT(radiologias.fecharadiologia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY radiologias.fecharadiologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA RADIOLOGIAS POR MEDICOS ################################

################################ FUNCION BUSQUEDA RADIOLOGIAS POR PACIENTE ################################
public function BuscarRadiologiasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	radiologias.idradiologia,
	radiologias.codradiologia,
	radiologias.nrodocumento,  
	radiologias.codcita,
	radiologias.codsucursal,
	radiologias.codmedico, 
	radiologias.codpaciente, 
	radiologias.lectura,
	radiologias.tipoestudio,
	radiologias.diagnostico,
	radiologias.fecharadiologia,
	radiologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM radiologias 
	LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE radiologias.codsucursal = ?
	AND radiologias.codmedico = ?
	AND radiologias.codpaciente = ? 
	ORDER BY radiologias.fecharadiologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	radiologias.idradiologia,
	radiologias.codradiologia,
	radiologias.nrodocumento,  
	radiologias.codcita,
	radiologias.codsucursal,
	radiologias.codmedico, 
	radiologias.codpaciente, 
	radiologias.lectura,
	radiologias.tipoestudio,
	radiologias.diagnostico,
	radiologias.fecharadiologia,
	radiologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM radiologias 
	LEFT JOIN sucursales ON radiologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON radiologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON radiologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE radiologias.codsucursal = ?
	AND radiologias.codpaciente = ? 
	ORDER BY radiologias.fecharadiologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim($_GET['codpaciente']));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA RADIOLOGIAS POR PACIENTE ################################

##################################### CLASE RADIOLOGIAS ########################################




















##################################### CLASE TERAPIAS ########################################

######################## FUNCION BUSQUEDA TERAPIAS ABIERTAS ############################
public function BusquedaTerapiasAbiertas()
{
	self::SetNames();
	$sql ="SELECT 
	terapias.codterapia,
	terapias.ciclo,
	terapias.diagnostico,
	terapias.observaciones, 
	GROUP_CONCAT(DISTINCT ciclo_terapias.iddetalleterapia, '/', ciclo_terapias.tratamiento, '/', ciclo_terapias.fechaciclo SEPARATOR ',,') AS detalles_terapias
	FROM terapias INNER JOIN ciclo_terapias ON terapias.codterapia = ciclo_terapias.codterapia 
	WHERE terapias.codsucursal = ? 
	AND terapias.codpaciente = ? 
	AND terapias.ciclo = 2";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codsucursal"]),decrypt($_GET["codpaciente"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################## FUNCION BUSQUEDA TERAPIAS ABIERTAS ############################

############################# FUNCION REGISTRAR TERAPIAS ##############################
public function RegistrarTerapias()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["tratamiento"]) or empty($_POST["fechaciclo"]))
	{
		echo "1";
		exit;
	}

	############################# FECHA CICLO NO REPETIDAS #############################
	if (isset($_POST['fechaciclo'])) { 
		$fecha = $_POST['fechaciclo'];
	    $repeated = array_filter(array_count_values($fecha), function($count) {
	    return $count > 1;
	    });

	        foreach ($repeated as $key => $value) {
	        echo "2";
			exit;
	    }
	}
    ############################# FECHA CICLO NO REPETIDAS #############################

	################ CREO CODIGO DE TERAPIAS ####################
	$sql = "SELECT codterapia FROM terapias 
	ORDER BY idterapia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$terapia=$row["codterapia"];

	}
	if(empty($terapia))
	{
		$codterapia = "01";

	} else {

		$num = substr($terapia, 0);
        $dig = $num + 1;
        $codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
        $codterapia = $codigofinal;
	}
    ################ CREO CODIGO DE TERAPIAS ###############

    ################ CREO DOCUMENTO DE TERAPIAS ####################
	$sql = "SELECT nrodocumento FROM terapias 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idterapia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE TERAPIAS ###############

    $sql = "SELECT ciclo FROM terapias WHERE codsucursal = ? AND codpaciente = ? AND ciclo = 2";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST['sucursal_busqueda']),decrypt($_POST["codpaciente"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		############################# REGISTRO TERAPIAS #############################
	    $query = "INSERT INTO terapias values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codterapia);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codcita);
		$stmt->bindParam(4, $codsucursal);
		$stmt->bindParam(5, $codmedico);
		$stmt->bindParam(6, $codpaciente);
		$stmt->bindParam(7, $diagnostico);
		$stmt->bindParam(8, $ciclo);
		$stmt->bindParam(9, $observaciones);
		$stmt->bindParam(10, $fechaterapia);
		$stmt->bindParam(11, $codigo);				
			
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
		$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
		$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	    $diagnostico = limpiar($_POST["diagnostico"]);
	    $ciclo = limpiar($_POST["ciclo"]);
	    $observaciones = limpiar(isset($_POST['observaciones']) ? $_POST["observaciones"] : "");
		$fechaterapia = date("Y-m-d H:i:s");
		$codigo = limpiar($_SESSION["codigo"]);
		$stmt->execute();
		############################# REGISTRO TERAPIAS #############################

		############################ REGISTRO DE CICLO DE TERAPIAS #####################
		if (isset($_POST['fechaciclo']) && isset($_POST['fechaciclo'])) {
			for($i=0;$i<count($_POST['tratamiento']);$i++){  //recorro el array
	            if (!empty($_POST['tratamiento'][$i])) {
			
				$query = "INSERT INTO ciclo_terapias values (null, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codterapia);
				$stmt->bindParam(2, $tratamiento);
				$stmt->bindParam(3, $fechaciclo);
					
				$tratamiento = limpiar($_POST["tratamiento"][$i]);
				$fechaciclo = limpiar(date("Y-m-d H:i",strtotime($_POST['fechaciclo'][$i])));
				$stmt->execute();

			    } 
		    }
		}
	    ############################ REGISTRO DE CICLO DE TERAPIAS ##################### 

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	echo "<span class='fa fa-check-square-o'></span> LA TERAPIAS HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codterapia)."&tipo=".encrypt("CONSTANCIA_TERAPIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Terapias' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR TERAPIAS</strong></a>";
	exit;
	}
	else
	{
		echo "4";
		exit;
	} 
}
############################# FUNCION REGISTRAR TERAPIAS ##############################

############################# FUNCION AGREGAR CICLO DE TERAPIAS ##############################
public function AgregarCicloTerapias()
	{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]) or empty($_POST["tratamiento"]) or empty($_POST["fechaciclo"]))
	{
		echo "1";
		exit;
	}

	############################# FECHA CICLO NO REPETIDAS #############################
	if (isset($_POST['fechaciclo'])) { 
		$fecha = $_POST['fechaciclo'];
	    $repeated = array_filter(array_count_values($fecha), function($count) {
	    return $count > 1;
	    });

	        foreach ($repeated as $key => $value) {
	        echo "2";
			exit;
	    }
	}
    ############################# FECHA CICLO NO REPETIDAS #############################

    ############################# VERIFICO FECHA CICLO NO REPETIDAS #############################
	if (isset($_POST['fechaciclo'])) {

	    for($i=0;$i<count($_POST['tratamiento']);$i++){  //recorro el array
            if (!empty($_POST['tratamiento'][$i])) {
		
				$fecha = limpiar(date("Y-m-d",strtotime($_POST['fechaciclo'][$i])));

				$sql = " SELECT fechaciclo FROM ciclo_terapias WHERE codterapia = ? AND DATE_FORMAT(fechaciclo,'%Y-%m-%d') = ?";
				$stmt = $this->dbh->prepare($sql);
				$stmt->execute(array(decrypt($_POST['codterapia']),$fecha));
				$num = $stmt->rowCount();
				if($num > 0)
				{
				   echo "3";
				   exit;
				}
	        } 
	    }
	}
    ############################# VERIFICO FECHA CICLO NO REPETIDAS #############################

    $sql = "SELECT ciclo FROM terapias WHERE codterapia = ? AND ciclo = 1";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST['codterapia'])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

		############################# ACTUALIZO TERAPIAS #############################
	    $sql = " UPDATE terapias set "
	    ." diagnostico = ?, "
	    ." ciclo = ?, "
	    ." observaciones = ? "
	    ." WHERE "
	    ." codterapia = ?;
	    ";
	    $stmt = $this->dbh->prepare($sql);
	    $stmt->bindParam(1, $diagnostico);
	    $stmt->bindParam(2, $ciclo);
	    $stmt->bindParam(3, $observaciones);
	    $stmt->bindParam(4, $codterapia);

	    $diagnostico = limpiar($_POST["diagnostico"]);
	    $ciclo = limpiar($_POST["ciclo"]);
	    $observaciones = limpiar(isset($_POST['observaciones']) ? $_POST["observaciones"] : "");
	    $codterapia = decrypt($_POST["codterapia"]);
	    $stmt->execute();
		############################# ACTUALIZO TERAPIAS #############################

		############################ REGISTRO DE CICLO DE TERAPIAS #####################
		if (isset($_POST['fechaciclo']) && isset($_POST['fechaciclo'])) {
			for($i=0;$i<count($_POST['tratamiento']);$i++){  //recorro el array
	            if (!empty($_POST['tratamiento'][$i])) {
			
				$query = "INSERT INTO ciclo_terapias values (null, ?, ?, ?); ";
				$stmt = $this->dbh->prepare($query);
				$stmt->bindParam(1, $codterapia);
				$stmt->bindParam(2, $tratamiento);
				$stmt->bindParam(3, $fechaciclo);
					
				$tratamiento = limpiar($_POST["tratamiento"][$i]);
				$fechaciclo = limpiar(date("Y-m-d H:i",strtotime($_POST['fechaciclo'][$i])));
				$stmt->execute();

			    } 
		    }
		}
	    ############################ REGISTRO DE CICLO DE TERAPIAS ##################### 

		################# ACTUALIZO EL STATUS DE CITA ##############
		$sql = " UPDATE citasmedicas set "
			  ." statuscita = ? "
			  ." WHERE "
			  ." codcita = ?;
			   ";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $statuscita);
		$stmt->bindParam(2, $codcita);
			
		$statuscita = limpiar('1');
		$codcita = limpiar(decrypt($_POST["codcita"]));
		$stmt->execute();
		################# ACTUALIZO EL STATUS DE CITA ##############
		
	echo "<span class='fa fa-check-square-o'></span> LA TERAPIAS HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codterapia)."&tipo=".encrypt("CONSTANCIA_TERAPIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Terapias' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR TERAPIAS</strong></a>";
	exit;
	}
	else
	{
		echo "4";
		exit;
	} 
}
############################# FUNCION AGREGAR CICLO DE TERAPIAS ##############################

########################## FUNCION BUSQUEDA DE TERAPIAS ###############################
public function BusquedaTerapias()
{
	self::SetNames();
	if($_SESSION["acceso"] == "medico") {

		$sql = "SELECT 
		terapias.idterapia,
		terapias.codterapia,
		terapias.nrodocumento,  
		terapias.codcita,
		terapias.codsucursal,
		terapias.codmedico, 
		terapias.codpaciente, 
		terapias.diagnostico,
		terapias.ciclo,
		terapias.observaciones,
		terapias.fechaterapia,
		terapias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM terapias 
		LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		terapias.diagnostico,
		DATE_FORMAT(terapias.fechaterapia,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		AND radiologias.codmedico = '".limpiar($_SESSION["codmedico"])."' 
	   AND radiologias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	} else {
	   
	   $sql = "SELECT 
		terapias.idterapia,
		terapias.codterapia,
		terapias.nrodocumento,  
		terapias.codcita,
		terapias.codsucursal,
		terapias.codmedico, 
		terapias.codpaciente, 
		terapias.diagnostico,
		terapias.ciclo,
		terapias.observaciones,
		terapias.fechaterapia,
		terapias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM terapias 
		LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		terapias.diagnostico,
		DATE_FORMAT(terapias.fechaterapia,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	}
}
########################## FUNCION BUSQUEDA DE TERAPIAS ###############################

############################ FUNCION LISTAR TERAPIAS #############################
public function ListarTerapias()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

		$sql = "SELECT 
		terapias.idterapia,
		terapias.codterapia,
		terapias.nrodocumento,  
		terapias.codcita,
		terapias.codsucursal,
		terapias.codmedico, 
		terapias.codpaciente, 
		terapias.diagnostico,
		terapias.ciclo,
		terapias.observaciones,
		terapias.fechaterapia,
		terapias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM terapias 
		LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE terapias.codmedico = '".limpiar($_SESSION["codmedico"])."'
		AND terapias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

		$sql = "SELECT 
		terapias.idterapia,
		terapias.codterapia,
		terapias.nrodocumento,  
		terapias.codcita,
		terapias.codsucursal,
		terapias.codmedico, 
		terapias.codpaciente, 
		terapias.diagnostico,
		terapias.ciclo,
		terapias.observaciones,
		terapias.fechaterapia,
		terapias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM terapias 
		LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR TERAPIAS #############################

########################### FUNCION ID TERAPIAS ###############################
public function TerapiasPorId()
{
	self::SetNames();
	$sql = "SELECT 
	terapias.idterapia,
	terapias.codterapia,
	terapias.nrodocumento,  
	terapias.codcita,
	terapias.codsucursal,
	terapias.codmedico, 
	terapias.codpaciente, 
	terapias.diagnostico,
	terapias.ciclo,
	terapias.observaciones,
	terapias.fechaterapia,
	terapias.codigo,
	GROUP_CONCAT(DISTINCT ciclo_terapias.iddetalleterapia, '/', ciclo_terapias.tratamiento, '/', ciclo_terapias.fechaciclo SEPARATOR ',,') AS detalles_terapias,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM terapias 
	LEFT JOIN ciclo_terapias ON terapias.codterapia = ciclo_terapias.codterapia
	LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE terapias.codterapia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID TERAPIAS ###############################

########################## FUNCION ACTUALIZAR TERAPIAS #######################
public function ActualizarTerapias()
{
	self::SetNames();
	if(empty($_POST["codterapia"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	############################# FECHA CICLO NO REPETIDAS #############################
	if (isset($_POST['fechaciclo'])) { 
		$fecha = $_POST['fechaciclo'];
	    $repeated = array_filter(array_count_values($fecha), function($count) {
	    return $count > 1;
	    });

	        foreach ($repeated as $key => $value) {
	        echo "2";
			exit;
	    }
	}
    ############################# FECHA CICLO NO REPETIDAS #############################

    ############################# ACTUALIZO TERAPIAS #############################
    $sql = " UPDATE terapias set "
	  ." diagnostico = ?, "
	  ." ciclo = ?, "
	  ." observaciones = ? "
	  ." WHERE "
	  ." codterapia = ?;
	   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $diagnostico);
	$stmt->bindParam(2, $ciclo);
	$stmt->bindParam(3, $observaciones);	
	$stmt->bindParam(4, $codterapia);			
		
    $diagnostico = limpiar($_POST["diagnostico"]);
    $ciclo = limpiar($_POST["ciclo"]);
    $observaciones = limpiar(isset($_POST['observaciones']) ? $_POST["observaciones"] : "");
	$codterapia = limpiar(decrypt($_POST['codterapia']));
    $stmt->execute();
    ############################# ACTUALIZO TERAPIAS #############################

	############################ ACTUALIZO DE CICLO DE TERAPIAS #####################
	$this->dbh->beginTransaction();
	if (isset($_POST['tratamiento']) && isset($_POST['fechaciclo'])) {

		for($i=0;$i<count($_POST['tratamiento']);$i++){  //recorro el array
	            if (!empty($_POST['tratamiento'][$i])) {

	    $sql = "SELECT * FROM ciclo_terapias 
		WHERE codterapia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(decrypt($_POST["codterapia"])));
		$num = $stmt->rowCount();
		if($num == 0)
		{
			
			$query = "INSERT INTO ciclo_terapias values (null, ?, ?, ?); ";
			$stmt = $this->dbh->prepare($query);
			$stmt->bindParam(1, $codterapia);
			$stmt->bindParam(2, $tratamiento);
			$stmt->bindParam(3, $fechaciclo);
				
            $codterapia = limpiar(decrypt($_POST['codterapia']));
			$tratamiento = limpiar($_POST["tratamiento"][$i]);
			$fechaciclo = limpiar(date("Y-m-d H:i",strtotime($_POST['fechaciclo'][$i])));
			$stmt->execute();

	
		} else {

            $sql = " UPDATE ciclo_terapias set "
			." tratamiento = ?, "
			." fechaciclo = ? "
			." WHERE "
			." iddetalleterapia = ?;
			";
			$stmt = $this->dbh->prepare($sql);
			$stmt->bindParam(1, $tratamiento);
			$stmt->bindParam(2, $fechaciclo);
			$stmt->bindParam(3, $iddetalleterapia);
					
			$tratamiento = limpiar($_POST["tratamiento"][$i]);
			$fechaciclo = limpiar(date("Y-m-d H:i",strtotime($_POST['fechaciclo'][$i])));
		    $iddetalleterapia = decrypt($_POST["iddetalleterapia"][$i]);
			$stmt->execute();

			    } 
		    }
		}
	}
	$this->dbh->commit();
    ############################ ACTUALIZO DE CICLO DE TERAPIAS ##################### 

	echo "<span class='fa fa-check-square-o'></span> LA TERAPIAS HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codterapia)."&tipo=".encrypt("CONSTANCIA_TERAPIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Terapias' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR TERAPIAS</strong></a>";
	exit;
}
########################## FUNCION ACTUALIZAR TERAPIAS #######################

############################ FUNCION ELIMINAR CICLO TERAPIAS ###########################
public function EliminarCicloTerapias()
{
	if($_SESSION['acceso'] == "administrador" || $_SESSION['acceso'] == "medico") {

	$sql = "SELECT * FROM ciclo_terapias WHERE codterapia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codterapia"])));
	$num = $stmt->rowCount();
	if($num > 1)
	{
		
		$sql = "DELETE FROM ciclo_terapias WHERE iddetalleterapia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$iddetalleterapia);
		$iddetalleterapia = decrypt($_GET["iddetalleterapia"]);
		$stmt->execute();
		
		echo "1";
		exit;

	} else {
		   
		echo "2";
		exit;
	} 
			
	} else {
		
		echo "3";
		exit;
	}	
} 
############################ FUNCION ELIMINAR CICLO TERAPIAS ###########################

############################ FUNCION ELIMINAR TERAPIAS ###########################
public function EliminarTerapias()
{
	if($_SESSION['acceso'] == "administrador") {
		
		$sql = "DELETE FROM terapias WHERE codterapia = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1,$codterapia);
		$codterapia = decrypt($_GET["codterapia"]);
		$stmt->execute();
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
}  
############################ FUNCION ELIMINAR TERAPIAS ###########################

################################ FUNCION BUSQUEDA TERAPIAS POR FECHAS ################################
public function BuscarTerapiasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	terapias.idterapia,
	terapias.codterapia,
	terapias.nrodocumento,  
	terapias.codcita,
	terapias.codsucursal,
	terapias.codmedico, 
	terapias.codpaciente, 
	terapias.diagnostico,
	terapias.ciclo,
	terapias.observaciones,
	terapias.fechaterapia,
	terapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM terapias 
	LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE terapias.codsucursal = ?
	AND terapias.codmedico = ?
	AND DATE_FORMAT(terapias.fechaterapia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY terapias.fechaterapia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	terapias.idterapia,
	terapias.codterapia,
	terapias.nrodocumento,  
	terapias.codcita,
	terapias.codsucursal,
	terapias.codmedico, 
	terapias.codpaciente, 
	terapias.diagnostico,
	terapias.ciclo,
	terapias.observaciones,
	terapias.fechaterapia,
	terapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM terapias 
	LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE terapias.codsucursal = ? 
	AND DATE_FORMAT(terapias.fechaterapia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY terapias.fechaterapia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA TERAPIAS POR FECHAS ################################

################################ FUNCION BUSQUEDA TERAPIAS POR MEDICOS ################################
public function BuscarTerapiasxMedico()
{
	self::SetNames();
	$sql ="SELECT 
	terapias.idterapia,
	terapias.codterapia,
	terapias.nrodocumento,  
	terapias.codcita,
	terapias.codsucursal,
	terapias.codmedico, 
	terapias.codpaciente, 
	terapias.diagnostico,
	terapias.ciclo,
	terapias.observaciones,
	terapias.fechaterapia,
	terapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM terapias 
	LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE terapias.codsucursal = ? 
	AND terapias.codmedico = ? 
	AND DATE_FORMAT(terapias.fechaterapia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY terapias.fechaterapia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA TERAPIAS POR MEDICOS ################################

################################ FUNCION BUSQUEDA TERAPIAS POR PACIENTE ################################
public function BuscarTerapiasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	terapias.idterapia,
	terapias.codterapia,
	terapias.nrodocumento,  
	terapias.codcita,
	terapias.codsucursal,
	terapias.codmedico, 
	terapias.codpaciente, 
	terapias.diagnostico,
	terapias.ciclo,
	terapias.observaciones,
	terapias.fechaterapia,
	terapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM terapias 
	LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE terapias.codsucursal = ?
	AND terapias.codmedico = ?
	AND terapias.codpaciente = ? 
	ORDER BY terapias.fechaterapia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	terapias.idterapia,
	terapias.codterapia,
	terapias.nrodocumento,  
	terapias.codcita,
	terapias.codsucursal,
	terapias.codmedico, 
	terapias.codpaciente, 
	terapias.diagnostico,
	terapias.ciclo,
	terapias.observaciones,
	terapias.fechaterapia,
	terapias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM terapias 
	LEFT JOIN sucursales ON terapias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON terapias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON terapias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE terapias.codsucursal = ?
	AND terapias.codpaciente = ? 
	ORDER BY terapias.fechaterapia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim($_GET['codpaciente']));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA TERAPIAS POR PACIENTE ################################

##################################### CLASE TERAPIAS ########################################



























##################################### CLASE ODONTOLOGIA ########################################

##################### FUNCION PARA VERIFICAR HISTORIA ODONTOLOGICA ########################
public function BusquedaHistorialPacientes()
	{
	self::SetNames();

	if($_GET['codverifica'] == '6'){ 

		$sql = "SELECT 
		codpaciente,
		codsucursal 
		FROM odontologias 
		WHERE codpaciente = ?
		AND codsucursal = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(decrypt($_GET['codpaciente']),decrypt($_GET['codsucursal'])));
		$num = $stmt->rowCount();
		if($num > 0)
		{
			echo "<center><div class='alert alert-warning'>";
			echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
			echo "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> ESTE PACIENTE YA CUENTA CON UNA HISTORIA ODONTOLOGICA</div></center>";
			exit;
		}

	} else if($_GET['codverifica'] == '7'){

		$sql = "SELECT 
		codpaciente,
		codsucursal 
		FROM odontologias 
		WHERE codpaciente = ?
		AND codsucursal = ?";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute(array(decrypt($_GET['codpaciente']),decrypt($_GET['codsucursal'])));
		$num = $stmt->rowCount();
		if($num == 0)
		{
			echo "<center><div class='alert alert-warning'>";
			echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
			echo "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> ESTE PACIENTE NO CUENTA CON UNA HISTORIA ODONTOLOGICA</div></center>";
			exit;
		}
	}
}
##################### FUNCION PARA VERIFICAR HISTORIA ODONTOLOGICA ########################

##################### FUNCION PARA REGISTRAR REFERENCIAS TRATAMIENTO ########################
public function RegistrarOdontograma()
	{
	self::SetNames();
	if(empty($_POST["codpaciente"]) or empty($_POST["codsucursal"])) 
	{
	   echo "1";
	   exit;
	}

	$sql = "SELECT 
	estados 
	FROM referenciasodontograma 
	WHERE codpaciente = ?
	AND codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST['codpaciente']),decrypt($_POST['codsucursal'])));
	$num = $stmt->rowCount();
	if($num > 0)
	{

		#################### ACTUALIZO REFERENCIA DE ODONTOGRAMA ####################
		$sql = " UPDATE referenciasodontograma set "
		    ." estados = ? "
		    ." WHERE "
			." codpaciente = ? AND codsucursal = ?;
			";
		$stmt = $this->dbh->prepare($sql);
		$stmt->bindParam(1, $estados);
		$stmt->bindParam(2, $codpaciente);
		$stmt->bindParam(3, $codsucursal);
				
		$referencias = array_values(array_unique($_POST["estados"]));
		$referenciasarray = str_replace("_ _", "__",$referencias);
		//$listaSimple = array_unique($referencias);
	    $listaSimple = array_values(array_unique($referenciasarray));

		$arrayBD[] = array_values(array_unique($listaSimple));
	    ######### INSERCION EN LA BD #########
	    $listaSimpleFinal = implode("__",$listaSimple);
		$estados = str_replace("_ _", "__",$listaSimpleFinal);
		$codpaciente = limpiar(decrypt($_POST['codpaciente']));
		$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
		$stmt->execute();
		#################### ACTUALIZO REFERENCIA DE ODONTOGRAMA ####################

	} else { 

		#################### REGISTRO REFERENCIA DE ODONTOGRAMA ####################
		$query = "INSERT INTO referenciasodontograma values (null, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codcita);
		$stmt->bindParam(2, $codpaciente);
		$stmt->bindParam(3, $codsucursal);
		$stmt->bindParam(4, $estados);
		$stmt->bindParam(5, $status);
		$stmt->bindParam(6, $fecharegistro);
			
		$codcita = limpiar("0");
		$codpaciente = limpiar(decrypt($_POST['codpaciente']));
		$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
		$referencias = array_values(array_unique($_POST["estados"]));
		$referenciasarray = str_replace("_ _", "__",$referencias);
		//$listaSimple = array_unique($referencias);
	    $listaSimple = array_values(array_unique($referenciasarray));
		
		$arrayBD[] = array_values(array_unique($listaSimple));
	    ######### INSERCION EN LA BD #########
	    $listaSimpleFinal = implode("__",$listaSimple);
		$estados = str_replace("_ _", "__",$listaSimpleFinal);
		$status = limpiar("0");
	    $fecharegistro = limpiar(date("Y-m-d H:i:s"));
		$stmt->execute();
		#################### REGISTRO REFERENCIA DE ODONTOGRAMA ####################
	}

	echo "<center><div class='alert alert-success'>";
    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
    echo "<span class='fa fa-check-square-o'></span> LAS REFERENCIAS ODONTOLOGICAS FUERON REGISTRADAS EXITOSAMENTE</div></center>";
    exit;
}
##################### FUNCION PARA REGISTRAR REFERENCIAS TRATAMIENTO ########################

######################### FUNCION ID REFERENCIA TRATAMIENTO #############################
public function ReferenciaOdontogramaPorId()
{
	self::SetNames();
	$sql = "SELECT * FROM referenciasodontograma 
	WHERE codpaciente = ? 
	AND codsucursal = ?
	ORDER BY codreferencia 
	DESC LIMIT 1";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codpaciente"]),decrypt($_POST["codsucursal"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch())
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION ID REFERENCIA TRATAMIENTO #############################

######################### FUNCION ID REFERENCIA #2 TRATAMIENTO #############################
public function TratamientosOdontograma()
{
	self::SetNames();
	$sql = "SELECT * FROM referenciasodontograma 
	WHERE codpaciente = ? 
	AND codsucursal = ? 
	ORDER BY codreferencia 
	DESC LIMIT 1";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["codpaciente"]),decrypt($_GET["codsucursal"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch())
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION ID REFERENCIA #2 TRATAMIENTO #############################

############################ FUNCION ELIMINAR REFERENCIAS TRATAMIENTO ###########################
public function EliminarReferenciasOdontologia()
{
	self::SetNames();
    if($_SESSION['acceso'] == "administrador" || $_SESSION['acceso'] == "medico") {
		
	$sql="SELECT * FROM referenciasodontograma
	WHERE codpaciente = ? 
	AND codsucursal = ? 
	ORDER BY codreferencia 
	DESC LIMIT 1";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET['codpaciente']),decrypt($_GET["codsucursal"])));
	$num = $stmt->rowCount();
	if($row = $stmt->fetch())
	{
		$p[] = $row;
	}
	$anterior = $row['estados'];

	$valor= $_GET['codreferencia'];
	$recibo = explode("__",$anterior);
	$listaSimple = array_unique($recibo);
	$listaSimpleFinal = array_values($listaSimple);
	unset($listaSimpleFinal[$valor]);
	
	# Indicamos que elimine "melon" del array y que reindexe los valores
	deleteFromArray($listaSimpleFinal,$valor,false);
    # mostramos el array
    //print_r(array_values($listaSimpleFinal));

	$arrayBD[] = $listaSimpleFinal;
    ######### INSERCION EN LA BD #########
	$referencias = implode("__",$listaSimpleFinal);

	if(count($listaSimpleFinal) >= 1){

	$sql = "UPDATE referenciasodontograma set "
	." estados = ? "
	." WHERE "
	." codpaciente = ? AND codsucursal = ?;
	";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $referencias);
	$stmt->bindParam(2, $paciente);
	$stmt->bindParam(3, $sucursal);

	$paciente = limpiar(decrypt($_GET['codpaciente']));
	$sucursal = limpiar(decrypt($_GET['codsucursal']));
	$stmt->execute();

	echo "1";
	exit;

	} else { 

	$sql = "DELETE FROM referenciasodontograma WHERE codpaciente = ? AND codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1,$codpaciente);
	$stmt->bindParam(2,$codsucursal);
	$codpaciente = limpiar(decrypt($_GET['codpaciente']));
	$codsucursal = limpiar(decrypt($_GET['codsucursal']));
	$stmt->execute();

	echo "1";
	exit;
       
       }

	} else {
		   
	echo "2";
	exit;

	} 		
}
############################ FUNCION ELIMINAR REFERENCIAS TRATAMIENTO ###########################

######################### FUNCION REGISTRAR ODONTOLOGIA #######################
public function RegistrarOdontologias()
{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}
	elseif(empty($_POST["estados"]))
	{
		echo "2";
		exit;
	}

	####################### DX PRESUNTIVO #######################
	if (limpiar(isset($_POST['idciepresuntivoingreso']))) {

		$presuntivo = $_POST['presuntivoingreso'];
	    $repeated = array_filter(array_count_values($presuntivo), function($count) {
	        return $count > 1;
	    });
	    foreach ($repeated as $key => $value) {
	        echo "3";
			exit;
	    }
	}
	####################### DX PRESUNTIVO #######################

	####################### DX DEFINITIVO #######################
	if (limpiar(isset($_POST['idciedefinitivoingreso']))) {
			
		$definitivo = $_POST['definitivoingreso'];
	    $repeated = array_filter(array_count_values($definitivo), function($count) {
	        return $count > 1;
	    });
	    foreach ($repeated as $key => $value) {
	        echo "4";
			exit;
	    }
    }
    ####################### DX DEFINITIVO #######################

  
	####################################################################################
	#                                                                                  #
	#                  REGISTRO ODONTOLOGIA Y DETALLES DE ODONTOGRAMA                  #
	#                                                                                  #
	####################################################################################

	$sql = "SELECT 
	codpaciente, 
	codsucursal 
	FROM odontologias 
	WHERE codpaciente = ? 
	AND codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codpaciente"]), decrypt($_POST["sucursal_busqueda"])));
	$num = $stmt->rowCount();
	if($num == 0)
	{

	$fecha = date("Y-m-d H:i:s");

	################ CREO CODIGO DE ODONTOLOGIA ####################
	$sql = "SELECT cododontologia FROM odontologias 
	ORDER BY idodontologia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$odontologia=$row["cododontologia"];

	}
	if(empty($odontologia))
	{
		$cododontologia = "01";

	} else {

		$num = substr($odontologia, 0);
        $dig = $num + 1;
        $codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
        $cododontologia = $codigofinal;
	}
    ################ CREO CODIGO DE ODONTOLOGIA ###############

    ################ CREO DOCUMENTO DE ODONTOLOGIA ####################
	$sql = "SELECT nrodocumento FROM odontologias 
	WHERE codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY idodontologia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE ODONTOLOGIA ###############
		
    ################################### REGISTRO LA CONSULTA ODONTOLOGICA ###################################
    $query = "INSERT INTO odontologias values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $cododontologia);
	$stmt->bindParam(2, $nrodocumento);
	$stmt->bindParam(3, $codcita);
	$stmt->bindParam(4, $codsucursal);
	$stmt->bindParam(5, $codmedico);
	$stmt->bindParam(6, $codpaciente);
	$stmt->bindParam(7, $menor_1);
	$stmt->bindParam(8, $otro_1);
	$stmt->bindParam(9, $otro_2);
	$stmt->bindParam(10, $otro_3);
	$stmt->bindParam(11, $otro_4);
	$stmt->bindParam(12, $otro_5);
	$stmt->bindParam(13, $mayor_20);
	$stmt->bindParam(14, $embarazada);
	$stmt->bindParam(15, $motivo_consulta);
	$stmt->bindParam(16, $problema_actual);
	$stmt->bindParam(17, $alergia_antibiotico);
	$stmt->bindParam(18, $alergia_anestesia);
	$stmt->bindParam(19, $hemorragias);
	$stmt->bindParam(20, $vih);
	$stmt->bindParam(21, $tuberculosis);
	$stmt->bindParam(22, $asma);
	$stmt->bindParam(23, $diabetes);
	$stmt->bindParam(24, $hipertension);
	$stmt->bindParam(25, $enfermedad_cardiaca);
	$stmt->bindParam(26, $otro_antecedentes);
	$stmt->bindParam(27, $observaciones_antecedentes);
	$stmt->bindParam(28, $presion_arterial);
	$stmt->bindParam(29, $frecuencia_cardiaca);
	$stmt->bindParam(30, $temperatura);
	$stmt->bindParam(31, $frecuencia_respiratoria);
	$stmt->bindParam(32, $labios);
	$stmt->bindParam(33, $mejillas);
	$stmt->bindParam(34, $maxilar_superior);
	$stmt->bindParam(35, $maxilar_inferior);
	$stmt->bindParam(36, $lengua);
	$stmt->bindParam(37, $paladar);
	$stmt->bindParam(38, $piso);
	$stmt->bindParam(39, $carrillos);
	$stmt->bindParam(40, $glandulas);
	$stmt->bindParam(41, $faringe);
	$stmt->bindParam(42, $atm);
	$stmt->bindParam(43, $ganglios);
	$stmt->bindParam(44, $observaciones_examen);
	$stmt->bindParam(45, $pieza_16);
	$stmt->bindParam(46, $pieza_17);
	$stmt->bindParam(47, $pieza_55);
	$stmt->bindParam(48, $pieza_1_placa);
	$stmt->bindParam(49, $pieza_1_calculo);
	$stmt->bindParam(50, $pieza_1_gingivitis);
	$stmt->bindParam(51, $pieza_11);
	$stmt->bindParam(52, $pieza_21);
	$stmt->bindParam(53, $pieza_51);
	$stmt->bindParam(54, $pieza_2_placa);
	$stmt->bindParam(55, $pieza_2_calculo);
	$stmt->bindParam(56, $pieza_2_gingivitis);
	$stmt->bindParam(57, $pieza_26);
	$stmt->bindParam(58, $pieza_27);
	$stmt->bindParam(59, $pieza_65);
	$stmt->bindParam(60, $pieza_3_placa);
	$stmt->bindParam(61, $pieza_3_calculo);
	$stmt->bindParam(62, $pieza_3_gingivitis);
	$stmt->bindParam(63, $pieza_36);
	$stmt->bindParam(64, $pieza_37);
	$stmt->bindParam(65, $pieza_75);
	$stmt->bindParam(66, $pieza_4_placa);
	$stmt->bindParam(67, $pieza_4_calculo);
	$stmt->bindParam(68, $pieza_4_gingivitis);
	$stmt->bindParam(69, $pieza_31);
	$stmt->bindParam(70, $pieza_41);
	$stmt->bindParam(71, $pieza_71);
	$stmt->bindParam(72, $pieza_5_placa);
	$stmt->bindParam(73, $pieza_5_calculo);
	$stmt->bindParam(74, $pieza_5_gingivitis);
	$stmt->bindParam(75, $pieza_46);
	$stmt->bindParam(76, $pieza_47);
	$stmt->bindParam(77, $pieza_85);
	$stmt->bindParam(78, $pieza_6_placa);
	$stmt->bindParam(79, $pieza_6_calculo);
	$stmt->bindParam(80, $pieza_6_gingivitis);
	$stmt->bindParam(81, $periodontal);
	$stmt->bindParam(82, $oclusion);
	$stmt->bindParam(83, $fluorosis);
	$stmt->bindParam(84, $cpo_1_c);
	$stmt->bindParam(85, $cpo_1_p);
	$stmt->bindParam(86, $cpo_1_o);
	$stmt->bindParam(87, $cpo_2_c);
	$stmt->bindParam(88, $cpo_2_e);
	$stmt->bindParam(89, $cpo_2_o);
	$stmt->bindParam(90, $biometria);
	$stmt->bindParam(91, $quimica);
	$stmt->bindParam(92, $rayosx);
	$stmt->bindParam(93, $otros_planes);
	$stmt->bindParam(94, $observaciones_planes);
	$stmt->bindParam(95, $dxpres);
	$stmt->bindParam(96, $dxdef);
	$stmt->bindParam(97, $fechaodontologia);
	$stmt->bindParam(98, $codigo);
	
	$codcita = limpiar(decrypt($_POST["codcita"]));
	$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
	$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
	$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	$menor_1 = limpiar(empty($_POST["menor_1"]) ? "" : $_POST['menor_1']);
	$otro_1 = limpiar(empty($_POST["1_4"]) ? "" : $_POST['1_4']);
	$otro_2 = limpiar(empty($_POST["5_9"]) ? "" : $_POST['5_9']);
	$otro_3 = limpiar(empty($_POST["5_14"]) ? "" : $_POST['5_14']);
	$otro_4 = limpiar(empty($_POST["10_14"]) ? "" : $_POST['10_14']);
	$otro_5 = limpiar(empty($_POST["15_19"]) ? "" : $_POST['15_19']);
	$mayor_20 = limpiar(empty($_POST["mayor_20"]) ? "" : $_POST['mayor_20']);
	$embarazada = limpiar(empty($_POST["embarazada"]) ? "" : $_POST['embarazada']);
	$motivo_consulta = limpiar($_POST["motivo_consulta"]);
	$problema_actual = limpiar($_POST["problema_actual"]);
	$alergia_antibiotico = limpiar(empty($_POST["alergia_antibiotico"]) ? "" : $_POST['alergia_antibiotico']);
	$alergia_anestesia = limpiar(empty($_POST["alergia_anestesia"]) ? "" : $_POST['alergia_anestesia']);
	$hemorragias = limpiar(empty($_POST["hemorragias"]) ? "" : $_POST['hemorragias']);
	$vih = limpiar(empty($_POST["vih"]) ? "" : $_POST['vih']);
	$tuberculosis = limpiar(empty($_POST["tuberculosis"]) ? "" : $_POST['tuberculosis']);
	$asma = limpiar(empty($_POST["asma"]) ? "" : $_POST['asma']);
	$diabetes = limpiar(empty($_POST["diabetes"]) ? "" : $_POST['diabetes']);
	$hipertension = limpiar(empty($_POST["hipertension"]) ? "" : $_POST['hipertension']);
	$enfermedad_cardiaca = limpiar(empty($_POST["enfermedad_cardiaca"]) ? "" : $_POST['enfermedad_cardiaca']);
	$otro_antecedentes = limpiar(empty($_POST["otro_antecedentes"]) ? "" : $_POST['otro_antecedentes']);
	$observaciones_antecedentes = limpiar(empty($_POST["observaciones_antecedentes"]) ? "" : $_POST['observaciones_antecedentes']);
	$presion_arterial = limpiar($_POST['presion_arterial']);
	$frecuencia_cardiaca = limpiar($_POST['frecuencia_cardiaca']);
	$temperatura = limpiar($_POST['temperatura']);
	$frecuencia_respiratoria = limpiar($_POST['frecuencia_respiratoria']);
	$labios = limpiar(empty($_POST["labios"]) ? "" : $_POST['labios']);
	$mejillas = limpiar(empty($_POST["mejillas"]) ? "" : $_POST['mejillas']);
	$maxilar_superior = limpiar(empty($_POST["maxilar_superior"]) ? "" : $_POST['maxilar_superior']);
	$maxilar_inferior = limpiar(empty($_POST["maxilar_inferior"]) ? "" : $_POST['maxilar_inferior']);
	$lengua = limpiar(empty($_POST["lengua"]) ? "" : $_POST['lengua']);
	$paladar = limpiar(empty($_POST["paladar"]) ? "" : $_POST['paladar']);
	$piso = limpiar(empty($_POST["piso"]) ? "" : $_POST['piso']);
	$carrillos = limpiar(empty($_POST["carrillos"]) ? "" : $_POST['carrillos']);
	$glandulas = limpiar(empty($_POST["glandulas"]) ? "" : $_POST['glandulas']);
	$faringe = limpiar(empty($_POST["faringe"]) ? "" : $_POST['faringe']);
	$atm = limpiar(empty($_POST["atm"]) ? "" : $_POST['atm']);
	$ganglios = limpiar(empty($_POST["ganglios"]) ? "" : $_POST['ganglios']);
	$observaciones_examen = limpiar(empty($_POST["observaciones_examen"]) ? "" : $_POST['observaciones_examen']);
	$pieza_16 = limpiar(empty($_POST["pieza_16"]) ? "" : $_POST['pieza_16']);
	$pieza_17 = limpiar(empty($_POST["pieza_17"]) ? "" : $_POST['pieza_17']);
	$pieza_55 = limpiar(empty($_POST["pieza_55"]) ? "" : $_POST['pieza_55']);
    $pieza_1_placa = limpiar(empty($_POST["pieza_1_placa"]) ? "" : $_POST['pieza_1_placa']);
    $pieza_1_calculo = limpiar(empty($_POST["pieza_1_calculo"]) ? "" : $_POST['pieza_1_calculo']);
    $pieza_1_gingivitis = limpiar(empty($_POST["pieza_1_gingivitis"]) ? "" : $_POST['pieza_1_gingivitis']);
    $pieza_11 = limpiar(empty($_POST["pieza_11"]) ? "" : $_POST['pieza_11']);
    $pieza_21 = limpiar(empty($_POST["pieza_21"]) ? "" : $_POST['pieza_21']);
    $pieza_51 = limpiar(empty($_POST["pieza_51"]) ? "" : $_POST['pieza_51']);
    $pieza_2_placa = limpiar(empty($_POST["pieza_2_placa"]) ? "" : $_POST['pieza_2_placa']);
    $pieza_2_calculo = limpiar(empty($_POST["pieza_2_calculo"]) ? "" : $_POST['pieza_2_calculo']);
    $pieza_2_gingivitis = limpiar(empty($_POST["pieza_2_gingivitis"]) ? "" : $_POST['pieza_2_gingivitis']);
    $pieza_26 = limpiar(empty($_POST["pieza_26"]) ? "" : $_POST['pieza_26']);
    $pieza_27 = limpiar(empty($_POST["pieza_27"]) ? "" : $_POST['pieza_27']);
    $pieza_65 = limpiar(empty($_POST["pieza_65"]) ? "" : $_POST['pieza_65']);
    $pieza_3_placa = limpiar(empty($_POST["pieza_3_placa"]) ? "" : $_POST['pieza_3_placa']);
    $pieza_3_calculo = limpiar(empty($_POST["pieza_3_calculo"]) ? "" : $_POST['pieza_3_calculo']);
    $pieza_3_gingivitis = limpiar(empty($_POST["pieza_3_gingivitis"]) ? "" : $_POST['pieza_3_gingivitis']);
    $pieza_36 = limpiar(empty($_POST["pieza_36"]) ? "" : $_POST['pieza_36']);
    $pieza_37 = limpiar(empty($_POST["pieza_37"]) ? "" : $_POST['pieza_37']);
    $pieza_75 = limpiar(empty($_POST["pieza_75"]) ? "" : $_POST['pieza_75']);
    $pieza_4_placa = limpiar(empty($_POST["pieza_4_placa"]) ? "" : $_POST['pieza_4_placa']);
    $pieza_4_calculo = limpiar(empty($_POST["pieza_4_calculo"]) ? "" : $_POST['pieza_4_calculo']);
    $pieza_4_gingivitis = limpiar(empty($_POST["pieza_4_gingivitis"]) ? "" : $_POST['pieza_4_gingivitis']);
    $pieza_31 = limpiar(empty($_POST["pieza_31"]) ? "" : $_POST['pieza_31']);
    $pieza_41 = limpiar(empty($_POST["pieza_41"]) ? "" : $_POST['pieza_41']);
    $pieza_71 = limpiar(empty($_POST["pieza_71"]) ? "" : $_POST['pieza_71']);
    $pieza_5_placa = limpiar(empty($_POST["pieza_5_placa"]) ? "" : $_POST['pieza_5_placa']);
    $pieza_5_calculo = limpiar(empty($_POST["pieza_5_calculo"]) ? "" : $_POST['pieza_5_calculo']);
    $pieza_5_gingivitis = limpiar(empty($_POST["pieza_5_gingivitis"]) ? "" : $_POST['pieza_5_gingivitis']); 
    $pieza_46 = limpiar(empty($_POST["pieza_46"]) ? "" : $_POST['pieza_46']);
    $pieza_47 = limpiar(empty($_POST["pieza_47"]) ? "" : $_POST['pieza_47']);
    $pieza_85 = limpiar(empty($_POST["pieza_85"]) ? "" : $_POST['pieza_85']);
    $pieza_6_placa = limpiar(empty($_POST["pieza_6_placa"]) ? "" : $_POST['pieza_6_placa']);
    $pieza_6_calculo = limpiar(empty($_POST["pieza_6_calculo"]) ? "" : $_POST['pieza_6_calculo']);
    $pieza_6_gingivitis = limpiar(empty($_POST["pieza_6_gingivitis"]) ? "" : $_POST['pieza_6_gingivitis']);
    $periodontal = limpiar(empty($_POST["periodontal"]) ? "" : $_POST['periodontal']);
    $oclusion = limpiar(empty($_POST["oclusion"]) ? "" : $_POST['oclusion']);
    $fluorosis = limpiar(empty($_POST["fluorosis"]) ? "" : $_POST['fluorosis']); 
    $cpo_1_c = limpiar(empty($_POST["cpo_1_c"]) ? "" : $_POST['cpo_1_c']); 
    $cpo_1_p = limpiar(empty($_POST["cpo_1_p"]) ? "" : $_POST['cpo_1_p']); 
    $cpo_1_o = limpiar(empty($_POST["cpo_1_o"]) ? "" : $_POST['cpo_1_o']); 
    $cpo_2_c = limpiar(empty($_POST["cpo_2_c"]) ? "" : $_POST['cpo_2_c']); 
    $cpo_2_e = limpiar(empty($_POST["cpo_2_e"]) ? "" : $_POST['cpo_2_e']); 
    $cpo_2_o = limpiar(empty($_POST["cpo_2_o"]) ? "" : $_POST['cpo_2_o']);  
	$biometria = limpiar(empty($_POST["biometria"]) ? "" : $_POST['biometria']);
	$quimica = limpiar(empty($_POST["quimica"]) ? "" : $_POST['quimica']);
	$rayosx = limpiar(empty($_POST["rayosx"]) ? "" : $_POST['rayosx']);
	$otros_planes = limpiar(empty($_POST["otros_planes"]) ? "" : $_POST['otros_planes']);
	$observaciones_planes = limpiar(empty($_POST["observaciones_planes"]) ? "" : $_POST['observaciones_planes']);

	################# DX PRESUNTIVO #################
	$cont = 0;
	$arrayBD = array();
	$idciepres = $_POST["idciepresuntivoingreso"];
	$pres = $_POST["presuntivoingreso"];
	for($cont; $cont<count($_POST["presuntivoingreso"]); $cont++):
		$arrayBD[] = trim($idciepres[$cont]."/".$pres[$cont]."\n");
	endfor;
	$dxpres = implode(",,",$arrayBD);
    ################# DX PRESUNTIVO #################

    ################# DX DEFINITIVO #################
	$cont = 0;
	$arrayBD = array();
	$idciedef = $_POST["idciedefinitivoingreso"];
	$def = $_POST["definitivoingreso"];
	for($cont; $cont<count($_POST["definitivoingreso"]); $cont++):
		$arrayBD[] = trim($idciedef[$cont]."/".$def[$cont]."\n");
	endfor;
	$dxdef = implode(",,",$arrayBD);
    ################# DX DEFINITIVO #################
	
	$fechaodontologia = limpiar($fecha);
	$codigo = limpiar($_SESSION["codigo"]);
	$stmt->execute();
	################################### REGISTRO LA CONSULTA ODONTOLOGICA ###################################

	#################### ACTUALIZO STATUS DE ODONTOGRAMA ####################
	$sql = " UPDATE referenciasodontograma set "
	    ." codcita = ?, "
	    ." status = ? "
	    ." WHERE "
		." codpaciente = ? AND codsucursal = ? AND status = 0;
		";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $codcita);
	$stmt->bindParam(2, $status);
	$stmt->bindParam(3, $codpaciente);
	$stmt->bindParam(4, $codsucursal);
			
	$codcita = limpiar(decrypt($_POST["codcita"]));
	$status = limpiar("1");
	$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
	$stmt->execute();
	#################### ACTUALIZO STATUS DE ODONTOGRAMA ####################

	################ CREO CODIGO DE SESION ####################
	$sql = "SELECT codsesion FROM detalles_odontologia 
	WHERE cododontologia = '".$cododontologia."'
	AND codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."' 
	ORDER BY coddetalleodontologia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$sesion=$row["codsesion"];

	}
	if(empty($sesion))
	{
		$codsesion = "1";

	} else {

		$num = substr($sesion, 0);
        $codigo = $num + 1;
        $codsesion = $codigo;
	}
    ################ CREO CODIGO DE SESION ###############

	################################### REGISTRO LA SESION DE TRATAMIENTO ###################################
    $query = "INSERT INTO detalles_odontologia values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $cododontologia);
	$stmt->bindParam(2, $codsesion);
	$stmt->bindParam(3, $codcita);
	$stmt->bindParam(4, $codsucursal);
	$stmt->bindParam(5, $codmedico);
	$stmt->bindParam(6, $codpaciente);
	$stmt->bindParam(7, $diagnostico);
	$stmt->bindParam(8, $procedimientos);
	$stmt->bindParam(9, $prescripciones);
	$stmt->bindParam(10, $fecha_detalle);
	
	$codcita = limpiar(decrypt($_POST["codcita"]));
	$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
	$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
	$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	$diagnostico = limpiar(empty($_POST["diagnostico"]) ? "" : $_POST['diagnostico']);
	$procedimientos = limpiar(empty($_POST["procedimientos"]) ? "" : $_POST['procedimientos']);
	$prescripciones = limpiar(empty($_POST["prescripciones"]) ? "" : $_POST['prescripciones']);
	$fecha_detalle = limpiar($fecha);
	$stmt->execute();
	################################### REGISTRO LA SESION DE TRATAMIENTO ###################################

	################# ACTUALIZO EL STATUS DE CITA ##############
	$sql = " UPDATE citasmedicas set "
	." statuscita = ? "
	." WHERE "
	." codcita = ?;
	";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $statuscita);
	$stmt->bindParam(2, $codcita);

	$statuscita = limpiar('1');
	$codcita = limpiar(decrypt($_POST["codcita"]));
	$stmt->execute();
	################# ACTUALIZO EL STATUS DE CITA ##############

	####################################################################################
	#                                                                                  #
	#                  REGISTRO ODONTOLOGIA Y DETALLES DE ODONTOGRAMA                  #
	#                                                                                  #
	####################################################################################

	echo "<span class='fa fa-check-square-o'></span> LA CONSULTA ODONTOLOGICA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($cododontologia)."&tipo=".encrypt("CONSTANCIA_ODONTOLOGIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Odontologia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR FICHA ODONTOLOGICA</strong></a>";

	/*echo "<script>window.open('reportepdf?numero=".encrypt($cododontologia)."&codsucursal=".encrypt($codsucursal)."&tipo=".encrypt("CONSTANCIA_ODONTOLOGIA")."', '_blank');</script>";*/
	exit;

	} else {

		echo "5";
		exit;
	}
}
######################### FUNCION REGISTRAR ODONTOLOGIA #########################

######################### FUNCION REGISTRAR HOJA EVOLUTIVA #######################
public function RegistrarHojaOdontologia()
{
	self::SetNames();
	if(empty($_POST["codcita"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}
	elseif(empty($_POST["estados"]))
	{
		echo "2";
		exit;
	}

	$sql = "SELECT 
	codpaciente, 
	codsucursal 
	FROM odontologias 
	WHERE codpaciente = ? 
	AND codsucursal = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codpaciente"]), decrypt($_POST["sucursal_busqueda"])));
	$num = $stmt->rowCount();
	if($num > 0)
	{

	$fecha = date("Y-m-d H:i:s");

	####################################################################################
	#                                                                                  #
	#                  REGISTRO ODONTOLOGIA Y DETALLES DE ODONTOGRAMA                  #
	#                                                                                  #
	####################################################################################
		
    ################ OBTENGO CODIGO DE ODONTOLOGIA ################
	$sql = "SELECT * FROM odontologias
	WHERE codpaciente = '".limpiar(decrypt($_POST["codpaciente"]))."'
	AND codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	$cododontologia = $row['cododontologia'];
    ################ OBTENGO CODIGO DE ODONTOLOGIA ################

	################ CREO CODIGO DE SESION ####################
	$sql = "SELECT codsesion FROM detalles_odontologia 
	WHERE cododontologia = '".$cododontologia."'
	AND codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."'
	ORDER BY coddetalleodontologia DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$sesion=$row["codsesion"];

	}
	if(empty($sesion))
	{
		$codsesion = "1";

	} else {

		$num = substr($sesion, 0);
        $codigo = $num + 1;
        $codsesion = $codigo;
	}
    ################ CREO CODIGO DE SESION ###############

	################################### REGISTRO LA SESION DE TRATAMIENTO ###################################
    $query = "INSERT INTO detalles_odontologia values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
	$stmt = $this->dbh->prepare($query);
	$stmt->bindParam(1, $cododontologia);
	$stmt->bindParam(2, $codsesion);
	$stmt->bindParam(3, $codcita);
	$stmt->bindParam(4, $codsucursal);
	$stmt->bindParam(5, $codmedico);
	$stmt->bindParam(6, $codpaciente);
	$stmt->bindParam(7, $diagnostico);
	$stmt->bindParam(8, $procedimientos);
	$stmt->bindParam(9, $prescripciones);
	$stmt->bindParam(10, $fecha_detalle);
	
	$codcita = limpiar(decrypt($_POST["codcita"]));
	$codsucursal = limpiar(decrypt($_POST["sucursal_busqueda"]));
	$codmedico = limpiar(decrypt($_POST["medico_busqueda"]));
	$codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	$diagnostico = limpiar(empty($_POST["diagnostico"]) ? "" : $_POST['diagnostico']);
	$procedimientos = limpiar(empty($_POST["procedimientos"]) ? "" : $_POST['procedimientos']);
	$prescripciones = limpiar(empty($_POST["prescripciones"]) ? "" : $_POST['prescripciones']);
	$fecha_detalle = limpiar($fecha);
	$stmt->execute();
	################################### REGISTRO LA SESION DE TRATAMIENTO ###################################

	##################### ACTUALIZO EL STATUS DE CITA ####################
	$sql = " UPDATE citasmedicas set "
		  ." statuscita = ? "
		  ." WHERE "
		  ." codcita = '".limpiar(decrypt($_POST["codcita"]))."' 
		  AND codsucursal = '".limpiar(decrypt($_POST["sucursal_busqueda"]))."';
		   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $statuscita);
	$statuscita = limpiar('1');
	$stmt->execute();
	##################### ACTUALIZO EL STATUS DE CITA ####################

	####################################################################################
	#                                                                                  #
	#                  REGISTRO ODONTOLOGIA Y DETALLES DE ODONTOGRAMA                  #
	#                                                                                  #
	####################################################################################

	echo "<span class='fa fa-check-square-o'></span> LA CONSULTA ODONTOLOGICA HA SIDO REGISTRADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($cododontologia)."&tipo=".encrypt("CONSTANCIA_ODONTOLOGIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Odontologia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR FICHA ODONTOLOGICA</strong></a>";

	/*echo "<script>window.open('reportepdf?numero=".encrypt($cododontologia)."&codsucursal=".encrypt($codsucursal)."&tipo=".encrypt("CONSTANCIA_ODONTOLOGIA")."', '_blank');</script>";*/
	exit;

	} else {

		echo "3";
		exit;
	}
}
######################### FUNCION REGISTRAR HOJA EVOLUTIVA #########################

########################## FUNCION BUSQUEDA DE ODONTOLOGIAS ###############################
public function BusquedaOdontologias()
{
	self::SetNames();
	if($_SESSION["acceso"] == "medico") {

		$sql = "SELECT 
		odontologias.idodontologia,
		odontologias.cododontologia,
		odontologias.nrodocumento,  
		odontologias.codcita,
		odontologias.codsucursal,
		odontologias.codmedico, 
		odontologias.codpaciente, 
		odontologias.motivo_consulta,
		odontologias.problema_actual,
		odontologias.observaciones_antecedentes,
		odontologias.observaciones_examen,
		odontologias.presuntivo,
		odontologias.definitivo,
		odontologias.fechaodontologia,
		odontologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM odontologias 
		LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		odontologias.motivo_consulta,
		DATE_FORMAT(odontologias.fechaodontologia,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		AND radiologias.codmedico = '".limpiar($_SESSION["codmedico"])."' 
	   AND radiologias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	} else {
	   
	   $sql = "SELECT 
		odontologias.idodontologia,
		odontologias.cododontologia,
		odontologias.nrodocumento,  
		odontologias.codcita,
		odontologias.codsucursal,
		odontologias.codmedico, 
		odontologias.codpaciente, 
		odontologias.motivo_consulta,
		odontologias.problema_actual,
		odontologias.observaciones_antecedentes,
		odontologias.observaciones_examen,
		odontologias.presuntivo,
		odontologias.definitivo,
		odontologias.fechaodontologia,
		odontologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM odontologias 
		LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE CONCAT(
		pacientes.cedpaciente,
		pacientes.pnompaciente,
		if(pacientes.snompaciente='','0',pacientes.snompaciente),
		pacientes.papepaciente, 
	   if(pacientes.sapepaciente='','0',pacientes.sapepaciente),
		odontologias.motivo_consulta,
		DATE_FORMAT(odontologias.fechaodontologia,'%d-%m-%Y'),
		medicos.cedmedico,
		medicos.nommedico) LIKE '%".limpiar($_GET['search_criterio'])."%'
		ORDER BY pacientes.pnompaciente, pacientes.papepaciente ASC LIMIT 0,60";
		$stmt = $this->dbh->prepare($sql);
		$stmt->execute();
		$num = $stmt->rowCount();
		if($num==0) {

		   echo "<div class='alert alert-danger'>";
		   echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
	      echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
	      echo "</div>";		
		   exit;
	   
		} else {
				
			while($row = $stmt->fetch(PDO::FETCH_ASSOC))
			{
				$this->p[]=$row;
			}
			return $this->p;
			$this->dbh=null;
		}
	}
}
########################## FUNCION BUSQUEDA DE ODONTOLOGIAS ###############################

############################ FUNCION LISTAR ODONTOLOGIA #############################
public function ListarOdontologias()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

		$sql = "SELECT 
		odontologias.idodontologia,
		odontologias.cododontologia,
		odontologias.nrodocumento,  
		odontologias.codcita,
		odontologias.codsucursal,
		odontologias.codmedico, 
		odontologias.codpaciente, 
		odontologias.motivo_consulta,
		odontologias.problema_actual,
		odontologias.observaciones_antecedentes,
		odontologias.observaciones_examen,
		odontologias.presuntivo,
		odontologias.definitivo,
		odontologias.fechaodontologia,
		odontologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM odontologias 
		LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
		WHERE odontologias.codmedico = '".limpiar($_SESSION["codmedico"])."'
		AND odontologias.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

		$sql = "SELECT 
		odontologias.idodontologia,
		odontologias.cododontologia,
		odontologias.nrodocumento,  
		odontologias.codcita,
		odontologias.codsucursal,
		odontologias.codmedico, 
		odontologias.codpaciente, 
		odontologias.motivo_consulta,
		odontologias.problema_actual,
		odontologias.observaciones_antecedentes,
		odontologias.observaciones_examen,
		odontologias.presuntivo,
		odontologias.definitivo,
		odontologias.fechaodontologia,
		odontologias.codigo,
		medicos.docummedico,
		medicos.cedmedico, 
		medicos.nommedico,
		medicos.codespecialidad,
		medicos.mps,
		especialidades.nomespecialidad,
		pacientes.codpaciente,
		pacientes.numerohistoria,
		pacientes.documpaciente,
		pacientes.cedpaciente,
		CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
		CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
		pacientes.sexopaciente,
		pacientes.gruposapaciente,
		pacientes.ocupacionpaciente,
		pacientes.estadopaciente,
		pacientes.fnacpaciente,
		pacientes.tlfpaciente,
		pacientes.direcpaciente,
		pacientes.nomacompana,
		pacientes.parentescoacompana,
		sucursales.documsucursal, 
		sucursales.cuitsucursal, 
		sucursales.nomsucursal,
		sucursales.documencargado,
		sucursales.dniencargado,
		sucursales.nomencargado,
	   sucursales.idprovincia,
	   sucursales.idcanton,
	   sucursales.idparroquia,
		sucursales.direcsucursal,
		sucursales.tlfsucursal,
		sucursales.correosucursal,
		documentos.documento,
		documentos2.documento AS documento2,
		documentos3.documento AS documento3,
		documentos4.documento AS documento4,
		tbl_provincia.provincia,
		tbl_canton.canton,
	   tbl_parroquia.parroquia
		FROM odontologias 
		LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
		LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
		LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
		LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
		LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
		LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
		LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
		LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
		LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
		LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
		LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR ODONTOLOGIA #############################

########################### FUNCION ID ODONTOLOGIAS ###############################
public function OdontologiasPorId()
{
	self::SetNames();
	$sql = "SELECT
	odontologias.idodontologia,
	odontologias.cododontologia,
	odontologias.nrodocumento,  
	odontologias.codcita,
	odontologias.codsucursal,
	odontologias.codmedico, 
	odontologias.codpaciente,
	odontologias.menor_1,
	odontologias.1_4,
	odontologias.5_9,
	odontologias.5_14,
	odontologias.10_14,
	odontologias.15_19,
	odontologias.mayor_20,
	odontologias.embarazada,
	odontologias.motivo_consulta,
	odontologias.problema_actual,
	odontologias.alergia_antibiotico,
	odontologias.alergia_anestesia, 
	odontologias.hemorragias, 
	odontologias.vih, 
	odontologias.tuberculosis, 
	odontologias.asma, 
	odontologias.diabetes, 
	odontologias.hipertension, 
	odontologias.enfermedad_cardiaca, 
	odontologias.otro_antecedentes, 
	odontologias.observaciones_antecedentes, 
	odontologias.presion_arterial, 
	odontologias.frecuencia_cardiaca, 
	odontologias.temperatura, 
	odontologias.frecuencia_respiratoria, 
	odontologias.labios, 
	odontologias.mejillas, 
	odontologias.maxilar_superior, 
	odontologias.maxilar_inferior, 
	odontologias.lengua, 
	odontologias.paladar, 
	odontologias.piso, 
	odontologias.carrillos, 
	odontologias.glandulas, 
	odontologias.faringe, 
	odontologias.atm, 
	odontologias.ganglios, 
	odontologias.observaciones_examen,
	odontologias.pieza_16,
	odontologias.pieza_17,
	odontologias.pieza_55,
	odontologias.pieza_1_placa,
	odontologias.pieza_1_calculo,
	odontologias.pieza_1_gingivitis,
	odontologias.pieza_11,
	odontologias.pieza_21,
	odontologias.pieza_51,
	odontologias.pieza_2_placa,
	odontologias.pieza_2_calculo,
	odontologias.pieza_2_gingivitis,
	odontologias.pieza_26,
	odontologias.pieza_27,
	odontologias.pieza_65,
	odontologias.pieza_3_placa,
	odontologias.pieza_3_calculo,
	odontologias.pieza_3_gingivitis,
	odontologias.pieza_36,
	odontologias.pieza_37,
	odontologias.pieza_75,
	odontologias.pieza_4_placa,
	odontologias.pieza_4_calculo,
	odontologias.pieza_4_gingivitis,
	odontologias.pieza_31,
	odontologias.pieza_41,
	odontologias.pieza_71,
	odontologias.pieza_5_placa,
	odontologias.pieza_5_calculo,
	odontologias.pieza_5_gingivitis,
	odontologias.pieza_46,
	odontologias.pieza_47,
	odontologias.pieza_85,
	odontologias.pieza_6_placa,
	odontologias.pieza_6_calculo,
	odontologias.pieza_6_gingivitis,
	odontologias.periodontal, 
	odontologias.oclusion, 
	odontologias.fluorosis,
	odontologias.cpo_1_c,
	odontologias.cpo_1_p, 
	odontologias.cpo_1_o,
	odontologias.cpo_2_c,
	odontologias.cpo_2_e, 
	odontologias.cpo_2_o, 
	odontologias.biometria, 
	odontologias.quimica, 
	odontologias.rayosx, 
	odontologias.otros_planes, 
	odontologias.observaciones_planes,
	odontologias.presuntivo, 
	odontologias.definitivo, 
	odontologias.fechaodontologia, 
	odontologias.codsucursal,
	referenciasodontograma.codreferencia,
	referenciasodontograma.estados,
	referenciasodontograma.fecharegistro, 
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM odontologias
	LEFT JOIN referenciasodontograma ON odontologias.codpaciente = referenciasodontograma.codpaciente 
	LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE odontologias.cododontologia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID ODONTOLOGIAS ###############################

########################### FUNCION VER DETALLES ODONTOLOGIA ##########################
public function VerDetallesOdontologia()
	{
	self::SetNames();
	$sql = "SELECT
	detalles_odontologia.coddetalleodontologia,
	detalles_odontologia.cododontologia,
	detalles_odontologia.codsesion,
	detalles_odontologia.codcita,
	detalles_odontologia.codsucursal,
	detalles_odontologia.codmedico,
	detalles_odontologia.codpaciente,
	detalles_odontologia.diagnostico,
	detalles_odontologia.procedimientos,
	detalles_odontologia.prescripciones,
	detalles_odontologia.fecha_detalle,
	detalles_odontologia.codsucursal,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps
	FROM detalles_odontologia 
	LEFT JOIN medicos ON detalles_odontologia.codmedico = medicos.codmedico 
	WHERE detalles_odontologia.cododontologia = ?
	";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	while($row = $stmt->fetch(PDO::FETCH_ASSOC))
	{
		$this->p[]=$row;
	}
	return $this->p;
	$this->dbh=null;
}
############################ FUNCION VER DETALLES ODONTOLOGIA #######################

########################## FUNCION ACTUALIZAR ODONTOLOGIA #######################
public function ActualizarOdontologias()
	{
	self::SetNames();
	if(empty($_POST["cododontologia"]) or empty($_POST["sucursal_busqueda"]) or empty($_POST["medico_busqueda"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}
	elseif(empty($_POST["estados"]))
	{
		echo "2";
		exit;
	}		

	####################### DX PRESUNTIVO #######################
	if (limpiar(isset($_POST['idciepresuntivoingreso']))) {

		$presuntivo = $_POST['presuntivoingreso'];
	    $repeated = array_filter(array_count_values($presuntivo), function($count) {
	        return $count > 1;
	    });

	    foreach ($repeated as $key => $value) {
	        echo "3";
			exit;
	    }
	}
	####################### DX PRESUNTIVO #######################

	####################### DX DEFINITIVO #######################
	if (limpiar(isset($_POST['idciedefinitivoingreso']))) {
			
		$definitivo = $_POST['definitivoingreso'];
	    $repeated = array_filter(array_count_values($definitivo), function($count) {
	        return $count > 1;
	    });

	    foreach ($repeated as $key => $value) {
	        echo "4";
			exit;
	    }
    }
    ####################### DX DEFINITIVO #######################

    ################# ACTUALIZO ODONTOLOGIA ##############
    $sql = "UPDATE odontologias set "
    ." menor_1 = ?, "
    ." 1_4 = ?, "
    ." 5_9 = ?, "
    ." 5_14 = ?, "
    ." 10_14 = ?, "
    ." 15_19 = ?, "
    ." mayor_20 = ?, "
    ." embarazada = ?, "
    ." motivo_consulta = ?, "
    ." problema_actual = ?, "
    ." alergia_antibiotico = ?, "
    ." alergia_anestesia = ?, "
    ." hemorragias = ?, "
    ." vih = ?, "
    ." tuberculosis = ?, "
    ." asma = ?, "
    ." diabetes = ?, "
    ." hipertension = ?, "
    ." enfermedad_cardiaca = ?, "
    ." otro_antecedentes = ?, "
    ." observaciones_antecedentes = ?, "
    ." presion_arterial = ?, "
    ." frecuencia_cardiaca = ?, "
    ." temperatura = ?, "
    ." frecuencia_respiratoria = ?, "
    ." labios = ?, "
    ." mejillas = ?, "
    ." maxilar_superior = ?, "
    ." maxilar_inferior = ?, "
    ." lengua = ?, "
    ." paladar = ?, "
    ." piso = ?, "
    ." carrillos = ?, "
    ." glandulas = ?, "
    ." faringe = ?, "
    ." atm = ?, "
    ." ganglios = ?, "
    ." observaciones_examen = ?, "
    ." pieza_16 = ?, "
    ." pieza_17 = ?, "
    ." pieza_55 = ?, "
    ." pieza_1_placa = ?, "
    ." pieza_1_calculo = ?, "
    ." pieza_1_gingivitis = ?, "
    ." pieza_11 = ?, "
    ." pieza_21 = ?, "
    ." pieza_51 = ?, "
    ." pieza_2_placa = ?, "
    ." pieza_2_calculo = ?, "
    ." pieza_2_gingivitis = ?, "
    ." pieza_26 = ?, "
    ." pieza_27 = ?, "
    ." pieza_65 = ?, "
    ." pieza_3_placa = ?, "
    ." pieza_3_calculo = ?, "
    ." pieza_3_gingivitis = ?, "
    ." pieza_36 = ?, "
    ." pieza_37 = ?, "
    ." pieza_75 = ?, "
    ." pieza_4_placa = ?, "
    ." pieza_4_calculo = ?, "
    ." pieza_4_gingivitis = ?, "
    ." pieza_31 = ?, "
    ." pieza_41 = ?, "
    ." pieza_71 = ?, "
    ." pieza_5_placa = ?, "
    ." pieza_5_calculo = ?, "
    ." pieza_5_gingivitis = ?, "
    ." pieza_46 = ?, "
    ." pieza_47 = ?, "
    ." pieza_85 = ?, "
    ." pieza_6_placa = ?, "
    ." pieza_6_calculo = ?, "
    ." pieza_6_gingivitis = ?, "
    ." periodontal = ?, "
    ." oclusion = ?, "
    ." fluorosis = ?, "
    ." cpo_1_c = ?, "
    ." cpo_1_p = ?, "
    ." cpo_1_o = ?, "
    ." cpo_2_c = ?, "
    ." cpo_2_e = ?, "
    ." cpo_2_o = ?, "
    ." biometria = ?, "
    ." quimica = ?, "
    ." rayosx = ?, "
    ." otros_planes = ?, "
    ." observaciones_planes = ?, "
    ." presuntivo = ?, "
    ." definitivo = ? "
    ." WHERE "
    ." idodontologia = ?;
    ";
    $stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $menor_1);
	$stmt->bindParam(2, $otro_1);
	$stmt->bindParam(3, $otro_2);
	$stmt->bindParam(4, $otro_3);
	$stmt->bindParam(5, $otro_4);
	$stmt->bindParam(6, $otro_5);
	$stmt->bindParam(7, $mayor_20);
	$stmt->bindParam(8, $embarazada);
	$stmt->bindParam(9, $motivo_consulta);
	$stmt->bindParam(10, $problema_actual);
	$stmt->bindParam(11, $alergia_antibiotico);
	$stmt->bindParam(12, $alergia_anestesia);
	$stmt->bindParam(13, $hemorragias);
	$stmt->bindParam(14, $vih);
	$stmt->bindParam(15, $tuberculosis);
	$stmt->bindParam(16, $asma);
	$stmt->bindParam(17, $diabetes);
	$stmt->bindParam(18, $hipertension);
	$stmt->bindParam(19, $enfermedad_cardiaca);
	$stmt->bindParam(20, $otro_antecedentes);
	$stmt->bindParam(21, $observaciones_antecedentes);
	$stmt->bindParam(22, $presion_arterial);
	$stmt->bindParam(23, $frecuencia_cardiaca);
	$stmt->bindParam(24, $temperatura);
	$stmt->bindParam(25, $frecuencia_respiratoria);
	$stmt->bindParam(26, $labios);
	$stmt->bindParam(27, $mejillas);
	$stmt->bindParam(28, $maxilar_superior);
	$stmt->bindParam(29, $maxilar_inferior);
	$stmt->bindParam(30, $lengua);
	$stmt->bindParam(31, $paladar);
	$stmt->bindParam(32, $piso);
	$stmt->bindParam(33, $carrillos);
	$stmt->bindParam(34, $glandulas);
	$stmt->bindParam(35, $faringe);
	$stmt->bindParam(36, $atm);
	$stmt->bindParam(37, $ganglios);
	$stmt->bindParam(38, $observaciones_examen);
	$stmt->bindParam(39, $pieza_16);
	$stmt->bindParam(40, $pieza_17);
	$stmt->bindParam(41, $pieza_55);
	$stmt->bindParam(42, $pieza_1_placa);
	$stmt->bindParam(43, $pieza_1_calculo);
	$stmt->bindParam(44, $pieza_1_gingivitis);
	$stmt->bindParam(45, $pieza_11);
	$stmt->bindParam(46, $pieza_21);
	$stmt->bindParam(47, $pieza_51);
	$stmt->bindParam(48, $pieza_2_placa);
	$stmt->bindParam(49, $pieza_2_calculo);
	$stmt->bindParam(50, $pieza_2_gingivitis);
	$stmt->bindParam(51, $pieza_26);
	$stmt->bindParam(52, $pieza_27);
	$stmt->bindParam(53, $pieza_65);
	$stmt->bindParam(54, $pieza_3_placa);
	$stmt->bindParam(55, $pieza_3_calculo);
	$stmt->bindParam(56, $pieza_3_gingivitis);
	$stmt->bindParam(57, $pieza_36);
	$stmt->bindParam(58, $pieza_37);
	$stmt->bindParam(59, $pieza_75);
	$stmt->bindParam(60, $pieza_4_placa);
	$stmt->bindParam(61, $pieza_4_calculo);
	$stmt->bindParam(62, $pieza_4_gingivitis);
	$stmt->bindParam(63, $pieza_31);
	$stmt->bindParam(64, $pieza_41);
	$stmt->bindParam(65, $pieza_71);
	$stmt->bindParam(66, $pieza_5_placa);
	$stmt->bindParam(67, $pieza_5_calculo);
	$stmt->bindParam(68, $pieza_5_gingivitis);
	$stmt->bindParam(69, $pieza_46);
	$stmt->bindParam(70, $pieza_47);
	$stmt->bindParam(71, $pieza_85);
	$stmt->bindParam(72, $pieza_6_placa);
	$stmt->bindParam(73, $pieza_6_calculo);
	$stmt->bindParam(74, $pieza_6_gingivitis);
	$stmt->bindParam(75, $periodontal);
	$stmt->bindParam(76, $oclusion);
	$stmt->bindParam(77, $fluorosis);
	$stmt->bindParam(78, $cpo_1_c);
	$stmt->bindParam(79, $cpo_1_p);
	$stmt->bindParam(80, $cpo_1_o);
	$stmt->bindParam(81, $cpo_2_c);
	$stmt->bindParam(82, $cpo_2_e);
	$stmt->bindParam(83, $cpo_2_o);
	$stmt->bindParam(84, $biometria);
	$stmt->bindParam(85, $quimica);
	$stmt->bindParam(86, $rayosx);
	$stmt->bindParam(87, $otros_planes);
	$stmt->bindParam(88, $observaciones_planes);
	$stmt->bindParam(89, $dxpres);
	$stmt->bindParam(90, $dxdef);
    $stmt->bindParam(91, $idodontologia);

    $menor_1 = limpiar(empty($_POST["menor_1"]) ? "" : $_POST['menor_1']);
	$otro_1 = limpiar(empty($_POST["1_4"]) ? "" : $_POST['1_4']);
	$otro_2 = limpiar(empty($_POST["5_9"]) ? "" : $_POST['5_9']);
	$otro_3 = limpiar(empty($_POST["5_14"]) ? "" : $_POST['5_14']);
	$otro_4 = limpiar(empty($_POST["10_14"]) ? "" : $_POST['10_14']);
	$otro_5 = limpiar(empty($_POST["15_19"]) ? "" : $_POST['15_19']);
	$mayor_20 = limpiar(empty($_POST["mayor_20"]) ? "" : $_POST['mayor_20']);
	$embarazada = limpiar(empty($_POST["embarazada"]) ? "" : $_POST['embarazada']);
	$motivo_consulta = limpiar($_POST["motivo_consulta"]);
	$problema_actual = limpiar($_POST["problema_actual"]);
	$alergia_antibiotico = limpiar(empty($_POST["alergia_antibiotico"]) ? "" : $_POST['alergia_antibiotico']);
	$alergia_anestesia = limpiar(empty($_POST["alergia_anestesia"]) ? "" : $_POST['alergia_anestesia']);
	$hemorragias = limpiar(empty($_POST["hemorragias"]) ? "" : $_POST['hemorragias']);
	$vih = limpiar(empty($_POST["vih"]) ? "" : $_POST['vih']);
	$tuberculosis = limpiar(empty($_POST["tuberculosis"]) ? "" : $_POST['tuberculosis']);
	$asma = limpiar(empty($_POST["asma"]) ? "" : $_POST['asma']);
	$diabetes = limpiar(empty($_POST["diabetes"]) ? "" : $_POST['diabetes']);
	$hipertension = limpiar(empty($_POST["hipertension"]) ? "" : $_POST['hipertension']);
	$enfermedad_cardiaca = limpiar(empty($_POST["enfermedad_cardiaca"]) ? "" : $_POST['enfermedad_cardiaca']);
	$otro_antecedentes = limpiar(empty($_POST["otro_antecedentes"]) ? "" : $_POST['otro_antecedentes']);
	$observaciones_antecedentes = limpiar(empty($_POST["observaciones_antecedentes"]) ? "" : $_POST['observaciones_antecedentes']);
	$presion_arterial = limpiar($_POST['presion_arterial']);
	$frecuencia_cardiaca = limpiar($_POST['frecuencia_cardiaca']);
	$temperatura = limpiar($_POST['temperatura']);
	$frecuencia_respiratoria = limpiar($_POST['frecuencia_respiratoria']);
	$labios = limpiar(empty($_POST["labios"]) ? "" : $_POST['labios']);
	$mejillas = limpiar(empty($_POST["mejillas"]) ? "" : $_POST['mejillas']);
	$maxilar_superior = limpiar(empty($_POST["maxilar_superior"]) ? "" : $_POST['maxilar_superior']);
	$maxilar_inferior = limpiar(empty($_POST["maxilar_inferior"]) ? "" : $_POST['maxilar_inferior']);
	$lengua = limpiar(empty($_POST["lengua"]) ? "" : $_POST['lengua']);
	$paladar = limpiar(empty($_POST["paladar"]) ? "" : $_POST['paladar']);
	$piso = limpiar(empty($_POST["piso"]) ? "" : $_POST['piso']);
	$carrillos = limpiar(empty($_POST["carrillos"]) ? "" : $_POST['carrillos']);
	$glandulas = limpiar(empty($_POST["glandulas"]) ? "" : $_POST['glandulas']);
	$faringe = limpiar(empty($_POST["faringe"]) ? "" : $_POST['faringe']);
	$atm = limpiar(empty($_POST["atm"]) ? "" : $_POST['atm']);
	$ganglios = limpiar(empty($_POST["ganglios"]) ? "" : $_POST['ganglios']);
	$observaciones_examen = limpiar(empty($_POST["observaciones_examen"]) ? "" : $_POST['observaciones_examen']);
	$pieza_16 = limpiar(empty($_POST["pieza_16"]) ? "" : $_POST['pieza_16']);
	$pieza_17 = limpiar(empty($_POST["pieza_17"]) ? "" : $_POST['pieza_17']);
	$pieza_55 = limpiar(empty($_POST["pieza_55"]) ? "" : $_POST['pieza_55']);
    $pieza_1_placa = limpiar(empty($_POST["pieza_1_placa"]) ? "" : $_POST['pieza_1_placa']);
    $pieza_1_calculo = limpiar(empty($_POST["pieza_1_calculo"]) ? "" : $_POST['pieza_1_calculo']);
    $pieza_1_gingivitis = limpiar(empty($_POST["pieza_1_gingivitis"]) ? "" : $_POST['pieza_1_gingivitis']);
    $pieza_11 = limpiar(empty($_POST["pieza_11"]) ? "" : $_POST['pieza_11']);
    $pieza_21 = limpiar(empty($_POST["pieza_21"]) ? "" : $_POST['pieza_21']);
    $pieza_51 = limpiar(empty($_POST["pieza_51"]) ? "" : $_POST['pieza_51']);
    $pieza_2_placa = limpiar(empty($_POST["pieza_2_placa"]) ? "" : $_POST['pieza_2_placa']);
    $pieza_2_calculo = limpiar(empty($_POST["pieza_2_calculo"]) ? "" : $_POST['pieza_2_calculo']);
    $pieza_2_gingivitis = limpiar(empty($_POST["pieza_2_gingivitis"]) ? "" : $_POST['pieza_2_gingivitis']);
    $pieza_26 = limpiar(empty($_POST["pieza_26"]) ? "" : $_POST['pieza_26']);
    $pieza_27 = limpiar(empty($_POST["pieza_27"]) ? "" : $_POST['pieza_27']);
    $pieza_65 = limpiar(empty($_POST["pieza_65"]) ? "" : $_POST['pieza_65']);
    $pieza_3_placa = limpiar(empty($_POST["pieza_3_placa"]) ? "" : $_POST['pieza_3_placa']);
    $pieza_3_calculo = limpiar(empty($_POST["pieza_3_calculo"]) ? "" : $_POST['pieza_3_calculo']);
    $pieza_3_gingivitis = limpiar(empty($_POST["pieza_3_gingivitis"]) ? "" : $_POST['pieza_3_gingivitis']);
    $pieza_36 = limpiar(empty($_POST["pieza_36"]) ? "" : $_POST['pieza_36']);
    $pieza_37 = limpiar(empty($_POST["pieza_37"]) ? "" : $_POST['pieza_37']);
    $pieza_75 = limpiar(empty($_POST["pieza_75"]) ? "" : $_POST['pieza_75']);
    $pieza_4_placa = limpiar(empty($_POST["pieza_4_placa"]) ? "" : $_POST['pieza_4_placa']);
    $pieza_4_calculo = limpiar(empty($_POST["pieza_4_calculo"]) ? "" : $_POST['pieza_4_calculo']);
    $pieza_4_gingivitis = limpiar(empty($_POST["pieza_4_gingivitis"]) ? "" : $_POST['pieza_4_gingivitis']);
    $pieza_31 = limpiar(empty($_POST["pieza_31"]) ? "" : $_POST['pieza_31']);
    $pieza_41 = limpiar(empty($_POST["pieza_41"]) ? "" : $_POST['pieza_41']);
    $pieza_71 = limpiar(empty($_POST["pieza_71"]) ? "" : $_POST['pieza_71']);
    $pieza_5_placa = limpiar(empty($_POST["pieza_5_placa"]) ? "" : $_POST['pieza_5_placa']);
    $pieza_5_calculo = limpiar(empty($_POST["pieza_5_calculo"]) ? "" : $_POST['pieza_5_calculo']);
    $pieza_5_gingivitis = limpiar(empty($_POST["pieza_5_gingivitis"]) ? "" : $_POST['pieza_5_gingivitis']); 
    $pieza_46 = limpiar(empty($_POST["pieza_46"]) ? "" : $_POST['pieza_46']);
    $pieza_47 = limpiar(empty($_POST["pieza_47"]) ? "" : $_POST['pieza_47']);
    $pieza_85 = limpiar(empty($_POST["pieza_85"]) ? "" : $_POST['pieza_85']);
    $pieza_6_placa = limpiar(empty($_POST["pieza_6_placa"]) ? "" : $_POST['pieza_6_placa']);
    $pieza_6_calculo = limpiar(empty($_POST["pieza_6_calculo"]) ? "" : $_POST['pieza_6_calculo']);
    $pieza_6_gingivitis = limpiar(empty($_POST["pieza_6_gingivitis"]) ? "" : $_POST['pieza_6_gingivitis']);
    $periodontal = limpiar(empty($_POST["periodontal"]) ? "" : $_POST['periodontal']);
    $oclusion = limpiar(empty($_POST["oclusion"]) ? "" : $_POST['oclusion']); 
    $fluorosis = limpiar(empty($_POST["fluorosis"]) ? "" : $_POST['fluorosis']); 
    $cpo_1_c = limpiar(empty($_POST["cpo_1_c"]) ? "" : $_POST['cpo_1_c']); 
    $cpo_1_p = limpiar(empty($_POST["cpo_1_p"]) ? "" : $_POST['cpo_1_p']); 
    $cpo_1_o = limpiar(empty($_POST["cpo_1_o"]) ? "" : $_POST['cpo_1_o']); 
    $cpo_2_c = limpiar(empty($_POST["cpo_2_c"]) ? "" : $_POST['cpo_2_c']); 
    $cpo_2_e = limpiar(empty($_POST["cpo_2_e"]) ? "" : $_POST['cpo_2_e']); 
    $cpo_2_o = limpiar(empty($_POST["cpo_2_o"]) ? "" : $_POST['cpo_2_o']); 
	$biometria = limpiar(empty($_POST["biometria"]) ? "" : $_POST['biometria']);
	$quimica = limpiar(empty($_POST["quimica"]) ? "" : $_POST['quimica']);
	$rayosx = limpiar(empty($_POST["rayosx"]) ? "" : $_POST['rayosx']);
	$otros_planes = limpiar(empty($_POST["otros_planes"]) ? "" : $_POST['otros_planes']);
	$observaciones_planes = limpiar(empty($_POST["observaciones_planes"]) ? "" : $_POST['observaciones_planes']);

    ################# DX PRESUNTIVO #################
	$cont = 0;
	$arrayBD = array();
	$idciepres = $_POST["idciepresuntivoingreso"];
	$pres = $_POST["presuntivoingreso"];
	for($cont; $cont<count($_POST["presuntivoingreso"]); $cont++):
		$arrayBD[] = trim($idciepres[$cont]."/".$pres[$cont]."\n");
	endfor;
	$dxpres = implode(",,",$arrayBD);
    ################# DX PRESUNTIVO #################

    ################# DX DEFINITIVO #################
	$cont = 0;
	$arrayBD = array();
	$idciedef = $_POST["idciedefinitivoingreso"];
	$def = $_POST["definitivoingreso"];
	for($cont; $cont<count($_POST["definitivoingreso"]); $cont++):
		$arrayBD[] = trim($idciedef[$cont]."/".$def[$cont]."\n");
	endfor;
	$dxdef = implode(",,",$arrayBD);
    ################# DX DEFINITIVO #################

    $idodontologia = limpiar(decrypt($_POST["idodontologia"]));
    $cododontologia = limpiar(decrypt($_POST["cododontologia"]));
    $codpaciente = limpiar(decrypt($_POST["codpaciente"]));
	$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
    $stmt->execute();

    ################## ACTUALIZAMOS SESIONES DE ODONTOLOGIA ####################
	if (isset($_POST["coddetalleodontologia"])) {
	    for($i=0;$i<count($_POST['coddetalleodontologia']);$i++){  //recorro el array
		   if (!empty($_POST['coddetalleodontologia'][$i])) {

		   	$sql = "UPDATE detalles_odontologia set"
		   	." diagnostico = ?, "
		   	." procedimientos = ?, "
		   	." prescripciones = ? "
		   	." where "
		   	." coddetalleodontologia = ?;
		   	";
		   	$stmt = $this->dbh->prepare($sql);
		   	$stmt->bindParam(1, $diagnostico);
		   	$stmt->bindParam(2, $procedimientos);
		   	$stmt->bindParam(3, $prescripciones);
		   	$stmt->bindParam(4, $coddetalleodontologia);

		   	$diagnostico = limpiar($_POST["diagnostico"][$i]);
		   	$procedimientos = limpiar($_POST["procedimientos"][$i]);
		   	$prescripciones = limpiar($_POST["prescripciones"][$i]);
		   	$coddetalleodontologia = limpiar($_POST["coddetalleodontologia"][$i]);
		   	$stmt->execute();

		   }
       }
	}
	################### ACTUALIZAMOS SESIONES DE ODONTOLOGIA ##################

	echo "<span class='fa fa-check-square-o'></span> LA CONSULTA ODONTOLOGICA HA SIDO ACTUALIZADA EXITOSAMENTE <a href='reportepdf?numero=".encrypt($cododontologia)."&tipo=".encrypt("CONSTANCIA_ODONTOLOGIA")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Odontologia' target='_black' rel='noopener noreferrer'><strong>IMPRIMIR FICHA ODONTOLOGICA</strong></a>";

	/*echo "<script>window.open('reportepdf?numero=".encrypt($cododontologia)."&tipo=".encrypt("CONSTANCIA_ODONTOLOGIA")."', '_blank');</script>";*/
	exit;	
}
########################## FUNCION ACTUALIZAR ODONTOLOGIA #######################


############################ FUNCION ELIMINAR ODONTOLOGIA ###########################
public function EliminarOdontologias()
	{
	self::SetNames();
	
	if($_SESSION['acceso'] == "administrador" || $_SESSION['acceso'] == "medico") {
		
	$sql = "DELETE FROM odontologias WHERE cododontologia = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1,$cododontologia);
	$cododontologia = decrypt($_GET["cododontologia"]);
	$codsucursal = decrypt($_GET["codsucursal"]);
	$stmt->execute();
		
	$sql = "DELETE FROM referenciasodontograma WHERE codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1,$codpaciente);
	$codpaciente = decrypt($_GET["codpaciente"]);
	$stmt->execute();

	//funcion para eliminar una carpeta con contenido
    $codpaciente = decrypt($_GET["codpaciente"]);
    $archivos = "fotos/odontograma/O_".$codpaciente."_".$codsucursal.".png";		
    unlink($archivos);
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
}  
############################ FUNCION ELIMINAR ODONTOLOGIA ###########################

################################ FUNCION BUSQUEDA ODONTOLOGIA POR FECHAS ################################
public function BuscarOdontologiasxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	odontologias.idodontologia,
	odontologias.cododontologia,
	odontologias.nrodocumento,  
	odontologias.codcita,
	odontologias.codsucursal,
	odontologias.codmedico, 
	odontologias.codpaciente, 
	odontologias.motivo_consulta,
	odontologias.problema_actual,
	odontologias.observaciones_antecedentes,
	odontologias.observaciones_examen,
	odontologias.presuntivo,
	odontologias.definitivo,
	odontologias.fechaodontologia,
	odontologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM odontologias 
	LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE odontologias.codsucursal = ?
	AND odontologias.codmedico = ?
	AND DATE_FORMAT(odontologias.fechaodontologia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY odontologias.fechaodontologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	odontologias.idodontologia,
	odontologias.cododontologia,
	odontologias.nrodocumento,  
	odontologias.codcita,
	odontologias.codsucursal,
	odontologias.codmedico, 
	odontologias.codpaciente, 
	odontologias.motivo_consulta,
	odontologias.problema_actual,
	odontologias.observaciones_antecedentes,
	odontologias.observaciones_examen,
	odontologias.presuntivo,
	odontologias.definitivo,
	odontologias.fechaodontologia,
	odontologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM odontologias 
	LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE odontologias.codsucursal = ? 
	AND DATE_FORMAT(odontologias.fechaodontologia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY odontologias.fechaodontologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA ODONTOLOGIA POR FECHAS ################################

################################ FUNCION BUSQUEDA ODONTOLOGIA POR MEDICOS ################################
public function BuscarOdontologiasxMedico()
{
	self::SetNames();
	$sql ="SELECT 
	odontologias.idodontologia,
	odontologias.cododontologia,
	odontologias.nrodocumento,  
	odontologias.codcita,
	odontologias.codsucursal,
	odontologias.codmedico, 
	odontologias.codpaciente, 
	odontologias.motivo_consulta,
	odontologias.problema_actual,
	odontologias.observaciones_antecedentes,
	odontologias.observaciones_examen,
	odontologias.presuntivo,
	odontologias.definitivo,
	odontologias.fechaodontologia,
	odontologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM odontologias 
	LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE odontologias.codsucursal = ? 
	AND odontologias.codmedico = ? 
	AND DATE_FORMAT(odontologias.fechaodontologia,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY odontologias.fechaodontologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA ODONTOLOGIA POR MEDICOS ################################

################################ FUNCION BUSQUEDA ODONTOLOGIA POR PACIENTE ################################
public function BuscarOdontologiasxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	odontologias.idodontologia,
	odontologias.cododontologia,
	odontologias.nrodocumento,  
	odontologias.codcita,
	odontologias.codsucursal,
	odontologias.codmedico, 
	odontologias.codpaciente, 
	odontologias.motivo_consulta,
	odontologias.problema_actual,
	odontologias.observaciones_antecedentes,
	odontologias.observaciones_examen,
	odontologias.presuntivo,
	odontologias.definitivo,
	odontologias.fechaodontologia,
	odontologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM odontologias 
	LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE odontologias.codsucursal = ?
	AND odontologias.codmedico = ?
	AND odontologias.codpaciente = ? 
	ORDER BY odontologias.fechaodontologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	odontologias.idodontologia,
	odontologias.cododontologia,
	odontologias.nrodocumento,  
	odontologias.codcita,
	odontologias.codsucursal,
	odontologias.codmedico, 
	odontologias.codpaciente, 
	odontologias.motivo_consulta,
	odontologias.problema_actual,
	odontologias.observaciones_antecedentes,
	odontologias.observaciones_examen,
	odontologias.presuntivo,
	odontologias.definitivo,
	odontologias.fechaodontologia,
	odontologias.codigo,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM odontologias 
	LEFT JOIN sucursales ON odontologias.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON odontologias.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON odontologias.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE odontologias.codsucursal = ?
	AND odontologias.codpaciente = ? 
	ORDER BY odontologias.fechaodontologia DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim($_GET['codpaciente']));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA ODONTOLOGIA POR PACIENTE ################################

##################################### CLASE ODONTOLOGIA ########################################


























##################################### CLASE CONSENTIMIENTO INFORMADO ########################################

############################ FUNCION BUSCAR PACIENTE PARA CONSENTIMIENTO ################################
public function BuscarPacientesConsentimientos()
	{
	self::SetNames();
	$sql = "SELECT 
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	documentos.documento,
	departamentos.departamento,
	provincias.provincia
	FROM pacientes 
	LEFT JOIN documentos ON pacientes.documpaciente = documentos.coddocumento
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro 
	LEFT JOIN tbl_provincia ON pacientes.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON pacientes.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON pacientes.idparroquia = tbl_parroquia.idparroquia
	WHERE pacientes.codpaciente = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim($_GET['codpaciente']));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
######################### FUNCION BUSCAR PACIENTE PARA CONSENTIMIENTO #############################

######################### FUNCION REGISTRAR CONSENTIMIENTO #######################
public function RegistrarConsentimientos()
{
	self::SetNames();
	if(empty($_POST["codsucursal"]) or empty($_POST["codespecialidad"]) or empty($_POST["codmedico"]) or empty($_POST["tipoconsentimiento"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}
	
	################ CODIGO DE CONSENTIMIENTO ################
	$sql = "SELECT codconsentimiento FROM consentimientoinformado 
	ORDER BY idconsentimiento DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$consentimiento=$row["codconsentimiento"];

	}
	if(empty($consentimiento))
	{
		$codconsentimiento = "01";

	} else {

		$num = substr($consentimiento, 0);
        $dig = $num + 1;
        $codigofinal = str_pad($dig, 2, "0", STR_PAD_LEFT);
        $codconsentimiento = $codigofinal;
	}
	################ CODIGO DE CONSENTIMIENTO ################

    ################ CREO DOCUMENTO DE CONSENTIMIENTO ####################
	$sql = "SELECT nrodocumento FROM consentimientoinformado 
	WHERE codsucursal = '".limpiar(decrypt($_POST["codsucursal"]))."'
	ORDER BY idconsentimiento DESC LIMIT 1";
	foreach ($this->dbh->query($sql) as $row){

		$documento=$row["nrodocumento"];

	}
	if(empty($documento))
	{
		$nrodocumento = "01";

	} else {

		$num = substr($documento, 0);
        $digitos = $num + 1;
        $numfinal = str_pad($digitos, 2, "0", STR_PAD_LEFT);
        $nrodocumento = $numfinal;
	}
    ################ CREO DOCUMENTO DE CONSENTIMIENTO ###############
			
	$sql = "SELECT
	codsucursal,
	codmedico, 
	codpaciente,
	tipoconsentimiento, 
	fechaconsentimiento 
	FROM consentimientoinformado WHERE codsucursal = ? AND codmedico = ? AND codpaciente = ? AND DATE_FORMAT(fechaconsentimiento,'%Y-%m-%d') = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codsucursal"]), decrypt($_POST["codmedico"]), limpiar($_POST["codpaciente"]), date("Y-m-d")));
	$num = $stmt->rowCount();
	if($num == 0)
	{
		
	    ######################### REGISTRO EL CONSENTIMIENTO INFORMADO #########################
	    $query = "INSERT INTO consentimientoinformado values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";
		$stmt = $this->dbh->prepare($query);
		$stmt->bindParam(1, $codconsentimiento);
		$stmt->bindParam(2, $nrodocumento);
		$stmt->bindParam(3, $codsucursal);
		$stmt->bindParam(4, $codmedico);
		$stmt->bindParam(5, $codpaciente);
		$stmt->bindParam(6, $tipoconsentimiento);
		$stmt->bindParam(7, $procedimiento);
		$stmt->bindParam(8, $anestesia);
		$stmt->bindParam(9, $enfermedad);
		$stmt->bindParam(10, $observaciones);
		$stmt->bindParam(11, $doctestigo);
		$stmt->bindParam(12, $nombretestigo);
		$stmt->bindParam(13, $nofirmapaciente);
		$stmt->bindParam(14, $fechaconsentimiento);
			
		$codsucursal = limpiar(decrypt($_POST["codsucursal"]));
		$codmedico = limpiar(decrypt($_POST["codmedico"]));
		$codpaciente = limpiar($_POST["codpaciente"]);
		$tipoconsentimiento = limpiar(decrypt($_POST["tipoconsentimiento"]));
		$procedimiento = limpiar(isset($_POST["procedimiento"]) ? $_POST["procedimiento"] : "");
		$anestesia = limpiar(isset($_POST["anestesia"]) ? $_POST["anestesia"] : "");
		$enfermedad = limpiar(isset($_POST["enfermedad"]) ? $_POST["enfermedad"] : "");
		$observaciones = limpiar(isset($_POST["observaciones"]) ? $_POST["observaciones"] : "");
		$doctestigo = limpiar($_POST["doctestigo"]);
		$nombretestigo = limpiar($_POST["nombretestigo"]);
		$nofirmapaciente = limpiar($_POST["nofirmapaciente"]);
		$fechaconsentimiento = limpiar(date("Y-m-d H:i:s"));
		$stmt->execute();
		######################### REGISTRO EL CONSENTIMIENTO INFORMADO #########################

	echo "<span class='fa fa-check-square-o'></span> EL CONSENTIMIENTO INFORMADO HA SIDO REGISTRADO EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codconsentimiento)."&tipo=".encrypt("CONSTANCIA_CONSENTIMIENTO")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Documento' target='_black' rel='noopener noreferrer'><font color='black'><strong>IMPRIMIR CONSENTIMIENTO</strong></font color></a>";

	echo "<script>window.open('reportepdf?numero=".encrypt($codconsentimiento)."&tipo=".encrypt("CONSTANCIA_CONSENTIMIENTO")."', '_blank');</script>";
		exit;

	} else {

		echo "2";
		exit;
	}
}
######################### FUNCION REGISTRAR CONSENTIMIENTO #########################

############################ FUNCION LISTAR CONSENTIMIENTO #############################
public function ListarConsentimientos()
{
	self::SetNames();

	if ($_SESSION['acceso'] == "medico") {

	$sql = "SELECT
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM consentimientoinformado 
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE consentimientoinformado.codmedico = '".limpiar($_SESSION["codmedico"])."'
	AND consentimientoinformado.codsucursal = '".limpiar($_SESSION["codsucursal"])."'";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	
	} else {

	$sql = "SELECT
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM consentimientoinformado 
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
############################ FUNCION LISTAR CONSENTIMIENTO #############################

########################### FUNCION ID CONSENTIMIENTO ###############################
public function ConsentimientosPorId()
{
	self::SetNames();
	$sql = "SELECT
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	pacientes.pnompaciente,
	pacientes.snompaciente,
	pacientes.papepaciente,
	pacientes.sapepaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.direcpaciente,
	pacientes.barriopaciente,
	pacientes.idparroquia AS idparroquia2,
	pacientes.idcanton AS idcanton2,
	pacientes.idprovincia AS idprovincia2,
	pacientes.zonapaciente,
	pacientes.tlfpaciente,
	pacientes.fnacpaciente,
	pacientes.lnacpaciente,
	pacientes.nacpaciente,
	pacientes.enfoquepaciente,
	pacientes.sexopaciente,
	pacientes.estadopaciente,
	pacientes.instruccionpaciente,
	pacientes.ocupacionpaciente,
	pacientes.trabajapaciente,
	pacientes.codseguro,
	pacientes.referidopaciente,
	pacientes.gruposapaciente,
	pacientes.emailpaciente,
	pacientes.nomacompana,
	pacientes.direcacompana,
	pacientes.tlfacompana,
	pacientes.parentescoacompana,
	pacientes.nomresponsable,
	pacientes.direcresponsable,
	pacientes.tlfresponsable,
	pacientes.parentescoresponsable,
	pacientes.fecha_admision,
	seguros.nomseguro,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
	sucursales.idprovincia,
	sucursales.idcanton,
	sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
	tbl_parroquia.parroquia,
	tbl_provincia2.provincia AS provincia2,
	tbl_canton2.canton AS canton2,
	tbl_parroquia2.parroquia AS parroquia2
	FROM consentimientoinformado
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN seguros ON pacientes.codseguro = seguros.codseguro
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	LEFT JOIN tbl_provincia AS tbl_provincia2 ON pacientes.idprovincia = tbl_provincia2.idprovincia
	LEFT JOIN tbl_canton AS tbl_canton2 ON pacientes.idcanton = tbl_canton2.idcanton
	LEFT JOIN tbl_parroquia AS tbl_parroquia2 ON pacientes.idparroquia = tbl_parroquia2.idparroquia
	WHERE consentimientoinformado.codconsentimiento = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_GET["numero"])));
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "";
	}
	else
	{
		if($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[]=$row;
		}
		return $this->p;
		$this->dbh=null;
	}
}	
########################### FUNCION ID CONSENTIMIENTO ###############################

################################ FUNCION PARA ACTUALIZAR CONSENTIMIENTO #################################
public function ActualizarConsentimientos()
	{
	self::SetNames();
	if(empty($_POST["codconsentimiento"]) or empty($_POST["codsucursal"]) or empty($_POST["codespecialidad"]) or empty($_POST["codmedico"]) or empty($_POST["tipoconsentimiento"]) or empty($_POST["codpaciente"]))
	{
		echo "1";
		exit;
	}

	$sql = "SELECT * FROM consentimientoinformado WHERE codconsentimiento != ? AND codsucursal = ? AND codmedico = ? AND codpaciente = ? AND DATE_FORMAT(fechaconsentimiento,'%Y-%m-%d') = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->execute(array(decrypt($_POST["codconsentimiento"]),decrypt($_POST["codsucursal"]),decrypt($_POST["codmedico"]),decrypt($_POST["codpaciente"]),date("Y-m-d")));
	$num = $stmt->rowCount();
	if($num == 0)
	{

	$sql = " UPDATE consentimientoinformado set "
		  ." procedimiento = ?, "
		  ." anestesia = ?, "
		  ." enfermedad = ?, "
		  ." observaciones = ? "
		  ." WHERE "
		  ." codconsentimiento = ?;
		   ";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1, $procedimiento);
	$stmt->bindParam(2, $anestesia);
	$stmt->bindParam(3, $enfermedad);
	$stmt->bindParam(4, $observaciones);
	$stmt->bindParam(5, $codconsentimiento);
		
	$procedimiento = limpiar(isset($_POST["procedimiento"]) ? $_POST["procedimiento"] : "");
	$anestesia = limpiar(isset($_POST["anestesia"]) ? $_POST["anestesia"] : "");
	$enfermedad = limpiar(isset($_POST["enfermedad"]) ? $_POST["enfermedad"] : "");
	$observaciones = limpiar(isset($_POST["observaciones"]) ? $_POST["observaciones"] : "");
	$codconsentimiento = limpiar(decrypt($_POST["codconsentimiento"]));
	$stmt->execute();
	
	echo "<span class='fa fa-check-square-o'></span> EL CONSENTIMIENTO INFORMADO HA SIDO ACTUALIZADO EXITOSAMENTE <a href='reportepdf?numero=".encrypt($codconsentimiento)."&tipo=".encrypt("CONSTANCIA_CONSENTIMIENTO")."' class='on-default' data-placement='left' data-toggle='tooltip' data-original-title='Imprimir Documento' target='_black' rel='noopener noreferrer'><font color='black'><strong>IMPRIMIR CONSENTIMIENTO</strong></font color></a>";

	echo "<script>window.open('reportepdf?numero=".encrypt($codconsentimiento)."&tipo=".encrypt("CONSTANCIA_CONSENTIMIENTO")."', '_blank');</script>";
	exit;

	} else {

		echo "2";
		exit;
	}
}
############################### FUNCION PARA ACTUALIZAR CONSENTIMIENTO ##############################

########################### FUNCION ELIMINAR CONSENTIMIENTO ###########################
public function EliminarConsentimientos()
	{
	self::SetNames();

	if($_SESSION['acceso'] == "administrador" || $_SESSION['acceso'] == "medico") {
		
	$sql = "DELETE FROM consentimientoinformado WHERE codconsentimiento = ?";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindParam(1,$codconsentimiento);
	$codconsentimiento = decrypt($_GET["codconsentimiento"]);
	$stmt->execute();
		
		echo "1";
		exit;
		   
	} else {
		   
		echo "2";
		exit;
    }	
} 
########################### FUNCION ELIMINAR CONSENTIMIENTO ###########################

################################ FUNCION BUSQUEDA CONSENTIMIENTO POR FECHAS ################################
public function BuscarConsentimientosxFechas()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM consentimientoinformado 
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE consentimientoinformado.codsucursal = ?
	AND consentimientoinformado.codmedico = ?
	AND DATE_FORMAT(consentimientoinformado.fechaconsentimiento,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY consentimientoinformado.fechaconsentimiento DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
   $sql ="SELECT 
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM consentimientoinformado 
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE consentimientoinformado.codsucursal = ? 
	AND DATE_FORMAT(consentimientoinformado.fechaconsentimiento,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY consentimientoinformado.fechaconsentimiento DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA CONSENTIMIENTO POR FECHAS ################################

################################ FUNCION BUSQUEDA CONSENTIMIENTO POR MEDICOS ################################
public function BuscarConsentimientosxMedico()
{
	self::SetNames();
	$sql ="SELECT 
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM consentimientoinformado 
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE consentimientoinformado.codsucursal = ? 
	AND consentimientoinformado.codmedico = ? 
	AND DATE_FORMAT(consentimientoinformado.fechaconsentimiento,'%Y-%m-%d') BETWEEN ? AND ?
	ORDER BY consentimientoinformado.fechaconsentimiento DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(decrypt($_GET['codmedico'])));
	$stmt->bindValue(3, trim(date("Y-m-d",strtotime($_GET['desde']))));
	$stmt->bindValue(4, trim(date("Y-m-d",strtotime($_GET['hasta']))));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
################################ FUNCION BUSQUEDA CONSENTIMIENTO POR MEDICOS ################################

################################ FUNCION BUSQUEDA CONSENTIMIENTO POR PACIENTE ################################
public function BuscarConsentimientosxPaciente()
{
	self::SetNames();

	if ($_SESSION["acceso"]=="medico") {

	$sql ="SELECT 
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM consentimientoinformado 
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento
	WHERE consentimientoinformado.codsucursal = ?
	AND consentimientoinformado.codmedico = ?
	AND consentimientoinformado.codpaciente = ? 
	ORDER BY consentimientoinformado.fechaconsentimiento DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim(limpiar($_SESSION['codmedico'])));
	$stmt->bindValue(3, trim(limpiar($_GET['codpaciente'])));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
    } else {
   
    $sql ="SELECT 
	consentimientoinformado.idconsentimiento,
	consentimientoinformado.codconsentimiento,
	consentimientoinformado.nrodocumento,
	consentimientoinformado.tipoconsentimiento,
	consentimientoinformado.codsucursal,
	consentimientoinformado.codmedico,
	consentimientoinformado.codpaciente,
	consentimientoinformado.procedimiento,
	consentimientoinformado.anestesia,
	consentimientoinformado.enfermedad,
	consentimientoinformado.observaciones,
	consentimientoinformado.doctestigo,
	consentimientoinformado.nombretestigo,
	consentimientoinformado.nofirmapaciente,
	consentimientoinformado.fechaconsentimiento,
	medicos.docummedico,
	medicos.cedmedico, 
	medicos.nommedico,
	medicos.codespecialidad,
	medicos.mps,
	especialidades.nomespecialidad,
	pacientes.codpaciente,
	pacientes.numerohistoria,
	pacientes.documpaciente,
	pacientes.cedpaciente,
	CONCAT(pacientes.pnompaciente, ' ',if(pacientes.snompaciente='','',pacientes.snompaciente)) as nompaciente,
	CONCAT(pacientes.papepaciente, ' ',if(pacientes.sapepaciente='','',pacientes.sapepaciente)) as apepaciente,
	pacientes.sexopaciente,
	pacientes.gruposapaciente,
	pacientes.ocupacionpaciente,
	pacientes.estadopaciente,
	pacientes.fnacpaciente,
	pacientes.tlfpaciente,
	pacientes.direcpaciente,
	pacientes.nomacompana,
	pacientes.parentescoacompana,
	sucursales.documsucursal, 
	sucursales.cuitsucursal, 
	sucursales.nomsucursal,
	sucursales.documencargado,
	sucursales.dniencargado,
	sucursales.nomencargado,
    sucursales.idprovincia,
    sucursales.idcanton,
    sucursales.idparroquia,
	sucursales.direcsucursal,
	sucursales.tlfsucursal,
	sucursales.correosucursal,
	documentos.documento,
	documentos2.documento AS documento2,
	documentos3.documento AS documento3,
	documentos4.documento AS documento4,
	tbl_provincia.provincia,
	tbl_canton.canton,
    tbl_parroquia.parroquia
	FROM consentimientoinformado 
	LEFT JOIN sucursales ON consentimientoinformado.codsucursal = sucursales.codsucursal
	LEFT JOIN documentos ON sucursales.documsucursal = documentos.coddocumento
	LEFT JOIN documentos AS documentos2 ON sucursales.documencargado = documentos2.coddocumento 
	LEFT JOIN tbl_provincia ON sucursales.idprovincia = tbl_provincia.idprovincia
	LEFT JOIN tbl_canton ON sucursales.idcanton = tbl_canton.idcanton
	LEFT JOIN tbl_parroquia ON sucursales.idparroquia = tbl_parroquia.idparroquia
	LEFT JOIN medicos ON consentimientoinformado.codmedico = medicos.codmedico
	LEFT JOIN documentos AS documentos3 ON medicos.docummedico = documentos3.coddocumento
	LEFT JOIN especialidades ON medicos.codespecialidad = especialidades.codespecialidad
	LEFT JOIN pacientes ON consentimientoinformado.codpaciente = pacientes.codpaciente
	LEFT JOIN documentos AS documentos4 ON pacientes.documpaciente = documentos4.coddocumento 
	WHERE consentimientoinformado.codsucursal = ?
	AND consentimientoinformado.codpaciente = ? 
	ORDER BY consentimientoinformado.fechaconsentimiento DESC";
	$stmt = $this->dbh->prepare($sql);
	$stmt->bindValue(1, trim(decrypt($_GET['codsucursal'])));
	$stmt->bindValue(2, trim($_GET['codpaciente']));
	$stmt->execute();
	$num = $stmt->rowCount();
	if($num==0)
	{
		echo "<div class='alert alert-danger'>";
	    echo "<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>";
        echo "<center> <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-alert-triangle'><path d='M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'></path><line x1='12' y1='9' x2='12' y2='13'></line><line x1='12' y1='17' x2='12.01' y2='17'></line></svg> NO SE ENCONTRARON RESULTADOS PARA TU B&Uacute;SQUEDA REALIZADA</center>";
        echo "</div>";		
	    exit;
	}
	else
	{
		while($row = $stmt->fetch(PDO::FETCH_ASSOC))
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	    }
    }
}
################################ FUNCION BUSQUEDA CONSENTIMIENTO POR PACIENTE ################################

##################################### CLASE CONSENTIMIENTO INFORMADO ########################################

















##################################### CLASE GRAFICOS ########################################

############################### FUNCION PARA CONTAR CITAS #################################
public function ContarCitas()
{
    if($_SESSION['acceso'] == "medico"){

    	$sql = "SELECT
    	(SELECT COUNT(*) FROM citasmedicas WHERE codmedico = '".limpiar($_SESSION['codmedico'])."' AND statuscita = 1) AS atendidas,
    	(SELECT COUNT(*) FROM citasmedicas WHERE codmedico = '".limpiar($_SESSION['codmedico'])."' AND statuscita = 2) AS pendientes,
    	(SELECT COUNT(*) FROM citasmedicas WHERE codmedico = '".limpiar($_SESSION['codmedico'])."' AND statuscita = 3) AS canceladas,
    	(SELECT COUNT(*) FROM citasmedicas WHERE codmedico = '".limpiar($_SESSION['codmedico'])."' AND statuscita = 4) AS vencidas";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;

	
    } else { 

    	$sql = "SELECT
    	(SELECT COUNT(*) FROM citasmedicas WHERE statuscita = 1) AS atendidas,
    	(SELECT COUNT(*) FROM citasmedicas WHERE statuscita = 2) AS pendientes,
    	(SELECT COUNT(*) FROM citasmedicas WHERE statuscita = 3) AS canceladas,
    	(SELECT COUNT(*) FROM citasmedicas WHERE statuscita = 4) AS vencidas";
		foreach ($this->dbh->query($sql) as $row)
		{
			$this->p[] = $row;
		}
		return $this->p;
		$this->dbh=null;
	}
}
########################### FIN DE FUNCION PARA CONTAR CITAS ##############################

########################## FUNCION GRAFICO POR SUCURSALES ##########################
public function GraficoxSucursal()
{
	self::SetNames();
    $sql = "SELECT 
    sucursales.codsucursal id,
	sucursales.nomsucursal,
    pag.sumatendidas,
    pag2.sumcanceladas,
    pag3.sumvencidas
     FROM
       sucursales
     LEFT JOIN
       ( SELECT
           codsucursal, COUNT(codcita) AS sumatendidas         
           FROM citasmedicas WHERE statuscita = 2 AND DATE_FORMAT(fechacita,'%Y') = '".date("Y")."' GROUP BY codsucursal) pag ON pag.codsucursal = sucursales.codsucursal  
     LEFT JOIN
       ( SELECT
           codsucursal, COUNT(codcita) AS sumcanceladas
         FROM citasmedicas WHERE statuscita = 3 AND DATE_FORMAT(fechacita,'%Y') = '".date("Y")."' GROUP BY codsucursal) pag2 ON pag2.codsucursal = sucursales.codsucursal 
     LEFT JOIN
       ( SELECT
           codsucursal, COUNT(codcita) AS sumvencidas
         FROM citasmedicas WHERE statuscita = 4 AND DATE_FORMAT(fechacita,'%Y') = '".date("Y")."' GROUP BY codsucursal) pag3 ON pag3.codsucursal = sucursales.codsucursal GROUP BY id";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
########################## FUNCION GRAFICO POR SUCURSALES ###########################

########################### FUNCION SUMA DE CITAS ATENDIDAS #################################
 public function SumaCitasAtendidas()
{
	self::SetNames();
	$sql ="SELECT  
	MONTH(fechaventa) mes, 
	SUM(totalpago) totalmes
	FROM citasmedicas 
	WHERE codsucursal = '".limpiar($_SESSION["codsucursal"])."' AND YEAR(fechaventa) = '".date('Y')."' AND MONTH(fechaventa) GROUP BY MONTH(fechaventa) ORDER BY 1";
	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
########################### FUNCION SUMA DE CITAS ATENDIDAS #################################

######################### FUNCION PARA GRAFICOS EN GINECOLOGIA ############################
public function GraficosGinecologia()
{
$sql = "SELECT
(SELECT COUNT(*) FROM criocauterizaciones) AS cauterizacion,
(SELECT COUNT(*) FROM colposcopias) AS colposcopia,
(SELECT COUNT(*) FROM ecografias) AS ecografia";

	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
####################### FIN DE FFUNCION PARA GRAFICOS EN GINECOLOGIA ########################

######################## FUNCION PARA GRAFICOS EN RADIOLOGIA ########################
public function GraficosRadiologia()
{
$sql = "SELECT
(SELECT COUNT(*) FROM radiologias WHERE lectura = 1) AS si,
(SELECT COUNT(*) FROM radiologias WHERE lectura = 2) AS no";

	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
######################## FUNCION PARA GRAFICOS EN RADIOLOGIA ########################

######################## FUNCION PARA GRAFICOS EN SEXO ########################
public function GraficosSexo()
{
$sql = "SELECT
(SELECT COUNT(*) FROM pacientes WHERE sexopaciente = 'MASCULINO') AS masculino,
(SELECT COUNT(*) FROM pacientes WHERE sexopaciente = 'FEMENINO') AS femenino";

	foreach ($this->dbh->query($sql) as $row)
	{
		$this->p[] = $row;
	}
	return $this->p;
	$this->dbh=null;
}
######################## FUNCION PARA GRAFICOS EN SEXO ########################

##################################### CLASE GRAFICOS ########################################




}
############## TERMINA LA CLASE LOGIN ######################
?>